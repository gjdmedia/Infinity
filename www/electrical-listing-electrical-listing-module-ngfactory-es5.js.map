{"version":3,"sources":["webpack:///src/app/electrical/listing/electrical-listing.module.ts","webpack:///src/app/electrical/listing/electrical-listing.page.html","webpack:///src/app/electrical/listing/electrical-listing.page.ts","webpack:///src/app/electrical/listing/electrical-listing.resolver.ts"],"names":["routes","path","component","resolve","data","ElectricalListingPageModule","ElectricalListingPage","route","subscriptions","subscribe","resolvedRouteData","extractData","state","listing","error","unsubscribe","isShell","ElectricalListingResolver","electricalService","dataSource","getListingDataSource","dataStore","getListingStore"],"mappings":"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","file":"electrical-listing-electrical-listing-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { ElectricalService } from '../electrical.service';\nimport { ElectricalListingPage } from './electrical-listing.page';\nimport { ElectricalListingResolver } from './electrical-listing.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ElectricalListingPage,\n    resolve: {\n      data: ElectricalListingResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    ElectricalListingPage\n  ],\n  providers: [\n    ElectricalListingResolver,\n    ElectricalService\n  ]\n})\nexport class ElectricalListingPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>Electrical</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ng-container *ngIf=\"listing?.items\">\n    <div class=\"listing-item\" *ngFor=\"let item of listing.items\">\n      <ion-row class=\"image-row\">\n        <ion-col size=\"12\">\n          <app-image-shell [display]=\"'cover'\" class=\"add-overlay item-image\" [src]=\"item.image\" [routerLink]=\"['/app/categories/electrical/', item.slug]\">\n            <app-aspect-ratio [ratio]=\"{w:3, h:2}\">\n              <div class=\"content-inside-item-image\">\n                <div class=\"item-icon\">\n                  <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n                    <app-image-shell [src]=\"item.icon\" class=\"icon-image\"></app-image-shell>\n                  </app-aspect-ratio>\n                </div>\n                <div class=\"item-cta\">\n                  <span><app-text-shell animation=\"bouncing\" [data]=\"(item?.name && item?.category) ? (item.name + ' - ' + item.category) : (item.name)\"></app-text-shell></span>\n                  <ion-icon class=\"cta-icon\" name=\"arrow-forward\"></ion-icon>\n                </div>\n              </div>\n            </app-aspect-ratio>\n          </app-image-shell>\n        </ion-col>\n      </ion-row>\n      <!-- <ion-row class=\"info-row\">\n        <ion-col class=\"main-info-col\">\n          <h3 class=\"item-name\">\n            <a class=\"name-anchor\" [routerLink]=\"['/app/categories/electrical/', item.slug]\">\n              <app-text-shell animation=\"bouncing\" [data]=\"(item?.name && item?.category) ? (item.name + ' - ' + item.category) : (item.name)\"></app-text-shell>\n            </a>\n          </h3>\n          <p class=\"item-description\">\n            <app-text-shell animation=\"bouncing\" [data]=\"item.description\" lines=\"3\"></app-text-shell>\n          </p>\n          <p class=\"item-address\">\n            <app-text-shell animation=\"bouncing\" [data]=\"item.address\"></app-text-shell>\n          </p>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"stats-row\">\n        <ion-col size=\"2\" class=\"item-rating\">\n          <span class=\"rating-value\">\n            <app-text-shell [data]=\"item.rating\"></app-text-shell>\n          </span>\n          <ion-icon class=\"stats-icon\" src=\"./assets/custom-icons/travel/star.svg\"></ion-icon>\n        </ion-col>\n        <ion-col size=\"2\" class=\"item-reviews\">\n          <span class=\"reviews-count\">\n            <app-text-shell [data]=\"item.reviewsCount\"></app-text-shell>\n          </span>\n          <ion-icon class=\"stats-icon\" src=\"./assets/custom-icons/travel/comments.svg\"></ion-icon>\n        </ion-col>\n      </ion-row> -->\n    </div>\n  </ng-container>\n</ion-content>","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { ElectricalListingModel } from './electrical-listing.model';\n\n@Component({\n  selector: 'app-electrical-listing',\n  templateUrl: './electrical-listing.page.html',\n  styleUrls: [\n    './styles/electrical-listing.page.scss',\n    './styles/electrical-listing.shell.scss'\n  ]\n})\nexport class ElectricalListingPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  listing: ElectricalListingModel;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.listing && this.listing.isShell) ? true : false;\n  }\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<ElectricalListingModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<ElectricalListingModel>(resolvedRouteData.data, ElectricalListingModel)\n        .subscribe(\n          (state) => {\n            this.listing = state;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { ElectricalService } from '../electrical.service';\nimport { ElectricalListingModel } from './electrical-listing.model';\n\n@Injectable()\nexport class ElectricalListingResolver implements Resolve<DataStore<ElectricalListingModel>> {\n\n  constructor(private electricalService: ElectricalService) {}\n\n  resolve(): DataStore<ElectricalListingModel> {\n    const dataSource: Observable<ElectricalListingModel> = this.electricalService.getListingDataSource();\n    const dataStore: DataStore<ElectricalListingModel> = this.electricalService.getListingStore(dataSource);\n\n    return dataStore;\n  }\n}\n"]}