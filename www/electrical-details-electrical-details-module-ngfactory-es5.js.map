{"version":3,"sources":["webpack:///src/app/electrical/details/electrical-details.module.ts","webpack:///src/app/electrical/details/electrical-details.page.html","webpack:///src/app/electrical/details/electrical-details.page.ts","webpack:///src/app/electrical/details/electrical-details.resolver.ts"],"names":["routes","path","component","resolve","data","ElectricalDetailsPageModule","ElectricalDetailsPage","menu","route","toastController","slidesOptions","zoom","toggle","isFirstSlide","isLastSlide","generateSides","enable","slides","isBeginning","then","isEnd","ionSlideWillChange","subscribe","changes","length","slideTo","qCharge","Math","floor","random","precision","tTime","pResist","lLength","csArea","vVolts","iCur","r1","r2","r3","seriesVoltage","mgFlux","conLength","conCurrent","staticEMF","staticTime","subscriptions","resolvedRouteData","extractData","state","details","error","create","header","message","position","buttons","text","role","handler","iCurrent","rValue","resistR","seriesRtotal","seriesI","conForce","magFlux","toast","present","duration","currentRounded","round","console","trace","presentToastCorrect","presentToastIncorrect","resistance","resistancetotal","current","forceTotal","unsubscribe","isShell","ElectricalDetailsResolver","electricalService","itemSlug","paramMap","get","dataSource","getDetailsDataSource","dataStore","getDetailsStore"],"mappings":"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","file":"electrical-details-electrical-details-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { ElectricalService } from '../electrical.service';\nimport { ElectricalDetailsPage } from './electrical-details.page';\nimport { ElectricalDetailsResolver } from './electrical-details.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ElectricalDetailsPage,\n    resolve: {\n      data: ElectricalDetailsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    ElectricalDetailsPage\n  ],\n  providers: [\n    ElectricalDetailsResolver,\n    ElectricalService\n  ]\n})\nexport class ElectricalDetailsPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories/electrical\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      <app-text-shell [data]=\"details?.name\"></app-text-shell>\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"electrical-details-content\">\n  <ion-row class=\"image-row\">\n    <ion-col size=\"12\">\n      <app-image-shell [display]=\"'cover'\" animation=\"spinner\" class=\"add-overlay showcase-image\"\n        [src]=\"details?.showcaseImage\">\n        <app-aspect-ratio [ratio]=\"{ w: 64, h: 40 }\">\n          <div class=\"icon-wrapper\">\n            <app-aspect-ratio [ratio]=\"{ w: 1, h: 1 }\">\n              <app-image-shell class=\"icon-image\" [src]=\"details?.icon\"></app-image-shell>\n            </app-aspect-ratio>\n          </div>\n        </app-aspect-ratio>\n      </app-image-shell>\n    </ion-col>\n  </ion-row>\n  <!-- <ion-row class=\"description-row\">\n    <ion-col size=\"9\">\n      <h3 class=\"details-name\">\n        <app-text-shell [data]=\"details?.name\"></app-text-shell>\n      </h3>\n      <p class=\"details-style\">\n        <app-text-shell [data]=\"details?.style\"></app-text-shell>\n      </p>\n    </ion-col>\n  </ion-row> -->\n\n\n\n  <ion-slides class=\"walkthrough-slides\" pager=\"true\" [options]=\"slidesOptions\">\n\n    <!-- Electrons Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Electrons'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <img src=\"/assets/images/electrons.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Q |(Charge) :</ion-label>\n                      <p [innerHTML]=\"qCharge\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">Coulombs</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>T (Time) :</ion-label>\n                      <p [innerHTML]=\"tTime\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">Seconds</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>I (Current) :</ion-label>\n                      <ion-input clear-input name=\"iCurrent\" [(ngModel)]=\"iCurrent\"></ion-input>\n                      <p style=\"margin-left: 5px;\">Amps</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateElectrons()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Resistance Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Resistance'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <img src=\"/assets/images/resistivity.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>p :</ion-label>\n                      <p [innerHTML]=\"pResist\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">µΩm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>L :</ion-label>\n                      <p [innerHTML]=\"lLength\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>A :</ion-label>\n                      <p [innerHTML]=\"csArea\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>R :</ion-label>\n                      <ion-input clear-input name=\"rValue\" [(ngModel)]=\"rValue\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateResistance()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Ohms Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Ohms'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/resistivity.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>V :</ion-label>\n                      <p [innerHTML]=\"vVolts\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">v</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>I :</ion-label>\n                      <p [innerHTML]=\"iCur\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">A</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>R :</ion-label>\n                      <ion-input clear-input name=\"resistR\" [(ngModel)]=\"resistR\"></ion-input>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateOhms()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Ohms Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Ohms'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/resistivity.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>V :</ion-label>\n                      <p [innerHTML]=\"vVolts\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">v</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>I :</ion-label>\n                      <p [innerHTML]=\"iCur\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">A</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>R :</ion-label>\n                      <ion-input clear-input name=\"resistR\" [(ngModel)]=\"resistR\"></ion-input>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateOhms()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Series Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Series'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <img src=\"/assets/images/series.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>The formula we will use is I = V / Rtotal</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n          <img\n            src=\"/assets/images/simple_rectangle.png\"\n            class=\"ion-padding\"\n          />\n        </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>R1 :</ion-label>\n                      <p [innerHTML]=\"r1\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>R2 :</ion-label>\n                      <p [innerHTML]=\"r2\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>R3 :</ion-label>\n                      <p [innerHTML]=\"r3\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Rtotal :</ion-label>\n                      <ion-input clear-input name=\"seriesRtotal\" [(ngModel)]=\"seriesRtotal\"></ion-input>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Voltage :</ion-label>\n                      <p [innerHTML]=\"seriesVoltage\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">v</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>I :</ion-label>\n                      <ion-input clear-input name=\"seriesI\" [(ngModel)]=\"seriesI\"></ion-input>\n                      <p style=\"margin-left: 5px;\">Amps</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSeries()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Parallel Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Parallel'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <img src=\"/assets/images/parrallel.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>The formula we will use is 1/Rtotal = 1/R1 + 1/R2 +1/R3 + …</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n          <img\n            src=\"/assets/images/simple_rectangle.png\"\n            class=\"ion-padding\"\n          />\n        </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>R1 :</ion-label>\n                      <p [innerHTML]=\"r1\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>R2 :</ion-label>\n                      <p [innerHTML]=\"r2\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>R3 :</ion-label>\n                      <p [innerHTML]=\"r3\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>1/Rtotal :</ion-label>\n                      <ion-input clear-input name=\"seriesRtotal\" [(ngModel)]=\"seriesRtotal\"></ion-input>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Voltage :</ion-label>\n                      <p [innerHTML]=\"seriesVoltage\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">v</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>I :</ion-label>\n                      <ion-input clear-input name=\"seriesI\" [(ngModel)]=\"seriesI\"></ion-input>\n                      <p style=\"margin-left: 5px;\">Amps</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateParallel()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Force Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Force'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/force.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>β (Magnetic Flux) :</ion-label>\n                      <p [innerHTML]=\"mgFlux\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">T</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>L (Conductor Length) :</ion-label>\n                      <p [innerHTML]=\"conLength\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>I (Current) :</ion-label>\n                      <p [innerHTML]=\"conCurrent\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">Amps</p>\n                    </ion-item>\n\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>F :</ion-label>\n                      <ion-input clear-input name=\"conForce\" [(ngModel)]=\"conForce\"></ion-input>\n                      <p style=\"margin-left: 5px;\">Newtons</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateForce()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- EMF Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='EMF'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/force.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>β :</ion-label>\n                      <p [innerHTML]=\"mgFlux\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">T</p>\n\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>L :</ion-label>\n                      <p [innerHTML]=\"conLength\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>V :</ion-label>\n                      <p [innerHTML]=\"conCurrent\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m / second</p>\n                    </ion-item>\n\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>E :</ion-label>\n                      <ion-input clear-input name=\"conForce\" [(ngModel)]=\"conForce\"></ion-input>\n                      <p style=\"margin-left: 5px;\">v</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateForce()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n     <!-- Static Calculations -->\n\n     <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Static'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/force.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>E (e.m.f) :</ion-label>\n                      <p [innerHTML]=\"staticEMF\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">v</p>\n\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>t :</ion-label>\n                      <p [innerHTML]=\"staticTime\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">seconds</p>\n                    </ion-item>\n          \n                    <ion-item class=\"ion-padding\">\n                      <ion-label>E :</ion-label>\n                      <ion-input clear-input name=\"magFlux\" [(ngModel)]=\"magFlux\"></ion-input>\n                      <p style=\"margin-left: 5px;\">webers</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateStatic()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n\n\n  </ion-slides>\n\n</ion-content>","import { Component, OnInit, AfterViewInit, ViewChild, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ToastController } from '@ionic/angular';\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { ElectricalDetailsModel } from './electrical-details.model';\nimport { IonSlides, MenuController } from '@ionic/angular';\nimport { analytics } from 'firebase';\nimport { compileDirectiveFromRender2 } from '@angular/compiler/src/render3/view/compiler';\nimport { AnyTxtRecord } from 'dns';\n\n\n@Component({\n  selector: 'app-electrical-details',\n  templateUrl: './electrical-details.page.html',\n  styleUrls: [\n    './styles/electrical-details.page.scss',\n    './styles/electrical-details.shell.scss'\n  ]\n\n})\nexport class ElectricalDetailsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  slidesOptions: any = {\n    zoom: {\n      toggle: false // Disable zooming to prevent weird double tap zomming on slide images\n    }\n  };\n\n\n  subscriptions: Subscription;\n  //Electrons\n  qCharge: any;\n  tTime: any;\n  iCurrent: any;\n\n  //Resistance\n  pResist: any;\n  lLength: any;\n  csArea: any;\n  rValue: any;\n\n  //Ohms\n  vVolts: any;\n  iCur: any;\n  resistR: any;\n\n  //Series & Parallel\n  r1: any;\n  r2: any;\n  r3: any;\n  seriesRtotal: any;\n  seriesVoltage: any;\n  seriesI: any;\n\n  //Force\n  mgFlux:any;\n  conLength:any;\n  conCurrent:any;\n  conForce:any;\n\n  //Static\n  staticEMF:any;\n  staticTime:any;\n  magFlux:any;\n\n  details: ElectricalDetailsModel;\n\n  @ViewChild(IonSlides, { static: true }) slides: IonSlides;\n\n  @HostBinding('class.first-slide-active') isFirstSlide = true;\n\n  @HostBinding('class.last-slide-active') isLastSlide = false;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.details && this.details.isShell) ? true : false;\n  }\n\n\n\n  constructor(public menu: MenuController, private route: ActivatedRoute, public toastController: ToastController) {\n\n    this.generateSides();\n\n  }\n\n  // Disable side menu for this page\n  ionViewDidEnter(): void {\n    this.menu.enable(true);\n  }\n\n  // Restore to default when leaving this page\n  ionViewDidLeave(): void {\n    this.menu.enable(true);\n  }\n\n  ngAfterViewInit(): void {\n    // ViewChild is set\n    this.slides.isBeginning().then(isBeginning => {\n      this.isFirstSlide = isBeginning;\n    });\n    this.slides.isEnd().then(isEnd => {\n      this.isLastSlide = isEnd;\n    });\n\n    // Subscribe to changes\n    this.slides.ionSlideWillChange.subscribe(changes => {\n      this.slides.isBeginning().then(isBeginning => {\n        this.isFirstSlide = isBeginning;\n      });\n      this.slides.isEnd().then(isEnd => {\n        this.isLastSlide = isEnd;\n      });\n    });\n  }\n\n  skipWalkthrough(): void {\n    // Skip to the last slide\n    this.slides.length().then(length => {\n      this.slides.slideTo(length);\n    });\n  }\n\n  generateSides(): void {\n\n    //Electrons\n    this.qCharge = Math.floor(Math.random() * 400) + 10;\n    var precision = 10; // 1 decimals\n    this.tTime = Math.floor(Math.random() * (10 * precision - 1 * precision) + 1 * precision) / (1 * precision);\n\n    //Resistance\n    this.pResist = \"0.0000000172\";\n    this.lLength = Math.floor(Math.random() * 400) + 10;\n    this.csArea = Math.floor(Math.random() * 10) + 1;\n\n    //Ohms\n    this.vVolts = Math.floor(Math.random() * 200) + 10;\n    this.iCur = Math.floor(Math.random() * 100) + 10;\n\n    //Series\n\n    this.r1 = Math.floor(Math.random() * 10) + 1;\n    this.r2 = Math.floor(Math.random() * 10) + 1;\n    this.r3 = Math.floor(Math.random() * 10) + 1;\n    this.seriesVoltage = Math.floor(Math.random() * 100) + 1;\n\n    //Force & EMF\n    var precision = 10; // 2 decimals\n    this.mgFlux = Math.floor(Math.random() * (0.1 * precision - 1 * precision) + 1 * precision) / (1*precision);\n    this.conLength = Math.floor(Math.random() * (0.1 * precision - 1 * precision) + 1 * precision) / (1*precision);\n    this.conCurrent = Math.floor(Math.random() * 100) + 10;\n\n    //Static\n    this.staticEMF = Math.floor(Math.random() * 400) + 10;\n    this.staticTime = Math.floor(Math.random() * 200) + 10;\n\n\n  }\n\n\n\n  ngOnInit(): void {\n\n\n\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n      .subscribe(\n        (resolvedRouteData: IResolvedRouteData<ElectricalDetailsModel>) => {\n          // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n          this.subscriptions = ResolverHelper.extractData<ElectricalDetailsModel>(resolvedRouteData.data, ElectricalDetailsModel)\n            .subscribe(\n              (state) => {\n                this.details = state;\n              },\n              (error) => { }\n            );\n        },\n        (error) => { }\n      );\n  }\n\n  async presentToastCorrect() {\n    const toast = await this.toastController.create({\n      header: 'Correct!',\n      message: 'Well Done.',\n      position: 'bottom',\n      buttons: [\n        {\n          text: 'Next',\n          role: 'cancel',\n          handler: () => {\n            this.generateSides();\n            this.iCurrent = \"\";\n            this.rValue = \"\";\n            this.resistR = \"\";\n            this.seriesRtotal = \"\";\n            this.seriesI = \"\";\n            this.conForce=\"\";\n            this.magFlux=\"\";\n          }\n        }\n      ]\n    });\n    toast.present();\n  }\n\n  async presentToastIncorrect() {\n    const toast = await this.toastController.create({\n      message: 'Try again!',\n      position: 'bottom',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  calculateElectrons(): void {\n\n\n    var currentRounded = Math.round(this.qCharge / this.tTime * 10) / 10;\n    console.trace(currentRounded);\n    if (this.iCurrent == currentRounded) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateResistance(): void {\n\n\n    var resistance = 0.0000000172 * this.lLength / this.csArea;\n    console.trace(resistance);\n    if (this.rValue == resistance) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateOhms(): void {\n\n\n    var resistance = this.vVolts / this.iCur;\n    resistance = Math.round(resistance * 10) / 10;\n    console.trace(resistance);\n    if (this.resistR == resistance) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateSeries(): void {\n\n\n    var resistancetotal = this.r1+this.r2+this.r3;\n    var current = this.seriesVoltage / resistancetotal;\n    current = Math.round(current * 10) / 10;\n    console.trace(current);\n    if (this.seriesI == current && this.seriesRtotal == resistancetotal) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n  calculateParallel(): void {\n\n\n    var resistancetotal = 1/this.r1+1/this.r2+1/this.r3;\n    resistancetotal = Math.round(resistancetotal * 100) / 100;\n    var current = this.seriesVoltage * resistancetotal;\n    current = Math.round(current * 10) / 10;\n    console.trace(resistancetotal);\n    console.trace(current);\n    if (this.seriesI == current && this.seriesRtotal == resistancetotal) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  // Calculates Force & EMF\n\n  calculateForce(): void {\n\n    var forceTotal = this.mgFlux*this.conLength*this.conCurrent;\n    forceTotal = Math.round(forceTotal * 10) / 10;\n    \n    if (forceTotal == this.conForce) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n\n  calculateStatic(): void {\n\n    var forceTotal = this.staticEMF*this.staticTime*0.1;\n    forceTotal = Math.round(forceTotal * 10) / 10;\n    \n    if (forceTotal == this.magFlux) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n\n\n\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { ElectricalService } from '../electrical.service';\nimport { ElectricalDetailsModel } from './electrical-details.model';\n\n@Injectable()\nexport class ElectricalDetailsResolver implements Resolve<DataStore<ElectricalDetailsModel>> {\n\n  constructor(private electricalService: ElectricalService) {}\n\n  resolve(route: ActivatedRouteSnapshot): DataStore<ElectricalDetailsModel> {\n    const itemSlug = route.paramMap.get('productId');\n\n    const dataSource: Observable<ElectricalDetailsModel> = this.electricalService.getDetailsDataSource(itemSlug);\n    const dataStore: DataStore<ElectricalDetailsModel> = this.electricalService.getDetailsStore(dataSource);\n\n    return dataStore;\n  }\n}\n"]}