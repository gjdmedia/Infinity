{"version":3,"sources":["./src/app/user/friends/user-friends.module.ts","./src/app/user/friends/user-friends.page.html","./src/app/user/friends/user-friends.page.ts","./src/app/user/friends/user-friends.resolver.ts","./src/app/utils/resolver-helper.ts"],"names":[],"mappings":"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","file":"user-friends-user-friends-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { UserService } from '../user.service';\nimport { UserFriendsPage } from './user-friends.page';\nimport { UserFriendsResolver } from './user-friends.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserFriendsPage,\n    resolve: {\n      data: UserFriendsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ComponentsModule,\n    RouterModule.forChild(routes),\n    HttpClientModule\n  ],\n  declarations: [UserFriendsPage],\n  providers: [\n    UserFriendsResolver,\n    UserService\n  ]\n})\nexport class UserFriendsPageModule {}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/user\"></ion-back-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"user-friends-content\">\n  <ion-segment value=\"friends\" class=\"user-friends-segment\" (ionChange)=\"segmentChanged($event)\">\n    <ion-segment-button value=\"friends\">\n      <ion-label>Friends</ion-label>\n    </ion-segment-button>\n    <ion-segment-button value=\"followers\">\n      <ion-label>Followers</ion-label>\n    </ion-segment-button>\n    <ion-segment-button value=\"following\">\n      <ion-label>Following</ion-label>\n    </ion-segment-button>\n  </ion-segment>\n\n  <ion-searchbar class=\"friends-searchbar\" animated [(ngModel)]=\"searchQuery\" (ionChange)=\"searchList()\"></ion-searchbar>\n\n  <ng-template #friendItem let-friend=\"friend\">\n    <ion-row class=\"user-details-section\">\n      <ion-col class=\"user-image-wrapper\" size=\"2\">\n        <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n          <app-image-shell class=\"user-image\" animation=\"spinner\" [src]=\"friend.image\" [alt]=\"'friend'\"></app-image-shell>\n        </app-aspect-ratio>\n      </ion-col>\n      <ion-col class=\"user-data-wrapper\">\n        <div class=\"user-info\">\n          <h3 class=\"user-name\">\n            <app-text-shell [data]=\"friend.name\"></app-text-shell>\n          </h3>\n          <h5 class=\"user-job\">\n            <app-text-shell [data]=\"friend.job\"></app-text-shell>\n          </h5>\n        </div>\n      </ion-col>\n      <ion-col class=\"user-actions-wrapper\">\n        <ion-button *ngIf=\"!friend.following\" class=\"user-action\" expand=\"block\" size=\"small\" color=\"primary\">Follow</ion-button>\n        <ion-button *ngIf=\"friend.following\" class=\"user-action\" expand=\"block\" size=\"small\" color=\"light\">Following</ion-button>\n      </ion-col>\n    </ion-row>\n  </ng-template>\n\n  <section [hidden]=\"segmentValue !== 'friends'\">\n    <ion-list class=\"friends-list\" *ngIf=\"friendsList.length > 0\">\n      <ion-item class=\"friend-item\" *ngFor=\"let friend of friendsList\">\n        <ng-container *ngTemplateOutlet=\"friendItem; context: { friend: friend }\"></ng-container>\n      </ion-item>\n    </ion-list>\n    <ng-container *ngIf=\"friendsList.length <= 0\">\n      <h3 class=\"empty-list-message\">No Friends</h3>\n    </ng-container>\n  </section>\n\n  <section [hidden]=\"segmentValue !== 'followers'\">\n    <ion-list class=\"friends-list\" *ngIf=\"followersList.length > 0\">\n      <ion-item class=\"friend-item\" *ngFor=\"let friend of followersList\">\n        <ng-container *ngTemplateOutlet=\"friendItem; context: { friend: friend }\"></ng-container>\n      </ion-item>\n    </ion-list>\n    <ng-container *ngIf=\"followersList.length <= 0\">\n      <h3 class=\"empty-list-message\">No Followers</h3>\n    </ng-container>\n  </section>\n\n  <section [hidden]=\"segmentValue !== 'following'\">\n    <ion-list class=\"friends-list\" *ngIf=\"followingList.length > 0\">\n      <ion-item class=\"friend-item\" *ngFor=\"let friend of followingList\">\n        <ng-container *ngTemplateOutlet=\"friendItem; context: { friend: friend }\"></ng-container>\n      </ion-item>\n    </ion-list>\n    <ng-container *ngIf=\"followingList.length <= 0\">\n      <h3 class=\"empty-list-message\">No Following</h3>\n    </ng-container>\n  </section>\n</ion-content>\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { UserFriendsModel } from './user-friends.model';\n\n@Component({\n  selector: 'app-user-friends',\n  templateUrl: './user-friends.page.html',\n  styleUrls: [\n    './styles/user-friends.page.scss',\n    './styles/user-friends.shell.scss',\n    './styles/user-friends.ios.scss',\n    './styles/user-friends.md.scss'\n  ]\n})\nexport class UserFriendsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  data: UserFriendsModel;\n\n  segmentValue = 'friends';\n  friendsList: Array<any>;\n  followersList: Array<any>;\n  followingList: Array<any>;\n  searchQuery = '';\n  showFilters = false;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.data && this.data.isShell) ? true : false;\n  }\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<UserFriendsModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<UserFriendsModel>(resolvedRouteData.data, UserFriendsModel)\n        .subscribe(\n          (state) => {\n            this.data = state;\n            this.friendsList = this.data.friends;\n            this.followersList = this.data.followers;\n            this.followingList = this.data.following;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n\n  segmentChanged(ev): void {\n    this.segmentValue = ev.detail.value;\n\n    // Check if there's any filter and apply it\n    this.searchList();\n  }\n\n  searchList(): void {\n    const query = (this.searchQuery && this.searchQuery !== null) ? this.searchQuery : '';\n\n    if (this.segmentValue === 'friends') {\n      this.friendsList = this.filterList(this.data.friends, query);\n    } else if (this.segmentValue === 'followers') {\n      this.followersList = this.filterList(this.data.followers, query);\n    } else if (this.segmentValue === 'following') {\n      this.followingList = this.filterList(this.data.following, query);\n    }\n  }\n\n  filterList(list, query): Array<any> {\n    return list.filter(item => item.name.toLowerCase().includes(query.toLowerCase()));\n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { UserService } from '../user.service';\nimport { UserFriendsModel } from './user-friends.model';\n\n@Injectable()\nexport class UserFriendsResolver implements Resolve<DataStore<UserFriendsModel>> {\n\n  constructor(private userService: UserService) { }\n\n  resolve(): DataStore<UserFriendsModel> {\n    const dataSource: Observable<UserFriendsModel> = this.userService.getFriendsDataSource();\n    const dataStore: DataStore<UserFriendsModel> = this.userService.getFriendsStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { DataStore } from '../shell/data-store';\nimport { Observable, of } from 'rxjs';\n\nexport interface IResolvedRouteData<T> {\n  data: T | DataStore<T>;\n}\n\nexport class ResolverHelper<T> {\n  // More info on function overloads here: https://www.typescriptlang.org/docs/handbook/functions.html#overloads\n  public static extractData<T>(source: (T | DataStore<T>), constructor: (new(...args: any[]) => T)): Observable<T> {\n    if (source instanceof DataStore) {\n      return source.state;\n    } else if (source instanceof constructor) {\n      // The right side of instanceof should be an expression evaluating to a constructor function (ie. a class), not a type\n      // That's why we included an extra parameter which acts as a constructor function for type T\n      // (see: https://github.com/microsoft/TypeScript/issues/5236)\n      return of(source);\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}