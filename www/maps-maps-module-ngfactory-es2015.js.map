{"version":3,"sources":["./src/app/components/google-map/google-map.component.ts","./src/app/maps/maps.module.ts","./src/app/maps/maps.page.html","./src/app/maps/maps.page.ts"],"names":[],"mappings":"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","file":"maps-maps-module-ngfactory-es2015.js","sourcesContent":["import { Component, ElementRef, OnInit, EventEmitter, Input } from '@angular/core';\n\n@Component({\n  selector: 'google-map',\n  template: ''\n})\nexport class GoogleMapComponent implements OnInit {\n\n  @Input() mapOptions: google.maps.MapOptions;\n  public _el: HTMLElement;\n  public _map: google.maps.Map;\n  public $mapReady: EventEmitter<any> = new EventEmitter();\n  public _mapIdledOnce = false;\n\n  constructor(public _elementRef: ElementRef) { }\n\n  ngOnInit() {\n    this.initMap();\n  }\n\n  initMap(): void {\n    this._el = this._elementRef.nativeElement;\n    this._map = new google.maps.Map(this._el, this.mapOptions);\n\n    // Workarround for init method: try to catch the first idle event after the map creation\n    // (this._mapIdledOnce). The following idle events don't matter.\n    const _ready_listener = this._map.addListener('idle', () => {\n      console.log('mapReady - IDLE');\n      if (!this._mapIdledOnce) {\n        this.$mapReady.emit(this._map);\n        this._mapIdledOnce = true;\n        // Stop listening to event, the map is ready\n        google.maps.event.removeListener(_ready_listener);\n      }\n    });\n  }\n}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MapsPage } from './maps.page';\nimport { ComponentsModule } from '../components/components.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    ComponentsModule,\n    RouterModule.forChild([{ path: '', component: MapsPage }])\n  ],\n  declarations: [MapsPage]\n})\nexport class MapsPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>Maps & Geolocation</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-fab vertical=\"top\" horizontal=\"end\" slot=\"fixed\">\n    <ion-fab-button (click)=\"geolocateMe()\" color=\"secondary\">\n      <ion-icon name=\"locate\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n  <google-map [mapOptions]=\"mapOptions\"></google-map>\n</ion-content>\n","import { Component, ViewChild, OnInit } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\nimport { Plugins } from '@capacitor/core';\nconst { Geolocation } = Plugins;\n\nimport { GoogleMapComponent } from '../components/google-map/google-map.component';\n\n@Component({\n  selector: 'app-maps',\n  templateUrl: './maps.page.html',\n  styleUrls: [\n    './styles/maps.page.scss'\n  ]\n})\nexport class MapsPage implements OnInit {\n\n  @ViewChild(GoogleMapComponent, { static: true }) _GoogleMap: GoogleMapComponent;\n  map: google.maps.Map;\n  mapOptions: google.maps.MapOptions = {\n    zoom: 15,\n    center: {lat: -34.9199842, lng: -56.149849}\n    // uncomment the following line if you want to remove the default Map controls\n    // disableDefaultUI: true\n  };\n  loadingElement: any;\n\n  constructor(private loadingController: LoadingController) { }\n\n  ngOnInit() {\n    this._GoogleMap.$mapReady.subscribe(map => {\n      this.map = map;\n    });\n    this.createLoader();\n  }\n\n  async createLoader() {\n    this.loadingElement = await this.loadingController.create({\n      message: 'Trying to get your current location...'\n    });\n  }\n\n  async presentLoader() {\n    await this.loadingElement.present();\n  }\n\n  async dismissLoader() {\n    if (this.loadingElement) {\n      await this.loadingElement.dismiss();\n    }\n  }\n\n  geolocateMe() {\n\n    this.presentLoader();\n    Geolocation.getCurrentPosition().then(position => {\n\n      const current_location = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n      this.map.panTo(current_location);\n\n      // add a marker\n      const marker = new google.maps.Marker({\n        position: current_location,\n        title: 'You are here!',\n        // animation: google.maps.Animation.DROP\n      });\n\n      // To add the marker to the map, call setMap();\n      marker.setMap(this.map);\n\n    }).catch((error) => {\n      console.log('Error getting current location', error);\n\n    }).finally(() => this.dismissLoader());\n  }\n}\n"],"sourceRoot":"webpack:///"}