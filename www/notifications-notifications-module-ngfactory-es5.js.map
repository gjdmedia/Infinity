{"version":3,"sources":["webpack:///src/app/notifications/notifications.module.ts","webpack:///src/app/notifications/notifications.page.html","webpack:///src/app/notifications/notifications.page.ts","webpack:///src/app/notifications/notifications.resolver.ts","webpack:///src/app/notifications/notifications.service.ts"],"names":["NotificationsPageModule","NotificationsPage","route","subscriptions","data","subscribe","resolvedData","dataSource","source","pageData","notifications","error","unsubscribe","NotificationsResolver","notificationsService","dataObservable","getData","NotificationsService","http","get"],"mappings":"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","file":"notifications-notifications-module-ngfactory-es5.js","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComponentsModule } from '../components/components.module';\n\nimport { NotificationsPage } from './notifications.page';\nimport { NotificationsResolver } from '../notifications/notifications.resolver';\nimport { NotificationsService } from '../notifications/notifications.service';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    ComponentsModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: NotificationsPage,\n        resolve: {\n          data: NotificationsResolver\n        }\n      }\n    ])\n  ],\n  declarations: [ NotificationsPage ],\n  providers: [\n    NotificationsResolver,\n    NotificationsService\n  ]\n})\nexport class NotificationsPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>\n      Notifications\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"notifications-content\">\n  <ng-container *ngIf=\"notifications\">\n    <ion-item-group>\n      <ion-item-divider sticky>\n        <ion-label>Today</ion-label>\n      </ion-item-divider>\n      <ion-item class=\"notification-item\" lines=\"none\" *ngFor=\"let notification of notifications.today\">\n        <ion-row class=\"notification-item-wrapper\">\n          <ion-col size=\"2\">\n            <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n              <app-image-shell class=\"notification-image\" [src]=\"notification.image\" [alt]=\"'user image'\"></app-image-shell>\n            </app-aspect-ratio>\n          </ion-col>\n          <ion-col class=\"details-wrapper\">\n            <h2 class=\"details-name\">{{ notification.name }}</h2>\n            <p class=\"details-description\">{{ notification.message }}</p>\n          </ion-col>\n          <ion-col size=\"2\" class=\"date-wrapper\">\n            <h3 class=\"notification-date\">{{ notification.date }}</h3>\n          </ion-col>\n        </ion-row>\n      </ion-item>\n    </ion-item-group>\n    <ion-item-group>\n      <ion-item-divider sticky>\n        <ion-label>Yesterday</ion-label>\n      </ion-item-divider>\n      <ion-item class=\"notification-item\" lines=\"none\" *ngFor=\"let notification of notifications.yesterday\">\n        <ion-row class=\"notification-item-wrapper\">\n          <ion-col size=\"2\">\n            <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n              <app-image-shell class=\"notification-image\" [src]=\"notification.image\" [alt]=\"'user image'\"></app-image-shell>\n            </app-aspect-ratio>\n          </ion-col>\n          <ion-col class=\"details-wrapper\">\n            <h2 class=\"details-name\">{{ notification.name }}</h2>\n            <p class=\"details-description\">{{ notification.message }}</p>\n          </ion-col>\n          <ion-col size=\"2\" class=\"date-wrapper\">\n            <h3 class=\"notification-date\">{{ notification.date }}</h3>\n          </ion-col>\n        </ion-row>\n      </ion-item>\n    </ion-item-group>\n  </ng-container>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.page.html',\n  styleUrls: [\n    './styles/notifications.page.scss',\n    './styles/notifications.shell.scss'\n  ]\n})\nexport class NotificationsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  notifications: any;\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedData) => {\n        const dataSource: {source: Observable<any>} = resolvedData['data'];\n\n        // Route subscription resolved, now the active subscription is the the one from the dataSource\n        this.subscriptions = dataSource.source\n        .subscribe(\n          (pageData) => {\n            this.notifications = pageData;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { NotificationsService } from './notifications.service';\n\n@Injectable()\nexport class NotificationsResolver implements Resolve<any> {\n\n  constructor(private notificationsService: NotificationsService) { }\n\n  resolve() {\n    // Base Observable (where we get data from)\n    const dataObservable: Observable<any> = this.notificationsService.getData();\n\n    return { source: dataObservable };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class NotificationsService {\n  constructor(private http: HttpClient) { }\n\n  public getData(): Observable<any> {\n    return this.http.get<any>('./assets/-data/notifications.json');\n  }\n}\n"]}