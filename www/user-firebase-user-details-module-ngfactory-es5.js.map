{"version":3,"sources":["webpack:///src/app/firebase/crud/user/details/firebase-user-details.page.html","webpack:///src/app/firebase/crud/user/details/firebase-user-details.page.ts","webpack:///src/app/firebase/crud/user/firebase-user-details.module.ts","webpack:///src/app/firebase/crud/user/firebase-user-details.resolver.ts","webpack:///src/app/firebase/crud/user/update/firebase-update-user.modal.html","webpack:///src/app/firebase/crud/user/update/firebase-update-user.modal.ts","webpack:///src/app/validators/checkbox-checked.validator.ts"],"names":["FirebaseUserDetailsPage","firebaseCrudService","modalController","router","route","routerOutlet","data","subscribe","resolvedRouteData","resolvedDataStores","combinedDataStore","user","relatedUsersDataStore","relatedUsers","state","create","component","componentProps","swipeToClose","presentingElement","nativeEl","modal","present","isShell","routes","path","resolve","FirebaseUserDetailsPageModule","FirebaseUserDetailsResolver","userId","paramMap","get","combinedUserDataSource","getCombinedUserDataSource","combinedUserDataStore","getCombinedUserStore","relatedUsersDataSource","getRelatedUsersDataSource","getRelatedUsersStore","FirebaseUpdateUserModal","alertController","ngZone","skills","selectedAvatar","avatar","updateUserForm","name","required","lastname","email","compose","pattern","phone","birthdate","format","minSelectedCheckboxes","spanish","languages","english","french","getSkills","map","skill","userSkillsIds","skillId","control","includes","id","controls","push","value","dismiss","header","message","buttons","text","role","handler","deleteUser","then","dismissModal","run","navigate","err","console","log","alert","unix","selectedSkills","index","age","updateUser","userData","getTop","onDidDismiss","link","CheckboxCheckedValidator","min","validator","formArray","totalSelected","reduce","prev","next"],"mappings":"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","file":"user-firebase-user-details-module-ngfactory-es5.js","sourcesContent":["<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"firebase/crud/listing\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>User Details</ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"openFirebaseUpdateModal()\">\n        Edit\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"user-content\">\n  <ion-row class=\"user-info-row\">\n    <ion-col class=\"user-image-col\" size=\"5\">\n      <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n        <app-image-shell [display]=\"'cover'\" class=\"user-image\" animation=\"spinner\" [src]=\"user.avatar\" [alt]=\"'item image'\">\n        </app-image-shell>\n      </app-aspect-ratio>\n    </ion-col>\n    <ion-col class=\"user-details-col\" size=\"12\">\n      <h2 class=\"user-name\">\n        <app-text-shell animation=\"bouncing\" [data]=\"user.name?.concat(' ').concat(user.lastname)\"></app-text-shell>\n      </h2>\n      <span class=\"user-age\">\n        <app-text-shell animation=\"bouncing\" [data]=\"user.age?.toString().concat(' years young')\"></app-text-shell>\n      </span>\n    </ion-col>\n    <ion-col class=\"actions-col\" size=\"12\">\n      <ion-row>\n        <ion-col size=\"3\">\n          <ion-button class=\"action-btn\" color=\"secondary\">\n            <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"mail\"></ion-icon>\n          </ion-button>\n        </ion-col>\n        <ion-col size=\"3\">\n          <ion-button class=\"action-btn\" color=\"secondary\">\n            <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"call\"></ion-icon>\n          </ion-button>\n        </ion-col>\n        <ion-col size=\"3\">\n          <ion-button class=\"action-btn\" color=\"secondary\">\n            <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"videocam\"></ion-icon>\n          </ion-button>\n        </ion-col>\n        <ion-col size=\"3\">\n          <ion-button class=\"action-btn\" color=\"secondary\">\n            <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"text\"></ion-icon>\n          </ion-button>\n        </ion-col>\n      </ion-row>\n    </ion-col>\n  </ion-row>\n\n  <section class=\"content-section user-languages-wrapper\">\n    <h5 class=\"section-header\">Languages</h5>\n    <ion-row class=\"language-item-row\">\n      <ion-col class=\"language-item\">\n        <span class=\"language-name\">English</span>\n        <ion-progress-bar class=\"language-score\" type=\"determinate\" [value]=\"(user.languages?.english / 10)\"></ion-progress-bar>\n      </ion-col>\n    </ion-row>\n    <ion-row class=\"language-item-row\">\n      <ion-col class=\"language-item\">\n        <span class=\"language-name\">Spanish</span>\n        <ion-progress-bar class=\"language-score\" type=\"determinate\" [value]=\"(user.languages?.spanish / 10)\"></ion-progress-bar>\n      </ion-col>\n    </ion-row>\n    <ion-row class=\"language-item-row\">\n      <ion-col class=\"language-item\">\n        <span class=\"language-name\">French</span>\n        <ion-progress-bar class=\"language-score\" type=\"determinate\" [value]=\"(user.languages?.french / 10)\"></ion-progress-bar>\n      </ion-col>\n    </ion-row>\n  </section>\n\n  <section class=\"content-section user-experience-wrapper\">\n    <h5 class=\"section-header\">Skills</h5>\n    <ion-list class=\"experience-list\" lines=\"none\">\n      <ion-item class=\"experience-item\" *ngFor=\"let skill of user.skills\">\n        <label class=\"experience-label\">\n          <app-text-shell animation=\"bouncing\" [data]=\"skill?.name\"></app-text-shell>\n        </label>\n        <ion-icon class=\"experience-list-icon\" slot=\"start\" name=\"checkmark\" color=\"secondary\"></ion-icon>\n      </ion-item>\n    </ion-list>\n  </section>\n\n  <section class=\"content-section related-users-wrapper\" *ngIf=\"relatedUsers.length > 0\">\n    <h5 class=\"section-header\">Users with similar skills</h5>\n    <ion-row class=\"related-users-row\">\n      <ion-col class=\"related-user-item\" size=\"2\" *ngFor=\"let user of relatedUsers\">\n        <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n          <app-image-shell [display]=\"'cover'\" class=\"related-user-picture\" [src]=\"user.avatar\" [routerLink]=\"['/firebase/crud/details', user.id]\"></app-image-shell>\n        </app-aspect-ratio>\n        <span class=\"related-user-name\">\n          <app-text-shell [data]=\"user.name\"></app-text-shell>\n        </span>\n      </ion-col>\n    </ion-row>\n  </section>\n</ion-content>\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ModalController, IonRouterOutlet } from '@ionic/angular';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { FirebaseCombinedUserModel } from '../firebase-user.model';\nimport { FirebaseListingItemModel } from '../../listing/firebase-listing.model';\nimport { FirebaseUpdateUserModal } from '../update/firebase-update-user.modal';\n\nimport { DataStore, ShellModel } from '../../../../shell/data-store';\nimport { FirebaseCrudService } from '../../firebase-crud.service';\n\n@Component({\n  selector: 'app-firebase-user-details',\n  templateUrl: './firebase-user-details.page.html',\n  styleUrls: [\n    './styles/firebase-user-details.page.scss',\n    './styles/firebase-user-details.shell.scss'\n  ],\n})\nexport class FirebaseUserDetailsPage implements OnInit {\n  user: FirebaseCombinedUserModel;\n  // Use Typescript intersection types to enable docorating the Array of firebase models with a shell model\n  // (ref: https://www.typescriptlang.org/docs/handbook/advanced-types.html#intersection-types)\n  relatedUsers: Array<FirebaseListingItemModel> & ShellModel;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return ((this.user && this.user.isShell) || (this.relatedUsers && this.relatedUsers.isShell)) ? true : false;\n  }\n\n  constructor(\n    public firebaseCrudService: FirebaseCrudService,\n    public modalController: ModalController,\n    public router: Router,\n    private route: ActivatedRoute,\n    private routerOutlet: IonRouterOutlet\n  ) { }\n\n  ngOnInit() {\n    this.route.data.subscribe((resolvedRouteData) => {\n      const resolvedDataStores = resolvedRouteData['data'];\n      const combinedDataStore: DataStore<FirebaseCombinedUserModel> = resolvedDataStores.user;\n      const relatedUsersDataStore: DataStore<Array<FirebaseListingItemModel>> = resolvedDataStores.relatedUsers;\n\n      combinedDataStore.state.subscribe(\n        (state) => {\n          this.user = state;\n        }\n      );\n      relatedUsersDataStore.state.subscribe(\n        (state) => {\n          this.relatedUsers = state;\n        }\n      );\n    });\n  }\n\n  async openFirebaseUpdateModal() {\n    const modal = await this.modalController.create({\n      component: FirebaseUpdateUserModal,\n      componentProps: {\n        'user': this.user\n      },\n      swipeToClose: true,\n      presentingElement: this.routerOutlet.nativeEl\n    });\n\n    await modal.present();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentsModule } from '../../../components/components.module';\nimport { FirebaseUserDetailsPage } from './details/firebase-user-details.page';\nimport { FirebaseUserDetailsResolver } from './firebase-user-details.resolver';\nimport { FirebaseUpdateUserModal } from './update/firebase-update-user.modal';\nimport { FirebaseCrudService } from '../firebase-crud.service';\nimport { FirebaseCrudModule } from '../firebase-crud.module';\nimport { SelectUserImageModal } from './select-image/select-user-image.modal';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FirebaseUserDetailsPage,\n    resolve: {\n      data: FirebaseUserDetailsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    FirebaseCrudModule\n  ],\n  declarations: [\n    FirebaseUserDetailsPage,\n    FirebaseUpdateUserModal\n  ],\n  entryComponents: [\n    FirebaseUpdateUserModal,\n    SelectUserImageModal\n  ],\n  providers: [\n    FirebaseCrudService,\n    FirebaseUserDetailsResolver\n  ]\n})\nexport class FirebaseUserDetailsPageModule {}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { FirebaseCombinedUserModel } from './firebase-user.model';\nimport { FirebaseListingItemModel } from '../listing/firebase-listing.model';\n\nimport { DataStore } from '../../../shell/data-store';\nimport { FirebaseCrudService } from '../firebase-crud.service';\n\n@Injectable()\nexport class FirebaseUserDetailsResolver implements Resolve<any> {\n\n  constructor(private firebaseCrudService: FirebaseCrudService) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const userId = route.paramMap.get('id');\n\n    // We created a FirebaseCombinedUserModel to combine the userData with the details of the userSkills (from the skills collection).\n    // They are 2 different collections and we need to combine them into 1 dataSource.\n\n    const combinedUserDataSource: Observable<FirebaseCombinedUserModel> = this.firebaseCrudService\n    .getCombinedUserDataSource(userId);\n\n    const combinedUserDataStore: DataStore<FirebaseCombinedUserModel> = this.firebaseCrudService\n    .getCombinedUserStore(combinedUserDataSource);\n\n\n    // The user details page has a section with related users, showing users with the same skills\n    // For this we created another datastore which depends on the combinedUser data store\n    // The DataStore subscribes to the DataSource, to avoid creating two subscribers to the combinedUserDataSource,\n    // use the combinedUserDataStore timeline instead. (The timeline is a Subject, and is intended to have many subscribers)\n    // Using, and thus subscribing to the timeline won't trigger two requests to the firebase endpoint\n    const relatedUsersDataSource: Observable<Array<FirebaseListingItemModel>> = this.firebaseCrudService\n    .getRelatedUsersDataSource(combinedUserDataStore.state);\n\n    const relatedUsersDataStore: DataStore<Array<FirebaseListingItemModel>> = this.firebaseCrudService\n    .getRelatedUsersStore(relatedUsersDataSource);\n\n    return {user: combinedUserDataStore, relatedUsers: relatedUsersDataStore};\n  }\n}\n","<!-- This is the proper way if you have submit button outside your ion-content form (typically in the ion-header or ion-footer) -->\n<!-- (ref: https://github.com/ionic-team/ionic/issues/16661) -->\n<form class=\"update-user-form ion-page\" [formGroup]=\"updateUserForm\" (ngSubmit)=\"updateUser()\">\n  <ion-header>\n    <ion-toolbar color=\"primary\">\n      <ion-buttons slot=\"end\">\n        <ion-button (click)=\"dismissModal()\">\n          <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n        </ion-button>\n      </ion-buttons>\n      <ion-title>Update User</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-content class=\"update-user-content\">\n    <ion-row class=\"select-user-image-row\">\n      <ion-col class=\"user-image-col\" size=\"5\">\n        <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n          <app-image-shell [display]=\"'cover'\" class=\"user-image\" animation=\"spinner\" [src]=\"selectedAvatar\" [alt]=\"'user image'\"></app-image-shell>\n        </app-aspect-ratio>\n        <ion-button class=\"change-image-btn\" color=\"secondary\" (click)=\"changeUserImage()\">\n          <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"camera\"></ion-icon>\n        </ion-button>\n      </ion-col>\n    </ion-row>\n\n    <section class=\"user-details-fields fields-section\">\n      <ion-list class=\"inputs-list\" lines=\"full\">\n        <ion-item class=\"input-item\">\n          <ion-label color=\"secondary\" position=\"floating\">Name</ion-label>\n          <ion-input type=\"text\" formControlName=\"name\" required></ion-input>\n        </ion-item>\n        <ion-item class=\"input-item\">\n          <ion-label color=\"secondary\" position=\"floating\">Last name</ion-label>\n          <ion-input type=\"text\" formControlName=\"lastname\" required></ion-input>\n        </ion-item>\n        <ion-item class=\"input-item\">\n          <ion-label color=\"secondary\" position=\"floating\">Date of Birth</ion-label>\n          <ion-datetime display-format=\"DD/MM/YYYY\" picker-format=\"DD MMMM YYYY\" formControlName=\"birthdate\" required></ion-datetime>\n        </ion-item>\n        <ion-item class=\"input-item\">\n          <ion-label color=\"secondary\" position=\"floating\">Phone number</ion-label>\n          <ion-input type=\"tel\" formControlName=\"phone\" required></ion-input>\n        </ion-item>\n        <ion-item class=\"input-item\">\n          <ion-label color=\"secondary\" position=\"floating\">Email</ion-label>\n          <ion-input type=\"email\" formControlName=\"email\" required></ion-input>\n        </ion-item>\n      </ion-list>\n    </section>\n\n    <section class=\"user-experience-fields fields-section\">\n      <h5 class=\"section-header\">Experience in</h5>\n      <ion-row class=\"checkbox-tags rounded-checkbox-tags\">\n        <ion-item formArrayName=\"skills\" lines=\"none\" class=\"checkbox-tag rounded-tag\" *ngFor=\"let skill of skillsFormArray.controls; let i = index;\">\n          <ion-label class=\"tag-label\">{{skills[i].name}}</ion-label>\n          <ion-checkbox [formControlName]=\"i\"></ion-checkbox>\n        </ion-item>\n      </ion-row>\n    </section>\n\n    <section class=\"user-languages-fields fields-section\">\n      <h5 class=\"section-header\">Languages</h5>\n      <ion-row class=\"range-item-row\">\n        <ion-col size=\"12\">\n          <div class=\"range-header\">\n            <span class=\"range-label\">English</span>\n            <span class=\"range-value\">{{ changeLangValue(updateUserForm.controls.english.value) }}</span>\n          </div>\n        </ion-col>\n        <ion-col size=\"12\">\n          <ion-range class=\"range-control\" formControlName=\"english\" color=\"secondary\" min=\"1\" max=\"10\" step=\"1\"></ion-range>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"range-item-row\">\n        <ion-col size=\"12\">\n          <div class=\"range-header\">\n            <span class=\"range-label\">Spanish</span>\n            <span class=\"range-value\">{{ changeLangValue(updateUserForm.controls.spanish.value) }}</span>\n          </div>\n        </ion-col>\n        <ion-col size=\"12\">\n          <ion-range class=\"range-control\" formControlName=\"spanish\" color=\"secondary\" min=\"1\" max=\"10\" step=\"1\"></ion-range>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"range-item-row\">\n        <ion-col size=\"12\">\n          <div class=\"range-header\">\n            <span class=\"range-label\">French</span>\n            <span class=\"range-value\">{{ changeLangValue(updateUserForm.controls.french.value) }}</span>\n          </div>\n        </ion-col>\n        <ion-col size=\"12\">\n          <ion-range class=\"range-control\" formControlName=\"french\" color=\"secondary\" min=\"1\" max=\"10\" step=\"1\"></ion-range>\n        </ion-col>\n      </ion-row>\n    </section>\n  </ion-content>\n\n  <ion-footer>\n    <ion-row class=\"form-actions-wrapper\">\n      <ion-col>\n        <ion-button class=\"delete-btn\" expand=\"block\" color=\"primary\" fill=\"outline\" (click)=\"deleteUser()\">DELETE</ion-button>\n      </ion-col>\n      <ion-col>\n        <ion-button class=\"submit-btn\" expand=\"block\" color=\"secondary\" type=\"submit\" fill=\"solid\" [disabled]=\"!updateUserForm.valid\">UPDATE</ion-button>\n      </ion-col>\n    </ion-row>\n  </ion-footer>\n</form>\n","import { Component, OnInit, Input, NgZone } from '@angular/core';\nimport { ModalController, AlertController } from '@ionic/angular';\nimport { Validators, FormGroup, FormControl, FormArray } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport * as dayjs from 'dayjs';\n\nimport { CheckboxCheckedValidator } from '../../../../validators/checkbox-checked.validator';\n\nimport { FirebaseUserModel } from '../firebase-user.model';\nimport { SelectUserImageModal } from '../select-image/select-user-image.modal';\nimport { FirebaseCrudService } from '../../firebase-crud.service';\n\n@Component({\n  selector: 'app-firebase-update-user',\n  templateUrl: './firebase-update-user.modal.html',\n  styleUrls: [\n    './styles/firebase-update-user.modal.scss',\n    './styles/firebase-update-user.shell.scss'\n  ],\n})\nexport class FirebaseUpdateUserModal implements OnInit {\n  // \"user\" is passed in firebase-details.page\n  @Input() user: FirebaseUserModel;\n\n  updateUserForm: FormGroup;\n  selectedAvatar: string;\n  skills = [];\n\n  constructor(\n    private modalController: ModalController,\n    public alertController: AlertController,\n    public firebaseCrudService: FirebaseCrudService,\n    public router: Router,\n    private ngZone: NgZone\n  ) { }\n\n  ngOnInit() {\n    this.selectedAvatar = this.user.avatar;\n\n    this.updateUserForm = new FormGroup({\n      name: new FormControl(this.user.name, Validators.required),\n      lastname: new FormControl(this.user.lastname, Validators.required),\n      email: new FormControl(this.user.email, Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      phone: new FormControl(this.user.phone, Validators.required),\n      birthdate: new FormControl(dayjs.unix(this.user.birthdate).format('DD/MMMM/YYYY'), Validators.required),\n      skills: new FormArray([], CheckboxCheckedValidator.minSelectedCheckboxes(1)),\n      spanish: new FormControl(this.user.languages.spanish),\n      english: new FormControl(this.user.languages.english),\n      french: new FormControl(this.user.languages.french)\n    });\n\n    this.firebaseCrudService.getSkills().subscribe(skills => {\n      this.skills = skills;\n      // create skill checkboxes\n      this.skills.map((skill) => {\n        let userSkillsIds = [];\n        if (this.user.skills) {\n          userSkillsIds = this.user.skills.map(function(skillId) {\n            return skillId['id'];\n          });\n        }\n        // set the control value to 'true' if the user already has this skill\n        const control = new FormControl(userSkillsIds.includes(skill.id));\n        (this.updateUserForm.controls.skills as FormArray).push(control);\n      });\n    });\n  }\n\n  get skillsFormArray() { return <FormArray>this.updateUserForm.get('skills'); }\n\n  changeLangValue(value): string {\n    switch (true) {\n      case (value <= 3 ):\n        return 'Novice';\n      case (value > 3 && value <= 6 ):\n        return 'Competent';\n      case (value > 6 ):\n        return 'Expert';\n    }\n  }\n\n  dismissModal() {\n   this.modalController.dismiss();\n  }\n\n  async deleteUser() {\n    const alert = await this.alertController.create({\n      header: 'Confirm',\n      message: 'Do you want to delete ' + this.user.name + '?',\n      buttons: [\n        {\n          text: 'No',\n          role: 'cancel',\n          handler: () => {}\n        },\n        {\n          text: 'Yes',\n          handler: () => {\n            this.firebaseCrudService.deleteUser(this.user.id)\n            .then(\n              () => {\n                this.dismissModal();\n                this.ngZone.run(() => this.router.navigate(['firebase/crud/listing'])).then();\n              },\n              err => console.log(err)\n            );\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  updateUser() {\n    this.user.avatar = this.selectedAvatar;\n    this.user.name = this.updateUserForm.value.name;\n    this.user.lastname = this.updateUserForm.value.lastname;\n    this.user.birthdate = dayjs(this.updateUserForm.value.birthdate).unix(); // save it in timestamp\n    this.user.phone = this.updateUserForm.value.phone;\n    this.user.email = this.updateUserForm.value.email;\n    this.user.languages.spanish = this.updateUserForm.value.spanish;\n    this.user.languages.english = this.updateUserForm.value.english;\n    this.user.languages.french = this.updateUserForm.value.french;\n\n    // get the ids of the selected skills\n    const selectedSkills = [];\n\n    this.updateUserForm.value.skills\n    .map((value: any, index: number) => {\n      if (value) {\n        selectedSkills.push(this.skills[index].id);\n      }\n    });\n    this.user.skills = selectedSkills;\n\n    const {age, ...userData} = this.user; // we don't want to save the age in the DB because is something that changes over time\n\n    this.firebaseCrudService.updateUser(userData)\n    .then(\n      () => this.modalController.dismiss(),\n      err => console.log(err)\n    );\n  }\n\n  async changeUserImage() {\n    const modal = await this.modalController.create({\n      component: SelectUserImageModal,\n      swipeToClose: true,\n      presentingElement: await this.modalController.getTop()\n    });\n\n    modal.onDidDismiss().then(avatar => {\n      if (avatar.data != null) {\n        this.selectedAvatar = avatar.data.link;\n      }\n    });\n    await modal.present();\n  }\n}\n","import { ValidatorFn, FormArray } from '@angular/forms';\n\nexport class CheckboxCheckedValidator {\n\n  static minSelectedCheckboxes(min) {\n    const validator: ValidatorFn = (formArray: FormArray) => {\n      const totalSelected = formArray.controls\n        // get a list of checkbox values (boolean)\n        .map(control => control.value)\n        // total up the number of checked checkboxes\n        .reduce((prev, next) => next ? prev + next : prev, 0);\n\n      // if the total is not greater than the minimum, return the error message\n      return totalSelected >= min ? null : { required: true };\n    };\n\n    return validator;\n  }\n}\n"]}