{"version":3,"sources":["webpack:///src/app/brick/details/brick-details.module.ts","webpack:///src/app/brick/details/brick-details.page.html","webpack:///src/app/brick/details/brick-details.page.ts","webpack:///src/app/brick/details/brick-details.resolver.ts"],"names":["routes","path","component","resolve","data","BrickDetailsPageModule","BrickDetailsPage","menu","route","toastController","slidesOptions","zoom","toggle","isFirstSlide","isLastSlide","generateSides","enable","slides","isBeginning","then","isEnd","ionSlideWillChange","subscribe","changes","length","slideTo","side1","Math","floor","random","side2","console","trace","side1a","side2a","round","side5a","side6a","spindleThickness","newelDistance","costTimber","costDelivery","plasterCoverage","timberCost","screwsCost","plugsCost","discount","joistLength","numerator","denominator","rotAmount","radius","subscriptions","resolvedRouteData","extractData","state","details","error","create","header","message","position","buttons","text","role","handler","side3","side4","side3a","side4a","total","totala","totalArea","totalTins","totalXVat","totalIncVat","vat","numberOfBoards","totalPlasterArea","totalPlasterAreaDoubled","totalXDiscount","discountTotal","totalCost","joistReplacement","diameter","circumference","toast","present","duration","presentToastCorrect","presentToastIncorrect","spindlesNeeded","tinsRequired","vatAmount","requiredBoards","subTotal","discAmount","rotLevel","checkDiameter","pi","unsubscribe","isShell","BrickDetailsResolver","brickService","itemSlug","paramMap","get","dataSource","getDetailsDataSource","dataStore","getDetailsStore"],"mappings":"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","file":"brick-details-brick-details-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { BrickService } from '../brick.service';\nimport { BrickDetailsPage } from './brick-details.page';\nimport { BrickDetailsResolver } from './brick-details.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BrickDetailsPage,\n    resolve: {\n      data: BrickDetailsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    BrickDetailsPage\n  ],\n  providers: [\n    BrickDetailsResolver,\n    BrickService\n  ]\n})\nexport class BrickDetailsPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories/brick\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      <app-text-shell [data]=\"details?.name\"></app-text-shell>\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"brick-details-content\">\n  <ion-row class=\"image-row\" > \n    <ion-col size=\"12\">\n      <app-image-shell [display]=\"'cover'\" animation=\"spinner\" class=\"add-overlay showcase-image\"\n        [src]=\"details?.showcaseImage\">\n        <app-aspect-ratio [ratio]=\"{ w: 64, h: 40 }\">\n          <div class=\"icon-wrapper\">\n            <app-aspect-ratio [ratio]=\"{ w: 40, h: 20 }\">\n              <app-image-shell class=\"icon-image\" [src]=\"details?.icon\"></app-image-shell>\n            </app-aspect-ratio>\n          </div>\n        </app-aspect-ratio>\n      </app-image-shell>\n    </ion-col>\n  </ion-row>\n  <ion-row class=\"description-row\">\n    <ion-col size=\"9\">\n      <h3 class=\"details-name\">\n        <app-text-shell [data]=\"details?.name\"></app-text-shell>\n      </h3>\n      <p class=\"details-style\">\n        <app-text-shell [data]=\"details?.style\"></app-text-shell>\n      </p>\n    </ion-col>\n  </ion-row>\n\n\n \n  <ion-slides class=\"walkthrough-slides\" pager=\"true\" [options]=\"slidesOptions\" >\n\n     <!-- Perimiter Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Skirting'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Intro</h4>\n\n        <ion-card >\n          <img src=\"/assets/images/simple_rectangle.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Side 3:</ion-label>\n                      <ion-input name=\"side3\" [(ngModel)]=\"side3\" maxlength=\"4\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 4:</ion-label>\n                      <ion-input name=\"side4\" [(ngModel)]=\"side4\" maxlength=\"4\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total:</ion-label>\n                      <ion-input clear-input name=\"total\" [(ngModel)]=\"total\"></ion-input>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimple()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    <ion-slide class=\"last-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Skirting'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Advanced</h4>\n        <ion-card>\n          <img src=\"/assets/images/complex_rectangle.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1a\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2a\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Side 3:</ion-label>\n                      <ion-input name=\"side3a\" [(ngModel)]=\"side3a\" maxlength=\"4\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 4:</ion-label>\n                      <ion-input name=\"side4a\" [(ngModel)]=\"side4a\" maxlength=\"4\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 5:</ion-label>\n                      <p [innerHTML]=\"side5a\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 6:</ion-label>\n                      <p [innerHTML]=\"side6a\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total:</ion-label>\n                      <ion-input clear-input name=\"totala\" [(ngModel)]=\"total\"></ion-input>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateAdvanced()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    \n\n     <!-- Area Calculations -->\n\n     <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Laminate'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Intro</h4>\n\n        <ion-card >\n          <img src=\"/assets/images/simple_rectangle_area.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total:</ion-label>\n                      <ion-input clear-input name=\"totalArea\" [(ngModel)]=\"totalArea\"></ion-input>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimpleArea()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    <ion-slide class=\"last-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Laminate'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Advanced</h4>\n        <ion-card>\n          <img src=\"/assets/images/complex_rectangle.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1a\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2a\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Side 3:</ion-label>\n                      <ion-input name=\"side3a\" [(ngModel)]=\"side3a\" maxlength=\"4\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 4:</ion-label>\n                      <ion-input name=\"side4a\" [(ngModel)]=\"side4a\" maxlength=\"4\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 5:</ion-label>\n                      <p [innerHTML]=\"side5a\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 6:</ion-label>\n                      <p [innerHTML]=\"side6a\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total:</ion-label>\n                      <ion-input clear-input name=\"totalArea\" [(ngModel)]=\"totalArea\"></ion-input>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateAdvanced()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n     <!-- Spindle Calculations -->\n\n     <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Spindles'\">\n      <ion-row class=\"slide-inner-row\">\n        <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n\n        <ion-card >\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n         <!--  <ion-card-title>\n            \n            </ion-card-title> -->\n            <ion-card-subtitle>\n              Note: the distance between the spindles should be less than 100mm to conform to Building Regulations\n              <!-- <app-text-shell [data]=\"details?.style\"></app-text-shell> -->\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Thickness of Spindles: </ion-label>\n                      <p [innerHTML]=\"spindleThickness\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Distance between newel posts: </ion-label>\n                      <p [innerHTML]=\"newelDistance\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Spindles needed: </ion-label>\n                      <ion-input clear-input name=\"spindlesNeeded\" [(ngModel)]=\"spindlesNeeded\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Space between: </ion-label>\n                      <ion-input clear-input name=\"spindleSpace\" [(ngModel)]=\"spindleSpace\"></ion-input>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSpindles()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n   \n     <!-- Paint Calculations -->\n\n     <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Paint'\">\n      <ion-row class=\"slide-inner-row\">\n       \n        <ion-card >\n          <img src=\"/assets/images/simple_rectangle_area.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n               \n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Area:</ion-label>\n                      <ion-input clear-input name=\"totalArea\" [(ngModel)]=\"totalArea\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number of Tins:</ion-label>\n                      <ion-input clear-input name=\"totalTins\" [(ngModel)]=\"totalTins\"></ion-input>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimplePaint()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n  \n     \n       <!-- Timber Calculations -->\n  \n       <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Timber'\">\n        <ion-row class=\"slide-inner-row\">\n          <ion-card >\n            <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n            <ion-card-header>\n              <ion-card-title>\n                <app-text-shell [data]=\"details?.name\"></app-text-shell>\n              </ion-card-title>\n              <ion-card-subtitle>\n                <app-text-shell [data]=\"details?.style\"></app-text-shell>\n              </ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n                <ion-row class=\"slide-inner-row\">\n                 \n                  <!--  <ion-row class=\"description-row\">\n                    <img\n                      src=\"/assets/images/simple_rectangle.png\"\n                      class=\"ion-padding\"\n                    />\n                  </ion-row> -->\n                  <form>\n                    <ion-list class=\"ion-padding\">\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Cost of Timber: £</ion-label>\n                        <p [innerHTML]=\"costTimber\" type=\"number\"></p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Delivery Cost: £</ion-label>\n                        <p [innerHTML]=\"costDelivery\" type=\"number\"></p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Total before VAT: £</ion-label>\n                        <ion-input clear-input name=\"totalXVat\" [(ngModel)]=\"totalXVat\"></ion-input>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>VAT at 20%: £</ion-label>\n                        <ion-input clear-input name=\"vat\" [(ngModel)]=\"vat\"></ion-input>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Total Cost: £</ion-label>\n                        <ion-input clear-input name=\"totalIncVat\" [(ngModel)]=\"totalIncVat\"></ion-input>\n                      </ion-item>\n                    </ion-list>\n                    <div class=\"ion-padding\">\n                      <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimpleTimber()\">\n                        Submit\n                      </ion-button>\n                    </div>\n                  </form>\n                </ion-row>\n              </ion-slide>\n            </ion-card-content>\n          </ion-card>\n        </ion-row>\n      </ion-slide>\n\n\n       <!-- Area Calculations -->\n\n     <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Plasterboard'\">\n   \n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <img src=\"/assets/images/simple_rectangle_area.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Total Area:</ion-label>\n                      <ion-input name=\"totalPlasterArea\" [(ngModel)]=\"totalPlasterArea\" maxlength=\"5\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Multiplied by 2:</ion-label>\n                      <ion-input name=\"totalPlasterAreaDoubled\" [(ngModel)]=\"totalPlasterAreaDoubled\" maxlength=\"4\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Area per plasterboard:</ion-label>\n                      <p [innerHTML]=\"plasterCoverage\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number Required:</ion-label>\n                      <ion-input name=\"numberOfBoards\" [(ngModel)]=\"numberOfBoards\" maxlength=\"5\"></ion-input>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculatePlasteboard()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n\n    <!-- Discount Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Discount'\">\n   \n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Timber : £</ion-label>\n                      <p [innerHTML]=\"timberCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Screws : £</ion-label>\n                      <p [innerHTML]=\"screwsCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Wall PLugs : £</ion-label>\n                      <p [innerHTML]=\"plugsCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Discount : %</ion-label>\n                      <p [innerHTML]=\"discount\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total before Discount :</ion-label>\n                      <ion-input name=\"totalXDiscount\" [(ngModel)]=\"totalXDiscount\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Discount Total:</ion-label>\n                      <ion-input name=\"discountTotal\" [(ngModel)]=\"discountTotal\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Final Price:</ion-label>\n                      <ion-input name=\"totalCost\" [(ngModel)]=\"totalCost\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n\n                   \n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateDiscount()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n\n    <!-- Joist Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Joist'\">\n   \n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Joint Measurement : </ion-label>\n                      <p [innerHTML]=\"joistLength\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Amount of Rot : </ion-label>\n                      <p [innerHTML]=\"rotAmount\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Amount to Replace :</ion-label>\n                      <ion-input name=\"joistReplacement\" [(ngModel)]=\"joistReplacement\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n\n                   \n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateJoist()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n\n    <!-- Circumference Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Circumference'\">\n   \n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Radius : </ion-label>\n                      <p [innerHTML]=\"radius\" type=\"number\"></p>\n                    </ion-item>\n                   \n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Diameter : </ion-label>\n                      <ion-input name=\"diameter\" [(ngModel)]=\"diameter\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Circumference : </ion-label>\n                      <ion-input name=\"circumference\" [(ngModel)]=\"circumference\" maxlength=\"7\"></ion-input>\n                    </ion-item>\n\n                   \n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateCircumference()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n      \n    \n\n  </ion-slides>\n\n</ion-content>","import { Component, OnInit,AfterViewInit, ViewChild, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ToastController } from '@ionic/angular';\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { BrickDetailsModel } from './brick-details.model';\nimport { IonSlides, MenuController } from '@ionic/angular';\nimport { analytics } from 'firebase';\nimport { compileDirectiveFromRender2 } from '@angular/compiler/src/render3/view/compiler';\n\n\n@Component({\n  selector: 'app-brick-details',\n  templateUrl: './brick-details.page.html',\n  styleUrls: [\n    './styles/brick-details.page.scss',\n    './styles/brick-details.shell.scss'\n  ]\n  \n})\nexport class BrickDetailsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  slidesOptions: any = {\n    zoom: {\n      toggle: false // Disable zooming to prevent weird double tap zomming on slide images\n    }\n  };\n\n  \n  subscriptions: Subscription;\n  side1: any;\n  side2: any;\n  side3: any;\n  side4: any;\n  side1a: any;\n  side2a: any;\n  side3a: any;\n  side4a: any;\n  side5a: any;\n  side6a: any;\n  spindleThickness: any;\n  spindlesNeeded: any;\n  spindleSpace: any;\n  newelDistance: any;\n  joistLength: any;\n  rotAmount: any;\n  joistReplacement: any;\n  total: any;\n  totala: any;\n  totalArea: any;\n  totalTins: any;\n  costTimber: any;\n  costDelivery: any;\n  totalXVat: any;\n  vat: any;\n  totalIncVat: any;\n  totalPlasterArea: any;\n  totalPlasterAreaDoubled: any;\n  plasterCoverage: any;\n  numberOfBoards: any;\n  timberCost: any;\n  screwsCost: any;\n  plugsCost: any;\n  discount: any;\n  totalXDiscount: any;\n  discountTotal: any;\n  totalCost: any;\n  numerator: any;\n  denominator: any;\n  radius: any;\n  diameter: any;\n  circumference: any;\n\n\n  details: BrickDetailsModel;\n\n  @ViewChild(IonSlides, { static: true }) slides: IonSlides;\n\n  @HostBinding('class.first-slide-active') isFirstSlide = true;\n\n  @HostBinding('class.last-slide-active') isLastSlide = false;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.details && this.details.isShell) ? true : false;\n  }\n\n  \n\n  constructor(public menu: MenuController, private route: ActivatedRoute, public toastController: ToastController) { \n\n    this.generateSides();\n\n  }\n\n    // Disable side menu for this page\n    ionViewDidEnter(): void {\n      this.menu.enable(true);\n    }\n  \n    // Restore to default when leaving this page\n    ionViewDidLeave(): void {\n      this.menu.enable(true);\n    }\n\n    ngAfterViewInit(): void {\n      // ViewChild is set\n      this.slides.isBeginning().then(isBeginning => {\n        this.isFirstSlide = isBeginning;\n      });\n      this.slides.isEnd().then(isEnd => {\n        this.isLastSlide = isEnd;\n      });\n  \n      // Subscribe to changes\n      this.slides.ionSlideWillChange.subscribe(changes => {\n        this.slides.isBeginning().then(isBeginning => {\n          this.isFirstSlide = isBeginning;\n        });\n        this.slides.isEnd().then(isEnd => {\n          this.isLastSlide = isEnd;\n        });\n      });\n    }\n  \n    skipWalkthrough(): void {\n      // Skip to the last slide\n      this.slides.length().then(length => {\n        this.slides.slideTo(length);\n      });\n    }\n\n  generateSides():void {\n    this.side1 = Math.floor(Math.random() * 30) + 5; \n    this.side2 = this.side1 /2;\n    console.trace('Random: ', this.side1)\n\n    this.side1a = Math.floor(Math.random() * 30) + 5; \n    this.side2a = this.side1a * 0.384615385;\n    this.side2a = Math.round(this.side2a * 10) / 10;\n\n    this.side5a = this.side1 * 0.57;\n    this.side5a = Math.round(this.side5a * 10) / 10;\n\n    this.side6a = this.side1 * 0.615;\n    this.side6a = Math.round(this.side6a * 10) / 10;\n\n    this.spindleThickness = Math.floor(Math.random() * 35) + 30; \n    this.newelDistance = Math.floor(Math.random() * 4000) + 3000; \n\n    this.costTimber = Math.floor(Math.random() * 500) + 30; \n    this.costDelivery = Math.floor(Math.random() * 20) + 5; \n\n    this.plasterCoverage = 2.88;\n\n    this.timberCost = Math.floor(Math.random() * 400) + 100; \n    this.screwsCost = Math.floor(Math.random() * 100) + 10; \n    this.plugsCost = Math.floor(Math.random() * 100) + 10; \n    this.discount = Math.floor(Math.random() * 35) + 20; \n\n    this.joistLength = Math.floor(Math.random() * 15) + 2; \n    this.numerator = Math.floor(Math.random() * 3) + 1; \n    this.denominator = Math.floor(Math.random() * 8) + 4; \n    this.rotAmount = this.numerator + \" / \" + this.denominator;\n\n    this.radius = Math.floor(Math.random() * 300) + 10; \n\n\n\n  }\n\n\n\n  ngOnInit(): void {\n\n    \n\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<BrickDetailsModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<BrickDetailsModel>(resolvedRouteData.data, BrickDetailsModel)\n        .subscribe(\n          (state) => {\n            this.details = state;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n  \n  async presentToastCorrect() {\n    const toast = await this.toastController.create({\n      header: 'Correct!',\n      message: 'Well Done.',\n      position: 'bottom',\n      buttons: [\n         {\n          text: 'Next',\n          role: 'cancel',\n          handler: () => {\n            this.generateSides();\n            this.side3 = \"\";\n            this.side4 = \"\";\n            this.side3a = \"\";\n            this.side4a = \"\";\n            this.total = \"\";\n            this.totala = \"\";\n            this.totalArea = \"\";\n            this.totalTins = \"\";\n            this.totalXVat = \"\";\n            this.totalIncVat= \"\";\n            this.vat = \"\";\n            this.numberOfBoards = \"\";\n            this.totalPlasterArea = \"\";\n            this.totalPlasterAreaDoubled = \"\";\n            this.totalXDiscount = \"\";\n            this.discountTotal = \"\";\n            this.totalCost = \"\";\n            this.joistReplacement = \"\";\n            this.diameter = \"\";\n            this.circumference = \"\";\n          }\n        }\n      ]\n    });\n    toast.present();\n  }\n\n  async presentToastIncorrect() {\n    const toast = await this.toastController.create({\n      message: 'Try again!',\n      position: 'bottom',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  \n\n  calculateSimple():void {\n\n    \n\n    if (this.total == this.side1+this.side1+this.side2+this.side2) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  calculateSimpleArea():void {\n\n    \n\n    if (this.totalArea == this.side1*this.side2) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  calculateComplexArea():void {\n\n    \n\n    if (this.totalArea == (this.side1a*this.side2a)+(this.side4a*this.side5a)) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  calculateAdvanced():void {\n\n    \n\n    if (this.totala == this.side1a+this.side1a+this.side6a+this.side6a) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  calculateSpindles():void {\n\n    \n\n    if (this.spindlesNeeded = this.newelDistance/(this.spindleThickness+100)) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  calculateSimplePaint():void {\n\n    var tinsRequired = Math.round((this.totalArea / 22) * 10) / 10;\n    console.trace(tinsRequired)\n\n    if (this.totalArea == this.side1*this.side2 && tinsRequired == this.totalTins)  {\n      console.trace('Correct!');\n  \n       this.presentToastCorrect();\n       \n        \n      } else {\n  \n        this.presentToastIncorrect();\n      }\n      \n    }\n\n    calculateSimpleTimber():void {\n\n      var vatAmount = (this.costTimber + this.costDelivery) * 0.2\n      console.trace(vatAmount)\n  \n      if (this.costTimber+this.costDelivery+ vatAmount == this.totalIncVat)  {\n        console.trace('Correct!');\n    \n         this.presentToastCorrect();\n         \n          \n        } else {\n    \n          this.presentToastIncorrect();\n        }\n        \n      }\n\n      calculatePlasteboard():void {\n\n        var requiredBoards = Math.round((this.totalPlasterAreaDoubled / 2.88) * 10) / 10;\n\n\n        if (this.totalPlasterAreaDoubled  == (this.side2*this.side1)*2 && this.numberOfBoards == requiredBoards )  {\n          console.trace('Correct!');\n      \n           this.presentToastCorrect();\n           \n            \n          } else {\n      \n            this.presentToastIncorrect();\n          }\n          \n        }\n\n        calculateDiscount():void {\n\n         \n          var subTotal = this.timberCost+this.plugsCost+this.screwsCost;\n          var discAmount = subTotal * (this.discount / 100);\n\n          console.trace(\"Subtotal = \" + subTotal + \"Discount = \" + discAmount)\n\n          if (this.totalCost == subTotal - discAmount)  {\n            console.trace('Correct!');\n        \n             this.presentToastCorrect();\n             \n              \n            } else {\n        \n              this.presentToastIncorrect();\n            }\n            \n          }\n\n          calculateJoist():void {\n\n            var rotLevel = Math.round((this.joistLength * this.numerator / this.denominator) * 10) / 10;\n            console.trace(rotLevel + \" & \" + this.joistReplacement)\n            \n            if (rotLevel == this.joistReplacement)  {\n              console.trace('Correct!');\n          \n               this.presentToastCorrect();\n               \n                \n              } else {\n          \n                this.presentToastIncorrect();\n              }\n              \n            }\n\n            calculateCircumference():void {\n\n              var checkDiameter = Math.round((this.radius * 2) * 10) / 10;\n              var pi = Math.round((this.diameter * 3.14159265359) * 10) / 10;\n\n              console.trace(checkDiameter + \" & \" + this.diameter + \" Pi \" + pi)\n              \n              if (checkDiameter == this.diameter && this.circumference == pi)  {\n                console.trace('Correct!');\n            \n                 this.presentToastCorrect();\n                 \n                  \n                } else {\n            \n                  this.presentToastIncorrect();\n                }\n                \n              }\n\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { BrickService } from '../brick.service';\nimport { BrickDetailsModel } from './brick-details.model';\n\n@Injectable()\nexport class BrickDetailsResolver implements Resolve<DataStore<BrickDetailsModel>> {\n\n  constructor(private brickService: BrickService) {}\n\n  resolve(route: ActivatedRouteSnapshot): DataStore<BrickDetailsModel> {\n    const itemSlug = route.paramMap.get('productId');\n\n    const dataSource: Observable<BrickDetailsModel> = this.brickService.getDetailsDataSource(itemSlug);\n    const dataStore: DataStore<BrickDetailsModel> = this.brickService.getDetailsStore(dataSource);\n\n    return dataStore;\n  }\n}\n"]}