{"version":3,"sources":["./src/app/login/login.page.ts","./src/app/components/show-hide-password/show-hide-password.component.ts","./src/app/login/login.page.html","./src/app/login/login.module.ts","./src/app/components/show-hide-password/show-hide-password.component.html"],"names":[],"mappings":"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","file":"login-login-module-ngfactory-es2015.js","sourcesContent":["import { Component } from '@angular/core';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MenuController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: [\n    './styles/login.page.scss'\n  ]\n})\nexport class LoginPage {\n  loginForm: FormGroup;\n\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Enter a valid email.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 5 characters long.' }\n    ]\n  };\n\n  constructor(\n    public router: Router,\n    public menu: MenuController\n  ) {\n    this.loginForm = new FormGroup({\n      'email': new FormControl('test@test.com', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      'password': new FormControl('', Validators.compose([\n        Validators.minLength(5),\n        Validators.required\n      ]))\n    });\n  }\n\n  // Disable side menu for this page\n  ionViewDidEnter(): void {\n    this.menu.enable(false);\n  }\n\n  // Restore to default when leaving this page\n  ionViewDidLeave(): void {\n    this.menu.enable(true);\n  }\n\n  doLogin(): void {\n    console.log('do Log In');\n    this.router.navigate(['app/categories']);\n  }\n\n  goToForgotPassword(): void {\n    console.log('redirect to forgot-password page');\n  }\n\n  doFacebookLogin(): void {\n    console.log('facebook login');\n    this.router.navigate(['app/categories']);\n  }\n\n  doGoogleLogin(): void {\n    console.log('google login');\n    this.router.navigate(['app/categories']);\n  }\n\n  doTwitterLogin(): void {\n    console.log('twitter login');\n    this.router.navigate(['app/categories']);\n  }\n}\n","import { Component, ContentChild } from '@angular/core';\n\nimport { IonInput } from '@ionic/angular';\n\n@Component({\n  selector: 'app-show-hide-password',\n  templateUrl: './show-hide-password.component.html',\n  styleUrls: [\n    './show-hide-password.component.scss'\n  ]\n})\nexport class ShowHidePasswordComponent {\n  show = false;\n\n  @ContentChild(IonInput) input: IonInput;\n\n  constructor() {}\n\n  toggleShow() {\n    this.show = !this.show;\n    if (this.show) {\n      this.input.type = 'text';\n    } else {\n      this.input.type = 'password';\n    }\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>Log In</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"login-content\">\n  <h2 class=\"auth-title\">\n    Welcome!\n    <br/>\n    Discover the new Ionic 5\n  </h2>\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"doLogin()\">\n    <ion-list class=\"inputs-list\" lines=\"full\">\n      <ion-item class=\"input-item\">\n        <ion-input type=\"email\" placeholder=\"Email\" formControlName=\"email\" clearInput autocapitalize=\"off\" inputmode=\"email\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.email\">\n          <div class=\"error-message\" *ngIf=\"loginForm.get('email').hasError(validation.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n\n      <ion-item class=\"input-item\">\n        <app-show-hide-password>\n          <ion-input type=\"password\" placeholder=\"Password\" formControlName=\"password\"></ion-input>\n        </app-show-hide-password>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.password\">\n          <div class=\"error-message\" *ngIf=\"loginForm.get('password').hasError(validation.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n    </ion-list>\n\n    <ion-button class=\"login-btn\" type=\"submit\" expand=\"block\" [disabled]=\"!loginForm.valid\">Log In</ion-button>\n    <ion-row class=\"other-auth-options-row\">\n      <ion-button class=\"forgot-btn\" fill=\"clear\" [routerLink]=\"['/auth/forgot-password']\">\n        Forgot Password?\n      </ion-button>\n      <ion-button class=\"signup-btn\" fill=\"clear\" [routerLink]=\"['/auth/signup']\">\n        Sign Up!\n      </ion-button>\n    </ion-row>\n  </form>\n\n  <div class=\"social-auth-options\">\n    <p class=\"options-divider\">Or</p>\n    <ion-button class=\"social-auth-btn facebook-auth-btn\" expand=\"block\" color=\"facebook\" (click)=\"doFacebookLogin()\">Log In with Facebook</ion-button>\n    <ion-button class=\"social-auth-btn google-auth-btn\" expand=\"block\" color=\"google\" (click)=\"doGoogleLogin()\">Log In with Google</ion-button>\n    <ion-button class=\"social-auth-btn twitter-auth-btn\" expand=\"block\" color=\"twitter\" (click)=\"doTwitterLogin()\">Log In with Twitter</ion-button>\n  </div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../components/components.module';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","<ng-content></ng-content>\n<a class=\"type-toggle\" (click)=\"toggleShow()\">\n\t<ion-icon class=\"show-option\" [hidden]=\"show\" name=\"eye-off-outline\"></ion-icon>\n\t<ion-icon class=\"hide-option\" [hidden]=\"!show\" name=\"eye-outline\"></ion-icon>\n  <!-- In case you want to use text instead of icons -->\n\t<!--\n  <span class=\"show-option\" [hidden]=\"show\">show</span>\n\t<span class=\"hide-option\" [hidden]=\"!show\">hide</span>\n  -->\n</a>\n"],"sourceRoot":"webpack:///"}