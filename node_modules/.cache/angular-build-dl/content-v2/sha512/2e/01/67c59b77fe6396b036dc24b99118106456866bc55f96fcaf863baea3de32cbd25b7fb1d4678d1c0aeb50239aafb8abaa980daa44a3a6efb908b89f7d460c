{"version":3,"sources":["webpack:///src/app/plumbing/details/plumbing-details.resolver.ts","webpack:///src/app/plumbing/details/plumbing-details.module.ts","webpack:///src/app/plumbing/details/plumbing-details.page.html","webpack:///src/app/plumbing/details/plumbing-details.page.ts"],"names":["plumbingDetailsResolver","plumbingService","route","itemSlug","paramMap","get","dataSource","getDetailsDataSource","dataStore","getDetailsStore","routes","path","component","resolve","data","plumbingDetailsPageModule","plumbingDetailsPage","menu","toastController","slidesOptions","zoom","toggle","isFirstSlide","isLastSlide","generateSides","enable","slides","isBeginning","then","isEnd","ionSlideWillChange","subscribe","changes","length","slideTo","precision","metres","Math","floor","random","centimetre","side1","side2","console","trace","side1a","side2a","round","side5a","side6a","wallWidth","wallDepth","wallHeight","litresPMin","joistThickness","maxDepth","cylDiameter","cylHeight","cylRadius","sysPressure","gutterLength","finishTemp","startTemp","ceil","cleValue","waterVol","finishTempCap","startTempCap","heatCap","subscriptions","resolvedRouteData","extractData","state","details","error","create","header","message","position","buttons","text","role","handler","convertedMetres","convertedCent","side3","side4","side3a","side4a","total","totala","totalArea","totalWallArea","litresPsec","maxPipe","volM3","volLitre","baseArea","sysNewton","expansion","energyCap","toast","present","duration","conversion","presentToastCorrect","presentToastIncorrect","s3","s4","area1","area2","areaCubed","litres","pipe","area","vol","volL","volMetres3","pressure","tempincrease","expansionCalc","unsubscribe","isShell"],"mappings":"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","file":"plumbing-details-plumbing-details-module-ngfactory-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { plumbingService } from '../plumbing.service';\nimport { plumbingDetailsModel } from './plumbing-details.model';\n\n@Injectable()\nexport class plumbingDetailsResolver implements Resolve<DataStore<plumbingDetailsModel>> {\n\n  constructor(private plumbingService: plumbingService) {}\n\n  resolve(route: ActivatedRouteSnapshot): DataStore<plumbingDetailsModel> {\n    const itemSlug = route.paramMap.get('productId');\n\n    const dataSource: Observable<plumbingDetailsModel> = this.plumbingService.getDetailsDataSource(itemSlug);\n    const dataStore: DataStore<plumbingDetailsModel> = this.plumbingService.getDetailsStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { plumbingService } from '../plumbing.service';\nimport { plumbingDetailsPage } from './plumbing-details.page';\nimport { plumbingDetailsResolver } from './plumbing-details.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: plumbingDetailsPage,\n    resolve: {\n      data: plumbingDetailsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    plumbingDetailsPage\n  ],\n  providers: [\n    plumbingDetailsResolver,\n    plumbingService\n  ]\n})\nexport class plumbingDetailsPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories/plumbing\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      <app-text-shell [data]=\"details?.name\"></app-text-shell>\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"plumbing-details-content\">\n  <ion-row class=\"image-row\">\n    <ion-col size=\"12\">\n      <app-image-shell [display]=\"'cover'\" animation=\"spinner\" class=\"add-overlay showcase-image\"\n        [src]=\"details?.showcaseImage\">\n        <app-aspect-ratio [ratio]=\"{ w: 64, h: 40 }\">\n          <div class=\"icon-wrapper\">\n            <app-aspect-ratio [ratio]=\"{ w: 1, h: 1 }\">\n              <app-image-shell class=\"icon-image\" [src]=\"details?.icon\"></app-image-shell>\n            </app-aspect-ratio>\n          </div>\n        </app-aspect-ratio>\n      </app-image-shell>\n    </ion-col>\n  </ion-row>\n  <!-- <ion-row class=\"description-row\">\n    <ion-col size=\"9\">\n      <h3 class=\"details-name\">\n        <app-text-shell [data]=\"details?.name\"></app-text-shell>\n      </h3>\n      <p class=\"details-style\">\n        <app-text-shell [data]=\"details?.style\"></app-text-shell>\n      </p>\n    </ion-col>\n  </ion-row> -->\n\n\n\n  <ion-slides class=\"walkthrough-slides\" pager=\"true\" [options]=\"slidesOptions\">\n\n    <!-- Convert Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Convert'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Metres to Millimetres</h4>\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                    <img\n                      src=\"/assets/images/simple_rectangle.png\"\n                      class=\"ion-padding\"\n                    />\n                  </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Metres :</ion-label>\n                      <p [innerHTML]=\"metres\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Millimetres:</ion-label>\n                      <ion-input clear-input name=\"convertedMetres\" [(ngModel)]=\"convertedMetres\"></ion-input>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateM5toCM()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    <ion-slide class=\"last-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Convert'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Centimetres to Millimetres</h4>\n        <ion-card>\n          <!-- <img src=\"/assets/images/complex_rectangle.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                    <img\n                      src=\"/assets/images/simple_rectangle.png\"\n                      class=\"ion-padding\"\n                    />\n                  </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Centimetres :</ion-label>\n                      <p [innerHTML]=\"centimetre\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">cm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Millimetres :</ion-label>\n                      <ion-input clear-input name=\"convertedCent\" [(ngModel)]=\"convertedCent\"></ion-input>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateM5toMM()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Area Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Area'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Intro</h4>\n\n        <ion-card>\n          <img src=\"/assets/images/simple_rectangle_area.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total:</ion-label>\n                      <ion-input clear-input name=\"totalArea\" [(ngModel)]=\"totalArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimpleArea()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    <ion-slide class=\"last-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Area'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Stretch</h4>\n        <ion-card>\n          <img src=\"/assets/images/complex_rectangle.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1a\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2a\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Side 3:</ion-label>\n                      <ion-input name=\"side3a\" [(ngModel)]=\"side3a\" maxlength=\"6\"></ion-input>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 4:</ion-label>\n                      <ion-input name=\"side4a\" [(ngModel)]=\"side4a\" maxlength=\"6\"></ion-input>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 5:</ion-label>\n                      <p [innerHTML]=\"side5a\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 6:</ion-label>\n                      <p [innerHTML]=\"side6a\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total:</ion-label>\n                      <ion-input clear-input name=\"totalArea\" [(ngModel)]=\"totalArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateComplexArea()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Room Volume -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Room Volume'\">\n      <ion-row class=\"slide-inner-row\">\n        <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n\n        <ion-card>\n          <img src=\"/assets/images/wall_area.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Depth :</ion-label>\n                      <p [innerHTML]=\"wallDepth\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Width :</ion-label>\n                      <p [innerHTML]=\"wallWidth\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Height :</ion-label>\n                      <p [innerHTML]=\"wallHeight\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Area :</ion-label>\n                      <ion-input clear-input name=\"totalWallArea\" [(ngModel)]=\"totalWallArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m3</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateRoomVolume()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n\n    <!-- Litres -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Litres'\">\n      <ion-row class=\"slide-inner-row\">\n        <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/wall_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Litres :</ion-label>\n                      <p [innerHTML]=\"litresPMin\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">per minute</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Litres :</ion-label>\n                      <ion-input clear-input name=\"litresPsec\" [(ngModel)]=\"litresPsec\"></ion-input>\n                      <p style=\"margin-left: 5px;\">per second</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateLitres()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Joist -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Joist'\">\n      <ion-row class=\"slide-inner-row\">\n        <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/wall_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Joist thickness :</ion-label>\n                      <p [innerHTML]=\"joistThickness\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Max notch depth :</ion-label>\n                      <p [innerHTML]=\"maxDepth\" type=\"number\"></p>\n                      <!-- <p style=\"margin-left: 5px;\">mm</p> -->\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Max pipe size :</ion-label>\n                      <ion-input clear-input name=\"maxPipe\" [(ngModel)]=\"maxPipe\"></ion-input>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateJoist()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Cylinder -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Cylinder'\">\n      <ion-row class=\"slide-inner-row\">\n        <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/wall_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Diameter :</ion-label>\n                      <p [innerHTML]=\"cylDiameter\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Radius :</ion-label>\n                      <p [innerHTML]=\"cylRadius\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Area of base :</ion-label>\n                      <ion-input clear-input name=\"baseArea\" [(ngModel)]=\"baseArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">mm2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Height :</ion-label>\n                      <p [innerHTML]=\"cylHeight\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Volume :</ion-label>\n                      <ion-input clear-input name=\"cylVolume\" [(ngModel)]=\"cylVolume\"></ion-input>\n                      <p style=\"margin-left: 5px;\">mm3</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Volume in litres :</ion-label>\n                      <ion-input clear-input name=\"volLitre\" [(ngModel)]=\"volLitre\"></ion-input>\n                      <p style=\"margin-left: 5px;\">litres</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Volume in m3 :</ion-label>\n                      <ion-input clear-input name=\"volM3\" [(ngModel)]=\"volM3\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m3</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateCylinder()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Water Pressure -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Water Pressure'\">\n      <ion-row class=\"slide-inner-row\">\n        <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/wall_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>System Pressure (m head) :</ion-label>\n                      <p [innerHTML]=\"sysPressure\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>x Gravity (9.81)N :</ion-label>\n                      <ion-input clear-input name=\"sysNewton\" [(ngModel)]=\"sysNewton\"></ion-input>\n                      <p style=\"margin-left: 5px;\">Newtons</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculatePressure()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Gutter -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Gutter'\">\n      <ion-row class=\"slide-inner-row\">\n        <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/wall_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Length of guttering :</ion-label>\n                      <p [innerHTML]=\"gutterLength\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Start temp :</ion-label>\n                      <p [innerHTML]=\"startTemp\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">c</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Finish temp :</ion-label>\n                      <p [innerHTML]=\"finishTemp\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">c</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>CLE value :</ion-label>\n                      <p [innerHTML]=\"cleValue\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\"></p>\n                    </ion-item>\n\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Expansion :</ion-label>\n                      <ion-input clear-input name=\"expansion\" [(ngModel)]=\"expansion\"></ion-input>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateGutter()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n\n    <!-- Heat Cap -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Heat Cap'\">\n      <ion-row class=\"slide-inner-row\">\n        <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/wall_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Volume of water :</ion-label>\n                      <p [innerHTML]=\"waterVol\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">litres</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Start temp :</ion-label>\n                      <p [innerHTML]=\"startTempCap\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">c</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Finish (desired) temp :</ion-label>\n                      <p [innerHTML]=\"finishTempCap\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">c</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Specific heat capacity :</ion-label>\n                      <p [innerHTML]=\"heatCap\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\"></p>\n                    </ion-item>\n\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Energy required :</ion-label>\n                      <ion-input clear-input name=\"energyCap\" [(ngModel)]=\"energyCap\"></ion-input>\n                      <p style=\"margin-left: 5px;\">kW/h</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateCap()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n\n\n\n\n\n\n\n\n  </ion-slides>\n\n</ion-content>","import { Component, OnInit, AfterViewInit, ViewChild, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ToastController } from '@ionic/angular';\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { plumbingDetailsModel } from './plumbing-details.model';\nimport { IonSlides, MenuController } from '@ionic/angular';\nimport { analytics } from 'firebase';\nimport { compileDirectiveFromRender2 } from '@angular/compiler/src/render3/view/compiler';\nimport { AnyRecordWithTtl, AnyTxtRecord } from 'dns';\n\n\n@Component({\n  selector: 'app-plumbing-details',\n  templateUrl: './plumbing-details.page.html',\n  styleUrls: [\n    './styles/plumbing-details.page.scss',\n    './styles/plumbing-details.shell.scss'\n  ]\n\n})\nexport class plumbingDetailsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  slidesOptions: any = {\n    zoom: {\n      toggle: false // Disable zooming to prevent weird double tap zomming on slide images\n    }\n  };\n\n\n  subscriptions: Subscription;\n\n  // Convert\n  metres: any;\n  convertedMetres: any;\n  centimetre: any;\n  convertedCent: any;\n\n  // Area\n  side1: any;\n  side2: any;\n  side3: any;\n  side4: any;\n  side1a: any;\n  side2a: any;\n  side3a: any;\n  side4a: any;\n  side5a: any;\n  side6a: any;\n  total: any;\n  totala: any;\n  totalArea: any;\n\n  //WallArea\n  wallDepth: any;\n  wallWidth: any;\n  wallHeight: any;\n  totalWallArea: any;\n\n  //Litres\n  litresPMin: any;\n  litresPsec: any;\n\n  //Joist\n  joistThickness: any;\n  maxDepth: any;\n  maxPipe: any;\n\n  //cylinder\n  cylDiameter: any;\n  cylRadius: any;\n  baseArea: any;\n  cylHeight: any;\n  cylVolume: any;\n  volLitre: any;\n  volM3: any;\n\n  // Water Pressure\n  sysPressure: any;\n  sysNewton: any;\n\n  // Gutter\n  gutterLength: any;\n  startTemp: any;\n  finishTemp: any;\n  cleValue: any;\n  expansion: any;\n\n  // Heat Cap\n  waterVol: any;\n  startTempCap: any;\n  finishTempCap: any;\n  heatCap: any;\n  energyCap: any;\n\n  details: plumbingDetailsModel;\n\n  @ViewChild(IonSlides, { static: true }) slides: IonSlides;\n\n  @HostBinding('class.first-slide-active') isFirstSlide = true;\n\n  @HostBinding('class.last-slide-active') isLastSlide = false;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.details && this.details.isShell) ? true : false;\n  }\n\n\n\n  constructor(public menu: MenuController, private route: ActivatedRoute, public toastController: ToastController) {\n\n    this.generateSides();\n\n  }\n\n  // Disable side menu for this page\n  ionViewDidEnter(): void {\n    this.menu.enable(true);\n  }\n\n  // Restore to default when leaving this page\n  ionViewDidLeave(): void {\n    this.menu.enable(true);\n  }\n\n  ngAfterViewInit(): void {\n    // ViewChild is set\n    this.slides.isBeginning().then(isBeginning => {\n      this.isFirstSlide = isBeginning;\n    });\n    this.slides.isEnd().then(isEnd => {\n      this.isLastSlide = isEnd;\n    });\n\n    // Subscribe to changes\n    this.slides.ionSlideWillChange.subscribe(changes => {\n      this.slides.isBeginning().then(isBeginning => {\n        this.isFirstSlide = isBeginning;\n      });\n      this.slides.isEnd().then(isEnd => {\n        this.isLastSlide = isEnd;\n      });\n    });\n  }\n\n  skipWalkthrough(): void {\n    // Skip to the last slide\n    this.slides.length().then(length => {\n      this.slides.slideTo(length);\n    });\n  }\n\n  generateSides(): void {\n\n    // Convert\n    var precision = 10; // 1 decimals\n    this.metres = Math.floor(Math.random() * (10 * precision - 1 * precision) + 1 * precision) / (1 * precision);\n    this.centimetre = Math.floor(Math.random() * 600) + 200;\n\n    //Area\n    this.side1 = (Math.floor(Math.random() * 100) + 1) * 100;\n    this.side2 = this.side1 / 2;\n    console.trace('Random: ', this.side1)\n\n    this.side1a = (Math.floor(Math.random() * 100) + 10) * 100;\n    this.side2a = this.side1a * 0.3;\n    this.side2a = Math.round(this.side2a * 10) / 10;\n\n    this.side5a = this.side1a * 0.57;\n    this.side5a = Math.round(this.side5a * 10) / 10;\n\n    this.side6a = this.side1a * 0.62;\n    this.side6a = Math.round(this.side6a * 10) / 10;\n\n    // Room Volume\n\n    this.wallWidth = Math.floor(Math.random() * 10) + 3;\n    this.wallDepth = this.wallWidth * 0.8;\n    this.wallDepth = Math.round(this.wallDepth * 10) / 10;\n    this.wallHeight = 2.5;\n\n    //Litres\n    this.litresPMin = Math.floor(Math.random() * 50) + 1;\n\n    //Joist\n    this.joistThickness = Math.floor(Math.random() * 200) + 100;\n    this.maxDepth = \"1 / 8\";\n\n    //Cylinder\n    this.cylDiameter = Math.floor(Math.random() * 500) + 400;\n    this.cylHeight = this.cylDiameter * 2;\n    this.cylRadius = this.cylDiameter / 2;\n\n    //Water Pressure\n    this.sysPressure = Math.floor(Math.random() * 20) + 1;\n\n    //Gutter\n    this.gutterLength = Math.floor(Math.random() * 20) + 1;\n    this.finishTemp = Math.floor(Math.random() * 20) + 10;\n    this.startTemp = Math.ceil(this.finishTemp * 0.4);\n    this.cleValue = 0.000018;\n\n    //Heat Cap\n    this.waterVol = Math.floor(Math.random() * 200) + 100;\n    this.finishTempCap = Math.floor(Math.random() * 95) + 40;\n    this.startTempCap = Math.floor(Math.random() * 20) + 5;\n    this.heatCap = 4.186;\n  }\n\n\n\n  ngOnInit(): void {\n\n\n\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n      .subscribe(\n        (resolvedRouteData: IResolvedRouteData<plumbingDetailsModel>) => {\n          // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n          this.subscriptions = ResolverHelper.extractData<plumbingDetailsModel>(resolvedRouteData.data, plumbingDetailsModel)\n            .subscribe(\n              (state) => {\n                this.details = state;\n              },\n              (error) => { }\n            );\n        },\n        (error) => { }\n      );\n  }\n\n  async presentToastCorrect() {\n    const toast = await this.toastController.create({\n      header: 'Correct!',\n      message: 'Well Done.',\n      position: 'bottom',\n      buttons: [\n        {\n          text: 'Next',\n          role: 'cancel',\n          handler: () => {\n            this.generateSides();\n            this.convertedMetres = \"\";\n            this.convertedCent = \"\";\n            this.side3 = \"\";\n            this.side4 = \"\";\n            this.side3a = \"\";\n            this.side4a = \"\";\n            this.total = \"\";\n            this.totala = \"\";\n            this.totalArea = \"\";\n            this.totalWallArea = \"\";\n            this.litresPsec = \"\";\n            this.maxPipe = \"\";\n            this.volM3 = \"\";\n            this.volLitre = \"\";\n            this.baseArea = \"\";\n            this.sysNewton = \"\";\n            this.expansion = \"\";\n            this.energyCap = \"\";\n          }\n        }\n      ]\n    });\n    toast.present();\n  }\n\n  async presentToastIncorrect() {\n    const toast = await this.toastController.create({\n      message: 'Try again!',\n      position: 'bottom',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  calculateM5toCM(): void {\n\n    var conversion = this.metres * 1000;\n    conversion = Math.round(conversion * 10) / 10;\n\n    if (conversion == this.convertedMetres) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateM5toMM(): void {\n\n    var conversion = this.centimetre * 10;\n    conversion = Math.round(conversion * 10) / 10;\n\n    if (conversion == this.convertedCent) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateSimpleArea(): void {\n\n    var conversion = ((this.side1 * this.side2) / 1000000);\n    conversion = Math.round(conversion * 100) / 100;\n    console.trace(conversion);\n\n    if (this.totalArea == conversion) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateComplexArea(): void {\n\n    var s3 = this.side1a - this.side5a;\n    var s4 = this.side6a - this.side2a\n    var area1 = this.side1a * this.side2a;\n    var area2 = this.side4a * this.side5a;\n    var conversion = (area1 + area2) / 1000000;\n    conversion = Math.round(conversion * 100) / 100;\n    console.trace(\"Side 3 \" + s3 + \" Side 4\" + s4 + \" A1 \" + area1 + \" A2 \" + area2 + \" Conversion \" + conversion);\n\n    if (this.totalArea == conversion) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateRoomVolume(): void {\n\n    var areaCubed = (this.wallDepth * this.wallWidth) * this.wallHeight;\n    areaCubed = Math.ceil(areaCubed * 10) / 10;\n    console.trace(areaCubed);\n\n    if (this.totalWallArea == areaCubed) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateLitres(): void {\n\n    var litres = this.litresPMin / 60;\n    litres = Math.round(litres * 100) / 100;\n    console.trace(litres);\n\n    if (this.litresPsec == litres) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateJoist(): void {\n\n    var pipe = this.joistThickness / 8;\n    pipe = Math.round(pipe * 100) / 100;\n    console.trace(pipe);\n\n    if (this.maxPipe == pipe) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateCylinder(): void {\n\n    var area = this.cylDiameter * this.cylRadius;\n    area = Math.round(area * 100) / 100;\n    var vol = area * this.cylHeight;\n    vol = Math.round(vol * 100) / 100;\n    var volL = vol * 0.000001;\n    volL = Math.round(volL * 100) / 100;\n    var volMetres3 = volL / 1000;\n    volMetres3 = Math.round(volMetres3 * 100) / 100;\n\n\n    console.trace(\"Area :\" + area + \" Volume :\" + vol + \" Vol Litres\" + volL + \" vol m3 \" + volMetres3);\n\n    if (this.volLitre == volL && this.volM3 == volMetres3) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculatePressure(): void {\n\n    var pressure = this.sysPressure * 9.81;\n    pressure = Math.round(pressure * 100) / 100;\n\n    console.trace(pressure)\n\n    if (pressure == this.sysNewton) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateGutter(): void {\n\n    var tempincrease = this.finishTemp - this.startTemp;\n    var expansionCalc = this.cleValue * this.gutterLength * tempincrease;\n    expansionCalc = Math.round((expansionCalc * 1000) * 100) / 100;\n\n    console.trace(expansionCalc)\n\n    if (expansionCalc == this.expansion) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateCap(): void {\n\n    var tempincrease = this.finishTempCap - this.startTempCap;\n    var expansionCalc = this.waterVol * tempincrease * this.heatCap;\n    expansionCalc = Math.round((expansionCalc / 3412) * 100) / 100;\n\n    console.trace(expansionCalc)\n\n    if (expansionCalc == this.energyCap) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n\n\n\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n"]}