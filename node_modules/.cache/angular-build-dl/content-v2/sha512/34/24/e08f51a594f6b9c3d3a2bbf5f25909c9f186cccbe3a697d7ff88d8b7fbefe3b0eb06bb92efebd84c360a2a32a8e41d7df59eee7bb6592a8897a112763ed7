{"version":3,"sources":["webpack:///src/app/travel/listing/travel-listing.resolver.ts","webpack:///src/app/travel/listing/travel-listing.module.ts","webpack:///src/app/travel/listing/travel-listing.plain.resolver.ts","webpack:///src/app/utils/resolver-helper.ts","webpack:///src/app/travel/listing/travel-listing.page.html","webpack:///src/app/travel/listing/travel-listing.page.ts"],"names":["TravelListingResolver","travelService","dataSource","getListingDataSource","dataStore","getListingStore","routes","path","component","resolve","data","TravelListingPageModule","TravelListingPlainResolver","ResolverHelper","source","constructor","state","TravelListingPage","route","subscriptions","subscribe","resolvedRouteData","extractData","listing","error","unsubscribe","isShell"],"mappings":";;;;;;;;;;;;;;;;;;;;AAKA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAIaA,qB;AAEX,uCAAoBC,aAApB,EAAkD;AAAA;;AAA9B,eAAAA,aAAA,GAAAA,aAAA;AAAgC;;;;oCAE7C;AACL,gBAAMC,UAAU,GAAmC,KAAKD,aAAL,CAAmBE,oBAAnB,EAAnD;AACA,gBAAMC,SAAS,GAAkC,KAAKH,aAAL,CAAmBI,eAAnB,CAAmCH,UAAnC,CAAjD;AAEA,mBAAOE,SAAP;AACD;;;;;;;;;;;;;;;;;;;;;AChBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;eAiBY,8E;AALZ,UAAME,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,sEAFb;AAGEC,eAAO,EAAE;AACPC,cAAI,EAAE,EADC,CAEP;;AAFO;AAHX,OADqB,CAAvB;;UA4BaC,uB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAIaC,0B;AAEX,4CAAoBX,aAApB,EAAkD;AAAA;;AAA9B,eAAAA,aAAA,GAAAA,aAAA;AAAgC;;;;oCAE7C;AACL,mBAAO,KAAKA,aAAL,CAAmBE,oBAAnB,EAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaU,c;;;;;;;AACX;sCAC6BC,M,EAA4BC,W,EAAuC;AAC9F,gBAAID,MAAM,YAAY,2DAAtB,EAAiC;AAC/B,qBAAOA,MAAM,CAACE,KAAd;AACD,aAFD,MAEO,IAAIF,MAAM,YAAYC,WAAtB,EAAmC;AACxC;AACA;AACA;AACA,qBAAO,gDAAGD,MAAH,CAAP;AACD;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uECPC,kJ,IACE,iV,GAAA,2T,GACE,sU,GAAA;AAAA;AAAA,gB,GACE;AAAA;;AAAA;;;;;;;;;;;SAAA,E,6GAAA,E,iHAAA,C;;kBAAuF,wD,EAAvF,0c,EAAA;AAAA;AAAA;AAAA,gB,GACE,kX,GAAA;AAAA;AAAA,gB,EAAkB;AAAA;AAAA;AAAA,U,GAChB,6J,IACE,+I,IACE,oX,GAAA;AAAA;AAAA,gB,EAAkB;AAAA;AAAA;AAAA,U,GAChB,qb,GAAA;AAAA;AAAA,gB,GAGJ,8I,IACE,0H,IAAM,iF,IACN,8W,GAAA;AAAA;AAAA,gB,GAOZ,iV,GAAA,4T,GACE,mV,GAAA,4T,GACE,2I,IACE;AAAA;;AAAA;;;;;;;;;;;SAAA,E,IAAA,E,IAAA,C;;kBAAuB,yD,GACrB,qY,GAAA;AAAA;AAAA,gB,GAGJ,iJ,IACE,qZ,GAAA;AAAA;AAAA,gB,GAEF,6I,IACE,qY,GAAA;AAAA;AAAA,gB,GAIN,kV,GAAA,4T,GACE,+V,GAAA;AAAA;AAAA,gB,GACE,gJ,IACE,4W,GAAA;AAAA;AAAA,gB,GAEF,oY,GAAA;AAAA;AAAA,gB,GAEF,gW,GAAA;AAAA;AAAA,gB,GACE,iJ,IACE,4W,GAAA;AAAA;AAAA,gB,GAEF,wY,GAAA;AAAA;AAAA,gB,GAA6E;AA5CtE;;AAAT,wBAAS,SAAT;;AACyF,qEAAqD,QAArD,CAAqD,SAArD,CAAqD,IAArD;;AAAvF,wBAAuF,SAAvF;;AAAA;;AAAiB;AAAmD,4BAAkB,QAAlB,CAAkB,SAAlB,CAAkB,KAAlB;;AAApE,wBAAiB,SAAjB,EAAoE,SAApE;;AACoB;;AAAlB,yBAAkB,SAAlB;;AAGwB;;AAAlB,yBAAkB,UAAlB;;AACmB,6BAAiB,QAAjB,CAAiB,SAAjB,CAAiB,IAAjB;;AAAjB,yBAAiB,UAAjB;;AAKyB;;AAA3B,yBAA2B,UAA3B;;AAUN;;AAAuB,uEAAqD,QAArD,CAAqD,SAArD,CAAqD,IAArD;;AAAvB,yBAAuB,UAAvB;;AACuC,8OAA2F,QAA3F,CAA2F,SAA3F,CAA2F,IAA3F;;AAArC,yBAAqC,UAArC;;AAImC,6BAAyB,QAAzB,CAAyB,SAAzB,CAAyB,WAAzB;;AAArC,yBAAqC,UAArC;;AAGqC,6BAAqB,QAArB,CAAqB,SAArB,CAAqB,OAArB;;AAArC,yBAAqC,UAArC;;AAKK;;AAAT,yBAAS,UAAT;;AAEoB,6BAAoB,QAApB,CAAoB,SAApB,CAAoB,MAApB;;AAAhB,yBAAgB,UAAhB;;AAE2B;;AAA7B,yBAA6B,UAA7B;;AAEO;;AAAT,yBAAS,UAAT;;AAEoB,6BAA0B,QAA1B,CAA0B,SAA1B,CAA0B,YAA1B;;AAAhB,yBAAgB,UAAhB;;AAE2B;;AAA7B,yBAA6B,UAA7B;AAA4E,S,EAAA;AA3C5E;;AAAA;;AAAA;;AAAA;;AACE;;AAAA;;AAGM;;AAAA;;AACE;;AAAA;;AAAA;;AAAA;;AAeR;;AAAA;;AAAA;;AACE;;AAAA;;AAIF;;AAAA;;AAGA;;AAAA;;AAOA;;AAAA;;AAMA;;AAAA;AAA2C,S;AAAA;;;uEA7CrD,yH,IACE,mH,GAAA;AAAA;AAAA,gB,GAA6D,4E,IAAA;AAAA;AAAnC,6BAAkC,QAAlC,CAAkC,KAAlC;;AAA1B,wBAA0B,SAA1B;AAA4D,S,EAAA,I;AAAA;;;uEAXhE,oU,GAAA,8T,GACE,uV,GAAA;AAAA;AAAA,gB,GACE,oV,GAAA,+T,GACE;AAAA;;AAAA;;;;;;SAAA,E,wGAAA,E,4GAAA,C;;;;mBAEF,6T,GAAA,8T,GAAW,qF,IAIf,uU,GAAA,gU,GACE,gH,GAAA;AAAA;AAAA,gB,GAAqC;AAAA;AATxB;;AAAb,wBAAa,SAAb;;AAEqB;;AAAjB,wBAAiB,SAAjB;;AAAiB;;AAAjB,wBAAiB,SAAjB;;AAOU,0DAAsB,QAAtB,CAAsB,KAAtB;;AAAd,yBAAc,SAAd;AAAoC,S,EAAA,I;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAKA;;;UAUaG,iB;AAUX,mCACUC,KADV,EAC+B;AAAA;;AAArB,eAAAA,KAAA,GAAAA,KAAA;AACL;;;;qCAEG;AAAA;;AACN;AACA,iBAAKC,aAAL,GAAqB,KAAKD,KAAL,CAAWR,IAAX,CACrB;AACA;AACA;AACA;AAJqB,aAKpBU,SALoB,CAMnB,UAACC,iBAAD,EAA+D;AAC7D;AACA,mBAAI,CAACF,aAAL,GAAqB,sEAAeG,WAAf,CAA+CD,iBAAiB,CAACX,IAAjE,EAAuE,wEAAvE,EACrB;AACA;AACA;AACA;AAJqB,eAKpBU,SALoB,CAMnB,UAACJ,KAAD,EAAW;AACT;AACA,qBAAI,CAACO,OAAL,GAAeP,KAAf;AACD,eATkB,EAUnB,UAACQ,KAAD,EAAW,CAAE,CAVM,CAArB;AAYD,aApBkB,EAqBnB,UAACA,KAAD,EAAW,CAAE,CArBM,CAArB;AAuBD,W,CAED;AACA;;;;6CACgB;AACd;AACA,iBAAKL,aAAL,CAAmBM,WAAnB;AACD;;;8BAxC4C;AAC3C,mBAAQ,KAAKF,OAAL,IAAgB,KAAKA,OAAL,CAAaG,OAA9B,GAAyC,IAAzC,GAAgD,KAAvD;AACD","file":"travel-listing-travel-listing-module-ngfactory-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { TravelService } from '../travel.service';\nimport { TravelListingModel } from './travel-listing.model';\n\n@Injectable()\nexport class TravelListingResolver implements Resolve<DataStore<TravelListingModel>> {\n\n  constructor(private travelService: TravelService) {}\n\n  resolve(): DataStore<TravelListingModel> {\n    const dataSource: Observable<TravelListingModel> = this.travelService.getListingDataSource();\n    const dataStore: DataStore<TravelListingModel> = this.travelService.getListingStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { TravelService } from '../travel.service';\nimport { TravelListingPage } from './travel-listing.page';\nimport { TravelListingResolver } from './travel-listing.resolver';\nimport { TravelListingPlainResolver } from './travel-listing.plain.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TravelListingPage,\n    resolve: {\n      data: TravelListingResolver\n      // data: TravelListingPlainResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    HttpClientModule\n  ],\n  declarations: [\n    TravelListingPage\n  ],\n  providers: [\n    TravelListingResolver,\n    TravelListingPlainResolver,\n    TravelService\n  ]\n})\nexport class TravelListingPageModule {}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { TravelService } from '../travel.service';\nimport { TravelListingModel } from './travel-listing.model';\n\n@Injectable()\nexport class TravelListingPlainResolver implements Resolve<TravelListingModel> {\n\n  constructor(private travelService: TravelService) {}\n\n  resolve(): Observable<TravelListingModel> {\n    return this.travelService.getListingDataSource();\n  }\n}\n","import { DataStore } from '../shell/data-store';\nimport { Observable, of } from 'rxjs';\n\nexport interface IResolvedRouteData<T> {\n  data: T | DataStore<T>;\n}\n\nexport class ResolverHelper<T> {\n  // More info on function overloads here: https://www.typescriptlang.org/docs/handbook/functions.html#overloads\n  public static extractData<T>(source: (T | DataStore<T>), constructor: (new(...args: any[]) => T)): Observable<T> {\n    if (source instanceof DataStore) {\n      return source.state;\n    } else if (source instanceof constructor) {\n      // The right side of instanceof should be an expression evaluating to a constructor function (ie. a class), not a type\n      // That's why we included an extra parameter which acts as a constructor function for type T\n      // (see: https://github.com/microsoft/TypeScript/issues/5236)\n      return of(source);\n    }\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>Travel Listing</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ng-container *ngIf=\"listing?.items\">\n    <div class=\"listing-item\" *ngFor=\"let item of listing.items\">\n      <ion-row class=\"image-row\">\n        <ion-col size=\"12\">\n          <app-image-shell [display]=\"'cover'\" class=\"add-overlay item-image\" [src]=\"item.image\" [routerLink]=\"['/app/categories/travel/', item.slug]\">\n            <app-aspect-ratio [ratio]=\"{w:3, h:2}\">\n              <div class=\"content-inside-item-image\">\n                <div class=\"item-icon\">\n                  <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n                    <app-image-shell [src]=\"item.icon\" class=\"icon-image\"></app-image-shell>\n                  </app-aspect-ratio>\n                </div>\n                <div class=\"item-cta\">\n                  <span>Explore</span>\n                  <ion-icon class=\"cta-icon\" name=\"arrow-forward\"></ion-icon>\n                </div>\n              </div>\n            </app-aspect-ratio>\n          </app-image-shell>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"info-row\">\n        <ion-col class=\"main-info-col\">\n          <h3 class=\"item-name\">\n            <a class=\"name-anchor\" [routerLink]=\"['/app/categories/travel/', item.slug]\">\n              <app-text-shell animation=\"bouncing\" [data]=\"(item?.name && item?.category) ? (item.name + ' - ' + item.category) : (item.name)\"></app-text-shell>\n            </a>\n          </h3>\n          <p class=\"item-description\">\n            <app-text-shell animation=\"bouncing\" [data]=\"item.description\" lines=\"3\"></app-text-shell>\n          </p>\n          <p class=\"item-address\">\n            <app-text-shell animation=\"bouncing\" [data]=\"item.address\"></app-text-shell>\n          </p>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"stats-row\">\n        <ion-col size=\"2\" class=\"item-rating\">\n          <span class=\"rating-value\">\n            <app-text-shell [data]=\"item.rating\"></app-text-shell>\n          </span>\n          <ion-icon class=\"stats-icon\" src=\"./assets/custom-icons/travel/star.svg\"></ion-icon>\n        </ion-col>\n        <ion-col size=\"2\" class=\"item-reviews\">\n          <span class=\"reviews-count\">\n            <app-text-shell [data]=\"item.reviewsCount\"></app-text-shell>\n          </span>\n          <ion-icon class=\"stats-icon\" src=\"./assets/custom-icons/travel/comments.svg\"></ion-icon>\n        </ion-col>\n      </ion-row>\n    </div>\n  </ng-container>\n</ion-content>\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { TravelListingModel } from './travel-listing.model';\n// import { delay, finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-travel-listing',\n  templateUrl: './travel-listing.page.html',\n  styleUrls: [\n    './styles/travel-listing.page.scss',\n    './styles/travel-listing.shell.scss'\n  ]\n})\nexport class TravelListingPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  listing: TravelListingModel;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.listing && this.listing.isShell) ? true : false;\n  }\n\n  constructor(\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    // .pipe(\n    //   delay(2000),\n    //   finalize(() => console.log('dataSubscription [finalize()]'))\n    // )\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<TravelListingModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<TravelListingModel>(resolvedRouteData.data, TravelListingModel)\n        // .pipe(\n        //   delay(8000),\n        //   finalize(() => console.log('listingDataStore.subscribe [finalize()]'))\n        // )\n        .subscribe(\n          (state) => {\n            // console.log('GOT STATE');\n            this.listing = state;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n"]}