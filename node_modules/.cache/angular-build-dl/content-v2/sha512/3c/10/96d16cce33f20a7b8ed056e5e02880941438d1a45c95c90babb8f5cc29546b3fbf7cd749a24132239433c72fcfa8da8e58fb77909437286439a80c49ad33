{"version":3,"sources":["webpack:///src/app/maps/maps.page.html","webpack:///src/app/maps/maps.page.ts","webpack:///src/app/components/google-map/google-map.component.ts","webpack:///src/app/maps/maps.module.ts"],"names":["Geolocation","MapsPage","loadingController","mapOptions","zoom","center","lat","lng","_GoogleMap","$mapReady","subscribe","map","createLoader","create","message","loadingElement","present","dismiss","presentLoader","getCurrentPosition","then","position","current_location","google","maps","LatLng","coords","latitude","longitude","panTo","marker","Marker","title","setMap","error","console","log","dismissLoader","GoogleMapComponent","_elementRef","_mapIdledOnce","initMap","_el","nativeElement","_map","Map","_ready_listener","addListener","emit","event","removeListener","MapsPageModule"],"mappings":"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","file":"maps-maps-module-ngfactory-es5.js","sourcesContent":["<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>Maps & Geolocation</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-fab vertical=\"top\" horizontal=\"end\" slot=\"fixed\">\n    <ion-fab-button (click)=\"geolocateMe()\" color=\"secondary\">\n      <ion-icon name=\"locate\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n  <google-map [mapOptions]=\"mapOptions\"></google-map>\n</ion-content>\n","import { Component, ViewChild, OnInit } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\nimport { Plugins } from '@capacitor/core';\nconst { Geolocation } = Plugins;\n\nimport { GoogleMapComponent } from '../components/google-map/google-map.component';\n\n@Component({\n  selector: 'app-maps',\n  templateUrl: './maps.page.html',\n  styleUrls: [\n    './styles/maps.page.scss'\n  ]\n})\nexport class MapsPage implements OnInit {\n\n  @ViewChild(GoogleMapComponent, { static: true }) _GoogleMap: GoogleMapComponent;\n  map: google.maps.Map;\n  mapOptions: google.maps.MapOptions = {\n    zoom: 15,\n    center: {lat: -34.9199842, lng: -56.149849}\n    // uncomment the following line if you want to remove the default Map controls\n    // disableDefaultUI: true\n  };\n  loadingElement: any;\n\n  constructor(private loadingController: LoadingController) { }\n\n  ngOnInit() {\n    this._GoogleMap.$mapReady.subscribe(map => {\n      this.map = map;\n    });\n    this.createLoader();\n  }\n\n  async createLoader() {\n    this.loadingElement = await this.loadingController.create({\n      message: 'Trying to get your current location...'\n    });\n  }\n\n  async presentLoader() {\n    await this.loadingElement.present();\n  }\n\n  async dismissLoader() {\n    if (this.loadingElement) {\n      await this.loadingElement.dismiss();\n    }\n  }\n\n  geolocateMe() {\n\n    this.presentLoader();\n    Geolocation.getCurrentPosition().then(position => {\n\n      const current_location = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n      this.map.panTo(current_location);\n\n      // add a marker\n      const marker = new google.maps.Marker({\n        position: current_location,\n        title: 'You are here!',\n        // animation: google.maps.Animation.DROP\n      });\n\n      // To add the marker to the map, call setMap();\n      marker.setMap(this.map);\n\n    }).catch((error) => {\n      console.log('Error getting current location', error);\n\n    }).finally(() => this.dismissLoader());\n  }\n}\n","import { Component, ElementRef, OnInit, EventEmitter, Input } from '@angular/core';\n\n@Component({\n  selector: 'google-map',\n  template: ''\n})\nexport class GoogleMapComponent implements OnInit {\n\n  @Input() mapOptions: google.maps.MapOptions;\n  public _el: HTMLElement;\n  public _map: google.maps.Map;\n  public $mapReady: EventEmitter<any> = new EventEmitter();\n  public _mapIdledOnce = false;\n\n  constructor(public _elementRef: ElementRef) { }\n\n  ngOnInit() {\n    this.initMap();\n  }\n\n  initMap(): void {\n    this._el = this._elementRef.nativeElement;\n    this._map = new google.maps.Map(this._el, this.mapOptions);\n\n    // Workarround for init method: try to catch the first idle event after the map creation\n    // (this._mapIdledOnce). The following idle events don't matter.\n    const _ready_listener = this._map.addListener('idle', () => {\n      console.log('mapReady - IDLE');\n      if (!this._mapIdledOnce) {\n        this.$mapReady.emit(this._map);\n        this._mapIdledOnce = true;\n        // Stop listening to event, the map is ready\n        google.maps.event.removeListener(_ready_listener);\n      }\n    });\n  }\n}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MapsPage } from './maps.page';\nimport { ComponentsModule } from '../components/components.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    ComponentsModule,\n    RouterModule.forChild([{ path: '', component: MapsPage }])\n  ],\n  declarations: [MapsPage]\n})\nexport class MapsPageModule {}\n"]}