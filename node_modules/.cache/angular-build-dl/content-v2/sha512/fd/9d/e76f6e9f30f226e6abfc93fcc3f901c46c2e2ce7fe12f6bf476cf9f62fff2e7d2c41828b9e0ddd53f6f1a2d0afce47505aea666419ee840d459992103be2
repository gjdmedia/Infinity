{"version":3,"sources":["./src/app/plumbing/listing/plumbing-listing.page.ts","./src/app/plumbing/listing/plumbing-listing.page.html","./src/app/plumbing/listing/plumbing-listing.resolver.ts","./src/app/plumbing/listing/plumbing-listing.module.ts"],"names":[],"mappings":"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","file":"plumbing-listing-plumbing-listing-module-ngfactory-es2015.js","sourcesContent":["import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { plumbingListingModel } from './plumbing-listing.model';\n\n@Component({\n  selector: 'app-plumbing-listing',\n  templateUrl: './plumbing-listing.page.html',\n  styleUrls: [\n    './styles/plumbing-listing.page.scss',\n    './styles/plumbing-listing.shell.scss'\n  ]\n})\nexport class plumbingListingPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  listing: plumbingListingModel;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.listing && this.listing.isShell) ? true : false;\n  }\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<plumbingListingModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<plumbingListingModel>(resolvedRouteData.data, plumbingListingModel)\n        .subscribe(\n          (state) => {\n            this.listing = state;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>Plumbing</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ng-container *ngIf=\"listing?.items\">\n    <div class=\"listing-item\" *ngFor=\"let item of listing.items\">\n      <ion-row class=\"image-row\">\n        <ion-col size=\"12\">\n          <app-image-shell [display]=\"'cover'\" class=\"add-overlay item-image\" [src]=\"item.image\" [routerLink]=\"['/app/categories/plumbing/', item.slug]\">\n            <app-aspect-ratio [ratio]=\"{w:3, h:2}\">\n              <div class=\"content-inside-item-image\">\n                <div class=\"item-icon\">\n                  <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n                    <app-image-shell [src]=\"item.icon\" class=\"icon-image\"></app-image-shell>\n                  </app-aspect-ratio>\n                </div>\n                <div class=\"item-cta\">\n                  <span><app-text-shell animation=\"bouncing\" [data]=\"(item?.name && item?.category) ? (item.name + ' - ' + item.category) : (item.name)\"></app-text-shell></span>\n                  <ion-icon class=\"cta-icon\" name=\"arrow-forward\"></ion-icon>\n                </div>\n              </div>\n            </app-aspect-ratio>\n          </app-image-shell>\n        </ion-col>\n      </ion-row>\n      <!-- <ion-row class=\"info-row\">\n        <ion-col class=\"main-info-col\">\n          <h3 class=\"item-name\">\n            <a class=\"name-anchor\" [routerLink]=\"['/app/categories/plumbing/', item.slug]\">\n              <app-text-shell animation=\"bouncing\" [data]=\"(item?.name && item?.category) ? (item.name + ' - ' + item.category) : (item.name)\"></app-text-shell>\n            </a>\n          </h3>\n          <p class=\"item-description\">\n            <app-text-shell animation=\"bouncing\" [data]=\"item.description\" lines=\"3\"></app-text-shell>\n          </p>\n          <p class=\"item-address\">\n            <app-text-shell animation=\"bouncing\" [data]=\"item.address\"></app-text-shell>\n          </p>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"stats-row\">\n        <ion-col size=\"2\" class=\"item-rating\">\n          <span class=\"rating-value\">\n            <app-text-shell [data]=\"item.rating\"></app-text-shell>\n          </span>\n          <ion-icon class=\"stats-icon\" src=\"./assets/custom-icons/travel/star.svg\"></ion-icon>\n        </ion-col>\n        <ion-col size=\"2\" class=\"item-reviews\">\n          <span class=\"reviews-count\">\n            <app-text-shell [data]=\"item.reviewsCount\"></app-text-shell>\n          </span>\n          <ion-icon class=\"stats-icon\" src=\"./assets/custom-icons/travel/comments.svg\"></ion-icon>\n        </ion-col>\n      </ion-row> -->\n    </div>\n  </ng-container>\n</ion-content>","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { plumbingService } from '../plumbing.service';\nimport { plumbingListingModel } from './plumbing-listing.model';\n\n@Injectable()\nexport class plumbingListingResolver implements Resolve<DataStore<plumbingListingModel>> {\n\n  constructor(private plumbingService: plumbingService) {}\n\n  resolve(): DataStore<plumbingListingModel> {\n    const dataSource: Observable<plumbingListingModel> = this.plumbingService.getListingDataSource();\n    const dataStore: DataStore<plumbingListingModel> = this.plumbingService.getListingStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { plumbingService } from '../plumbing.service';\nimport { plumbingListingPage } from './plumbing-listing.page';\nimport { plumbingListingResolver } from './plumbing-listing.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: plumbingListingPage,\n    resolve: {\n      data: plumbingListingResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    plumbingListingPage\n  ],\n  providers: [\n    plumbingListingResolver,\n    plumbingService\n  ]\n})\nexport class plumbingListingPageModule {}\n"],"sourceRoot":"webpack:///"}