{"version":3,"sources":["./src/app/user/profile/user-profile.model.ts","./src/app/fashion/fashion.service.ts","./src/app/carpentry/listing/carpentry-listing.model.ts","./src/app/brick/brick.service.ts","./src/app/showcase/showcase.service.ts","./src/app/roofing/roofing.service.ts","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./src/app/user/friends/user-friends.model.ts","./src/app/travel/listing/travel-listing.model.ts","./src/app/terms-of-service/terms-of-service.page.html","./src/app/real-estate/listing/real-estate-listing.model.ts","./src/app/real-estate/details/real-estate-details.model.ts","./src/app/wood/details/wood-details.model.ts","./src/app/carpentry/details/carpentry-details.model.ts","./src/app/painting/details/painting-details.model.ts","./node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","./src/app/roofing/listing/roofing-listing.model.ts","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./src/app/electrical/electrical.service.ts","./src/app/painting/listing/painting-listing.model.ts","./src/app/plumbing/listing/plumbing-listing.model.ts","./src/app/deals/listing/deals-listing.model.ts","./src/app/deals/details/deals-details.model.ts","./src/app/brick/listing/brick-listing.model.ts","./src/app/user/user.service.ts","./src/app/fashion/details/fashion-details.model.ts","./src/app/terms-of-service/terms-of-service.page.ts","./src/app/plumbing/details/plumbing-details.model.ts","./src/app/travel/details/travel-details.model.ts","./src/app/electrical/details/electrical-details.model.ts","./src/app/wood/wood.service.ts","./src/app/components/checkbox-wrapper/checkbox-wrapper.component.ts","./src/app/electrical/listing/electrical-listing.model.ts","./src/app/plumbing/plumbing.service.ts","./src/app/fashion/listing/fashion-listing.model.ts","./src/app/wood/listing/wood-listing.model.ts","./src/app/real-estate/real-estate.service.ts","./src/app/validators/password.validator.ts","./src/app/painting/painting.service.ts","./src/app/brick/details/brick-details.model.ts","./src/app/travel/travel.service.ts","./src/app/roofing/details/roofing-details.model.ts","./src/app/components/checkbox-wrapper/checkbox-wrapper.component.html","./src/app/showcase/showcase-shell.model.ts","./src/app/carpentry/carpentry.service.ts","./node_modules/@ionic/core/dist/esm/haptic-da73c8fd.js","./src/app/deals/deals.service.ts","./src/app/pipes/time-difference.pipe.ts"],"names":[],"mappings":"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E,EAAE;YAC9B,gFAAgF;YAChF,gDAAgD;YAChD,MAAM,OAAO,GAAG,IAAI,sFAAqB,EAAE,CAAC;YAE5C,sHAAsH;YACtH,4GAA4G;YAC5G,6FAA6F;YAC7F,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAE7B,OAAO,OAAO,CAAC;QACjB,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAEM,eAAe,CAAC,UAA6C;QAClE,2DAA2D;QAC3D,MAAM,UAAU,GAA0B,IAAI,sFAAqB,EAAE,CAAC;QACtE,IAAI,CAAC,gBAAgB,GAAG,IAAI,2DAAS,CAAC,UAAU,CAAC,CAAC;QAClD,8DAA8D;QAC9D,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEvC,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;CACF;;;;;;;;;;;;;AC/ED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;;;;;;;;;;;;ACxGlF;AAGb;AAEN;AAEiB;AACkB;AA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","file":"common-es2015.js","sourcesContent":["import { ShellModel } from '../../shell/data-store';\n\nexport class UserProfileModel extends ShellModel {\n  userImage: string;\n  name: string;\n  membership: string;\n  job: string;\n  likes: string;\n  followers: string;\n  following: string;\n  about: string;\n  friends: Array<{image: string, name: string}> = [\n    {\n      image: '',\n      name: ''\n    },\n    {\n      image: '',\n      name: ''\n    },\n    {\n      image: '',\n      name: ''\n    },\n    {\n      image: '',\n      name: ''\n    }\n  ];\n  photos: Array<string> = [\n    '',\n    '',\n    '',\n    ''\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DataStore } from '../shell/data-store';\nimport { FashionListingModel } from './listing/fashion-listing.model';\nimport { FashionDetailsModel } from './details/fashion-details.model';\n\n@Injectable()\nexport class FashionService {\n  private listingDataStore: DataStore<FashionListingModel>;\n  private detailsDataStore: DataStore<FashionDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getListingDataSource(): Observable<FashionListingModel> {\n    return this.http.get<FashionListingModel>('./assets/data/fashion/listing.json')\n    .pipe(\n      map(\n        (data: FashionListingModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const listing = new FashionListingModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. listing = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(listing, data);\n\n          return listing;\n        }\n      )\n    );\n  }\n\n  public getListingStore(dataSource: Observable<FashionListingModel>): DataStore<FashionListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: FashionListingModel = new FashionListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(): Observable<FashionDetailsModel> {\n    return this.http.get<FashionDetailsModel>('./assets/data/fashion/details.json')\n    .pipe(\n      map(\n        (data: FashionDetailsModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const details = new FashionDetailsModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. details = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(details, data);\n\n          return details;\n        }\n      )\n    );\n  }\n\n  public getDetailsStore(dataSource: Observable<FashionDetailsModel>): DataStore<FashionDetailsModel> {\n    // Use cache if available\n    if (!this.detailsDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: FashionDetailsModel = new FashionDetailsModel();\n      this.detailsDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.detailsDataStore.load(dataSource);\n    }\n    return this.detailsDataStore;\n  }\n\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class CarpentryItemModel {\n  icon: string;\n  image: string;\n  name: string;\n  address: string;\n  priceRange: number;\n  rating: number;\n  tags: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  pictures: Array<string> = [\n    '',\n    '',\n    '',\n    '',\n    ''\n  ];\n}\n\nexport class CarpentryListingModel extends ShellModel {\n  items: Array<CarpentryItemModel> = [\n    new CarpentryItemModel(),\n    new CarpentryItemModel(),\n    new CarpentryItemModel(),\n    new CarpentryItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map, flatMap } from 'rxjs/operators';\n\nimport { DataStore } from '../shell/data-store';\nimport { BrickListingModel } from './listing/brick-listing.model';\nimport { BrickDetailsModel } from './details/brick-details.model';\n\n@Injectable()\nexport class BrickService {\n  private listingDataStore: DataStore<BrickListingModel>;\n  private detailsDataStore: DataStore<BrickDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getListingDataSource(): Observable<BrickListingModel> {\n    return this.http.get<BrickListingModel>('./assets/data/brick/listing.json')\n    .pipe(\n      map(\n        (data: BrickListingModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const listing = new BrickListingModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. listing = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(listing, data);\n\n          return listing;\n        }\n      )\n    );\n  }\n\n  public getListingStore(dataSource: Observable<BrickListingModel>): DataStore<BrickListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: BrickListingModel = new BrickListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(slug: string): Observable<BrickDetailsModel> {\n    return this.http.get<{items: Array<BrickDetailsModel>}>('./assets/data/brick/details.json')\n    .pipe(\n      flatMap(details => details.items.filter(item => item.slug === slug)),\n      map(\n        (data: BrickDetailsModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const details = new BrickDetailsModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. details = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(details, data);\n\n          return details;\n        }\n      )\n    );\n  }\n\n  public getDetailsStore(dataSource: Observable<BrickDetailsModel>): DataStore<BrickDetailsModel> {\n    // Initialize the model specifying that it is a shell model\n    const shellModel: BrickDetailsModel = new BrickDetailsModel();\n    this.detailsDataStore = new DataStore(shellModel);\n    // Trigger the loading mechanism (with shell) in the dataStore\n    this.detailsDataStore.load(dataSource);\n\n    return this.detailsDataStore;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, combineLatest, of, forkJoin, ReplaySubject, merge } from 'rxjs';\nimport { delay, finalize, tap, map, filter, concatMap } from 'rxjs/operators';\n// tslint:disable-next-line:max-line-length\nimport { ShowcaseShellModel, ShowcasePostModel, ShowcaseCommentModel, ShowcaseCombinedTaskUserModel, ShowcaseUser2Model, ShowcaseTaskModel, ShowcaseShellUserModel, ShowcaseCompanyModel } from './showcase-shell.model';\nimport { DataStore, ShellModel } from '../shell/data-store';\nimport { TravelListingModel } from '../travel/listing/travel-listing.model';\nimport { FashionListingModel } from '../fashion/listing/fashion-listing.model';\n\n@Injectable()\nexport class ShowcaseService {\n  private showcaseDataStore: DataStore<ShowcaseShellModel>;\n  private openDataStream: ReplaySubject<Array<ShowcaseShellUserModel>> = new ReplaySubject<Array<ShowcaseShellUserModel>>();\n\n  constructor(private http: HttpClient) { }\n\n  public getDataSourceWithDelay(): Observable<ShowcaseShellModel> {\n    return this.http.get<ShowcaseShellModel>('./assets/data/showcase/shell.json').pipe(\n      tap(val => {\n        console.log('getData STARTED');\n        // tslint:disable-next-line:no-console\n        console.time('getData Roundtrip');\n      }),\n      delay(5000),\n      finalize(() => {\n        console.log('getData COMPLETED');\n        // tslint:disable-next-line:no-console\n        console.timeEnd('getData Roundtrip');\n      }));\n  }\n\n  public getSimpleDataSource(): Observable<ShowcaseShellModel> {\n    return this.http.get<ShowcaseShellModel>('./assets/data/showcase/shell.json');\n  }\n\n  public getSimpleDataStore(dataSource: Observable<ShowcaseShellModel>): DataStore<ShowcaseShellModel> {\n    // Use cache if available\n    if (!this.showcaseDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: ShowcaseShellModel = new ShowcaseShellModel();\n      this.showcaseDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.showcaseDataStore.load(dataSource);\n    }\n    return this.showcaseDataStore;\n  }\n\n  public getListDataSource(): Observable<any> {\n    return this.http.get('https://reqres.in/api/users').pipe(map(result => result['data']));\n  }\n\n  public getPaginationDataSource(page: number): Observable<any> {\n    return this.http.get('https://reqres.in/api/users?page=' + page).pipe(\n      map(result => result['data']),\n      filter(results => results.length > 0)\n    );\n  }\n\n  public getMultipleDataSourceA(): Observable<TravelListingModel> {\n    return this.http.get<TravelListingModel>('./assets/data/travel/listing.json');\n  }\n\n  public getMultipleDataSourceB(): Observable<FashionListingModel> {\n      return this.http.get<FashionListingModel>('./assets/data/fashion/listing.json');\n  }\n\n  public getDependantDataSourcePost(): Observable<ShowcasePostModel> {\n    return this.http.get<any>('https://jsonplaceholder.typicode.com/posts/1');\n  }\n\n  // tslint:disable-next-line:max-line-length\n  public getDependantDataSourcePostComments(dependantDataSource: Observable<ShowcasePostModel & ShellModel>): Observable<Array<ShowcaseCommentModel>> {\n    return dependantDataSource.pipe(\n      // Filter user values that are not shells. We need to add this filter if using the combinedUserDataStore timeline\n      filter(post => !post.isShell),\n      concatMap(post => {\n        return this.http.get<any>('https://jsonplaceholder.typicode.com/comments?postId=' + post.id);\n      })\n    );\n  }\n\n  getUser(userId: number): Observable<ShowcaseUser2Model> {\n    return this.http.get<ShowcaseUser2Model>('https://jsonplaceholder.typicode.com/users/' + userId);\n  }\n\n  // get the company details, a subset of the user data\n  getUserSubsetData(userId: number): Observable<ShowcaseCompanyModel> {\n    const dataObservable = this.http.get<ShowcaseUser2Model>('https://jsonplaceholder.typicode.com/users/' + userId);\n\n    return dataObservable.pipe(\n      map((jsonResponse) => {\n        const filteredData: ShowcaseCompanyModel = {\n          ...jsonResponse.company\n        };\n        return filteredData;\n      })\n    );\n  }\n\n  getTasks(): Observable<Array<ShowcaseTaskModel>> {\n    return this.http.get<Array<ShowcaseTaskModel>>('https://jsonplaceholder.typicode.com/todos');\n  }\n\n  // Concat the task with the details of the user\n  public getCombinedTasksUserDataSource(): Observable<Array<ShowcaseCombinedTaskUserModel>> {\n    return this.getTasks().pipe(\n      concatMap(tasks => {\n        const completeTaskData = tasks.map(task => {\n          // for each task retrun a new observable with the ShowcaseCombinedTaskUserModel\n          const taskUser: Observable<ShowcaseUser2Model> = this.getUser(task.userId);\n\n          return combineLatest([\n            of(task),\n            taskUser\n          ]).pipe(\n            map(([taskData, user]: [ShowcaseTaskModel, ShowcaseUser2Model]) => {\n              return {\n                ...taskData,\n                user: user\n              } as ShowcaseCombinedTaskUserModel;\n            })\n          );\n        });\n        return forkJoin(completeTaskData);\n      })\n    );\n  }\n\n  public getOpenDataStream(): Observable<Array<ShowcaseShellUserModel>> {\n    const firstLoadData = this.getPaginationDataSource(1);\n\n    return merge(\n      this.openDataStream.asObservable(),\n      firstLoadData\n    );\n  }\n\n  public pushValuesToOpenStream(): void {\n    const stackedValues = this.getStackedValues();\n\n    this.openDataStream.next(stackedValues);\n  }\n\n  public getStackedValuesDataSource(): Observable<Array<ShowcaseShellUserModel>> {\n    const stackedValues = this.getStackedValues();\n\n    return of(stackedValues).pipe(delay(3000));\n  }\n\n  public getStackedValues(): Array<ShowcaseShellUserModel> {\n    const newUser = {\n      first_name: 'Agustin',\n      last_name: 'Nitsuga',\n      avatar: './assets/images/user/person_1.jpg'\n    } as ShowcaseShellUserModel;\n\n    // Get a random integer between 1 (and only 1) and 'max'\n    const getRand: (max: number, min?: number) => number = (max, min = 1) => {\n      return Math.floor(Math.random() * max) + min;\n    };\n\n    // Randomly send one, two or three users\n    return Array(getRand(3)).fill(newUser);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map, flatMap } from 'rxjs/operators';\n\nimport { DataStore } from '../shell/data-store';\nimport { RoofingListingModel } from './listing/roofing-listing.model';\nimport { RoofingDetailsModel } from './details/roofing-details.model';\n\n@Injectable()\nexport class RoofingService {\n  private listingDataStore: DataStore<RoofingListingModel>;\n  private detailsDataStore: DataStore<RoofingDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getListingDataSource(): Observable<RoofingListingModel> {\n    return this.http.get<RoofingListingModel>('./assets/data/roofing/listing.json')\n    .pipe(\n      map(\n        (data: RoofingListingModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const listing = new RoofingListingModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. listing = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(listing, data);\n\n          return listing;\n        }\n      )\n    );\n  }\n\n  public getListingStore(dataSource: Observable<RoofingListingModel>): DataStore<RoofingListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: RoofingListingModel = new RoofingListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(slug: string): Observable<RoofingDetailsModel> {\n    return this.http.get<{items: Array<RoofingDetailsModel>}>('./assets/data/roofing/details.json')\n    .pipe(\n      flatMap(details => details.items.filter(item => item.slug === slug)),\n      map(\n        (data: RoofingDetailsModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const details = new RoofingDetailsModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. details = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(details, data);\n\n          return details;\n        }\n      )\n    );\n  }\n\n  public getDetailsStore(dataSource: Observable<RoofingDetailsModel>): DataStore<RoofingDetailsModel> {\n    // Initialize the model specifying that it is a shell model\n    const shellModel: RoofingDetailsModel = new RoofingDetailsModel();\n    this.detailsDataStore = new DataStore(shellModel);\n    // Trigger the loading mechanism (with shell) in the dataStore\n    this.detailsDataStore.load(dataSource);\n\n    return this.detailsDataStore;\n  }\n}\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","import { ShellModel } from '../../shell/data-store';\n\nexport class UserFriendsModel extends ShellModel {\n  friends: Array<{\n    image: string,\n    name: string,\n    job: string,\n    followers: string,\n    followings: string,\n    following: boolean}> = [\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    },\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: true\n    },\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    },\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    }\n  ];\n  followers: Array<{\n    image: string,\n    name: string,\n    job: string,\n    followers: string,\n    followings: string,\n    following: boolean}> = [\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    },\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    },\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    },\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: true\n    }\n  ];\n  following: Array<{\n    image: string,\n    name: string,\n    job: string,\n    followers: string,\n    followings: string,\n    following: boolean}> = [\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    },\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    },\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    },\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class TravelItemModel {\n  image: string;\n  icon: string;\n  name: string;\n  description: string;\n  category: string;\n  address: string;\n  rating: number;\n  reviewsCount: number;\n}\n\nexport class TravelListingModel extends ShellModel {\n  items: Array<TravelItemModel> = [\n    new TravelItemModel(),\n    new TravelItemModel(),\n    new TravelItemModel(),\n    new TravelItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"dismiss()\">Close</ion-button>\n    </ion-buttons>\n    <ion-title>\n      Terms Of Service\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"legal-content\">\n  <h3 class=\"legal-title\">Welcome to Ionic 5 Demo App</h3>\n  <p class=\"legal-text\">\n    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n  </p>\n  <h3 class=\"legal-title\">Using our services</h3>\n  <p class=\"legal-text\">\n    It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\n  </p>\n  <h3 class=\"legal-title\">About these terms</h3>\n  <p class=\"legal-text\">\n    There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.\n  </p>\n</ion-content>\n","import { ShellModel } from '../../shell/data-store';\n\nexport class RealEstateItemModel {\n  slug: string;\n  picture: string;\n  address: string;\n  price: string;\n  liked: boolean;\n  accommodations: {\n    guests: number,\n    bedrooms: number,\n    beds: number,\n    bathrooms: number\n  };\n  amenities: Array<{name: string, icon: string}> = [\n    {\n      name: '',\n      icon: ''\n    },\n    {\n      name: '',\n      icon: ''\n    }\n  ];\n}\n\nexport class RealEstateListingModel extends ShellModel {\n  items: Array<RealEstateItemModel> = [\n    new RealEstateItemModel(),\n    new RealEstateItemModel(),\n    new RealEstateItemModel(),\n    new RealEstateItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class RealEstateDetailsModel extends ShellModel {\n  picture: string;\n  location: {\n    address: string,\n    city: string,\n    latlng: string,\n    mapImage: string\n  };\n  description: string;\n  price: string;\n  accommodations: {\n    guests: number,\n    bedrooms: number,\n    patios: number,\n    bathrooms: number\n  };\n  amenities: Array<{name: string, icon: string}> = [\n    {\n      name: '',\n      icon: ''\n    },\n    {\n      name: '',\n      icon: ''\n    },\n    {\n      name: '',\n      icon: ''\n    },\n    {\n      name: '',\n      icon: ''\n    },\n    {\n      name: '',\n      icon: ''\n    },\n    {\n      name: '',\n      icon: ''\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class woodDetailsModel extends ShellModel {\n  icon: string;\n  slug: string;\n  showcaseImage: string;\n  name: string;\n  shortName: string;\n  style: string;\n  priceRange: number;\n  avgRating: number;\n  ratings: Array<{concept: string, rate: number}> = [\n    {\n      concept: '',\n      rate: null\n    },\n    {\n      concept: '',\n      rate: null\n    },\n    {\n      concept: '',\n      rate: null\n    }\n  ];\n  reviewsCount: number;\n  openHours: Array<{day: string, open: boolean, hourFrom: string, hourTo: string}> = [\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: false,\n      hourFrom: '',\n      hourTo: ''\n    }\n  ];\n  location: {\n    address: string,\n    city: string,\n    latlng: string,\n    mapImage: string\n  };\n  tags: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  usersPictures: Array<string> = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    ''\n  ];\n  popularDishes: Array<{name: string, rate: number, votesCount: number}> = [\n    {\n      name: '',\n      rate: null,\n      votesCount: null\n    },\n    {\n      name: '',\n      rate: null,\n      votesCount: null\n    }\n  ];\n  reviews: Array<{\n    user: {image: string, name: string, reviewsCount: number, points: number},\n    avgRating: number,\n    ratings: Array<{concept: string, rate: number}>,\n    publishedAt: string,\n    message: string\n  }> = [\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    },\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    },\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    }\n  ];\n  popularRecipes: Array<{\n    showcaseImage: string,\n    name: string,\n    chef: {name: string, image: string},\n    difficulty: string,\n    time: string,\n    calories: string,\n    chefExtract: string\n  }> = [\n    {\n      showcaseImage: '',\n      name: '',\n      chef: {\n        name: '',\n        image: ''\n      },\n      difficulty: '',\n      time: '',\n      calories: '',\n      chefExtract: ''\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class CarpentryDetailsModel extends ShellModel {\n  icon: string;\n  slug: string;\n  showcaseImage: string;\n  name: string;\n  shortName: string;\n  style: string;\n  priceRange: number;\n  avgRating: number;\n  ratings: Array<{concept: string, rate: number}> = [\n    {\n      concept: '',\n      rate: null\n    },\n    {\n      concept: '',\n      rate: null\n    },\n    {\n      concept: '',\n      rate: null\n    }\n  ];\n  reviewsCount: number;\n  openHours: Array<{day: string, open: boolean, hourFrom: string, hourTo: string}> = [\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: false,\n      hourFrom: '',\n      hourTo: ''\n    }\n  ];\n  location: {\n    address: string,\n    city: string,\n    latlng: string,\n    mapImage: string\n  };\n  tags: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  usersPictures: Array<string> = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    ''\n  ];\n  popularDishes: Array<{name: string, rate: number, votesCount: number}> = [\n    {\n      name: '',\n      rate: null,\n      votesCount: null\n    },\n    {\n      name: '',\n      rate: null,\n      votesCount: null\n    }\n  ];\n  reviews: Array<{\n    user: {image: string, name: string, reviewsCount: number, points: number},\n    avgRating: number,\n    ratings: Array<{concept: string, rate: number}>,\n    publishedAt: string,\n    message: string\n  }> = [\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    },\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    },\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    }\n  ];\n  popularRecipes: Array<{\n    showcaseImage: string,\n    name: string,\n    chef: {name: string, image: string},\n    difficulty: string,\n    time: string,\n    calories: string,\n    chefExtract: string\n  }> = [\n    {\n      showcaseImage: '',\n      name: '',\n      chef: {\n        name: '',\n        image: ''\n      },\n      difficulty: '',\n      time: '',\n      calories: '',\n      chefExtract: ''\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class PaintingDetailsModel extends ShellModel {\n  icon: string;\n  slug: string;\n  showcaseImage: string;\n  name: string;\n  shortName: string;\n  style: string;\n  priceRange: number;\n  avgRating: number;\n  ratings: Array<{concept: string, rate: number}> = [\n    {\n      concept: '',\n      rate: null\n    },\n    {\n      concept: '',\n      rate: null\n    },\n    {\n      concept: '',\n      rate: null\n    }\n  ];\n  reviewsCount: number;\n  openHours: Array<{day: string, open: boolean, hourFrom: string, hourTo: string}> = [\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: false,\n      hourFrom: '',\n      hourTo: ''\n    }\n  ];\n  location: {\n    address: string,\n    city: string,\n    latlng: string,\n    mapImage: string\n  };\n  tags: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  usersPictures: Array<string> = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    ''\n  ];\n  popularDishes: Array<{name: string, rate: number, votesCount: number}> = [\n    {\n      name: '',\n      rate: null,\n      votesCount: null\n    },\n    {\n      name: '',\n      rate: null,\n      votesCount: null\n    }\n  ];\n  reviews: Array<{\n    user: {image: string, name: string, reviewsCount: number, points: number},\n    avgRating: number,\n    ratings: Array<{concept: string, rate: number}>,\n    publishedAt: string,\n    message: string\n  }> = [\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    },\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    },\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    }\n  ];\n  popularRecipes: Array<{\n    showcaseImage: string,\n    name: string,\n    chef: {name: string, image: string},\n    difficulty: string,\n    time: string,\n    calories: string,\n    chefExtract: string\n  }> = [\n    {\n      showcaseImage: '',\n      name: '',\n      chef: {\n        name: '',\n        image: ''\n      },\n      difficulty: '',\n      time: '',\n      calories: '',\n      chefExtract: ''\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { ShellModel } from '../../shell/data-store';\n\nexport class RoofingItemModel {\n  icon: string;\n  image: string;\n  name: string;\n  address: string;\n  priceRange: number;\n  rating: number;\n  tags: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  pictures: Array<string> = [\n    '',\n    '',\n    '',\n    '',\n    ''\n  ];\n}\n\nexport class RoofingListingModel extends ShellModel {\n  items: Array<RoofingItemModel> = [\n    new RoofingItemModel(),\n    new RoofingItemModel(),\n    new RoofingItemModel(),\n    new RoofingItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map, flatMap } from 'rxjs/operators';\n\nimport { DataStore } from '../shell/data-store';\nimport { ElectricalListingModel } from './listing/electrical-listing.model';\nimport { ElectricalDetailsModel } from './details/electrical-details.model';\n\n@Injectable()\nexport class ElectricalService {\n  private listingDataStore: DataStore<ElectricalListingModel>;\n  private detailsDataStore: DataStore<ElectricalDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getListingDataSource(): Observable<ElectricalListingModel> {\n    return this.http.get<ElectricalListingModel>('./assets/data/electrical/listing.json')\n    .pipe(\n      map(\n        (data: ElectricalListingModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const listing = new ElectricalListingModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. listing = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(listing, data);\n\n          return listing;\n        }\n      )\n    );\n  }\n\n  public getListingStore(dataSource: Observable<ElectricalListingModel>): DataStore<ElectricalListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: ElectricalListingModel = new ElectricalListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(slug: string): Observable<ElectricalDetailsModel> {\n    return this.http.get<{items: Array<ElectricalDetailsModel>}>('./assets/data/electrical/details.json')\n    .pipe(\n      flatMap(details => details.items.filter(item => item.slug === slug)),\n      map(\n        (data: ElectricalDetailsModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const details = new ElectricalDetailsModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. details = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(details, data);\n\n          return details;\n        }\n      )\n    );\n  }\n\n  public getDetailsStore(dataSource: Observable<ElectricalDetailsModel>): DataStore<ElectricalDetailsModel> {\n    // Initialize the model specifying that it is a shell model\n    const shellModel: ElectricalDetailsModel = new ElectricalDetailsModel();\n    this.detailsDataStore = new DataStore(shellModel);\n    // Trigger the loading mechanism (with shell) in the dataStore\n    this.detailsDataStore.load(dataSource);\n\n    return this.detailsDataStore;\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class PaintingItemModel {\n  icon: string;\n  image: string;\n  name: string;\n  address: string;\n  priceRange: number;\n  rating: number;\n  tags: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  pictures: Array<string> = [\n    '',\n    '',\n    '',\n    '',\n    ''\n  ];\n}\n\nexport class PaintingListingModel extends ShellModel {\n  items: Array<PaintingItemModel> = [\n    new PaintingItemModel(),\n    new PaintingItemModel(),\n    new PaintingItemModel(),\n    new PaintingItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class plumbingItemModel {\n  icon: string;\n  image: string;\n  name: string;\n  address: string;\n  priceRange: number;\n  rating: number;\n  tags: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  pictures: Array<string> = [\n    '',\n    '',\n    '',\n    '',\n    ''\n  ];\n}\n\nexport class plumbingListingModel extends ShellModel {\n  items: Array<plumbingItemModel> = [\n    new plumbingItemModel(),\n    new plumbingItemModel(),\n    new plumbingItemModel(),\n    new plumbingItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import * as dayjs from 'dayjs';\n\nimport { ShellModel } from '../../shell/data-store';\n\nexport class DealsItemModel {\n  slug: string;\n  logo: string;\n  name: string;\n  code: string;\n  description: string;\n  // Default mock value\n  // expirationDate = '12/01/2018';\n  expirationDate: string = dayjs().add(5, 'day').format('MM/DD/YYYY HH:mm:ss') as string;\n}\n\nexport class DealsListingModel extends ShellModel {\n  items: Array<DealsItemModel> = [\n    new DealsItemModel(),\n    new DealsItemModel(),\n    new DealsItemModel(),\n    new DealsItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import * as dayjs from 'dayjs';\n\nimport { ShellModel } from '../../shell/data-store';\n\nexport class DealsDetailsModel extends ShellModel {\n  showcaseImages: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  previewImage: string;\n  logo: string;\n  name: string;\n  code: string;\n  description: string;\n  // Default mock value\n  // expirationDate = '03/03/2019';\n  expirationDate: string = dayjs().add(5, 'day').format('MM/DD/YYYY HH:mm:ss') as string;\n  relatedDeals: Array<{logo: string, name: string, description: string}> = [\n    {\n      logo: '',\n      name: '',\n      description: ''\n    },\n    {\n      logo: '',\n      name: '',\n      description: ''\n    },\n    {\n      logo: '',\n      name: '',\n      description: ''\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class BrickItemModel {\n  icon: string;\n  image: string;\n  name: string;\n  address: string;\n  priceRange: number;\n  rating: number;\n  tags: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  pictures: Array<string> = [\n    '',\n    '',\n    '',\n    '',\n    ''\n  ];\n}\n\nexport class BrickListingModel extends ShellModel {\n  items: Array<BrickItemModel> = [\n    new BrickItemModel(),\n    new BrickItemModel(),\n    new BrickItemModel(),\n    new BrickItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DataStore } from '../shell/data-store';\nimport { UserProfileModel } from './profile/user-profile.model';\nimport { UserFriendsModel } from './friends/user-friends.model';\n\n@Injectable()\nexport class UserService {\n  private profileDataStore: DataStore<UserProfileModel>;\n  private friendsDataStore: DataStore<UserFriendsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getProfileDataSource(): Observable<UserProfileModel> {\n    return this.http.get<UserProfileModel>('./assets/data/user/user-profile.json')\n    .pipe(\n      map(\n        (data: UserProfileModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const profile = new UserProfileModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. profile = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(profile, data);\n\n          return profile;\n        }\n      )\n    );\n  }\n\n  public getProfileStore(dataSource: Observable<UserProfileModel>): DataStore<UserProfileModel> {\n    // Use cache if available\n    if (!this.profileDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: UserProfileModel = new UserProfileModel();\n      this.profileDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.profileDataStore.load(dataSource);\n    }\n    return this.profileDataStore;\n  }\n\n  public getFriendsDataSource(): Observable<UserFriendsModel> {\n    return this.http.get<UserFriendsModel>('./assets/data/user/user-friends.json')\n    .pipe(\n      map(\n        (data: UserFriendsModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const friends = new UserFriendsModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. friends = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(friends, data);\n\n          return friends;\n        }\n      )\n    );\n  }\n\n  public getFriendsStore(dataSource: Observable<UserFriendsModel>): DataStore<UserFriendsModel> {\n    // Use cache if available\n    if (!this.friendsDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: UserFriendsModel = new UserFriendsModel();\n      this.friendsDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.friendsDataStore.load(dataSource);\n    }\n    return this.friendsDataStore;\n  }\n\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class FashionDetailsModel extends ShellModel {\n  showcaseImages: Array<{type: string, source: string}> = [\n    {\n      type: '',\n      source: ''\n    },\n    {\n      type: '',\n      source: ''\n    },\n    {\n      type: '',\n      source: ''\n    }\n  ];\n  name: string;\n  brand: string;\n  price: number;\n  salePrice: number;\n  colorVariants: Array<{name: string, value: string, default: boolean}> = [\n    {\n      name: '',\n      value: '',\n      default: false\n    },\n    {\n      name: '',\n      value: '',\n      default: false\n    },\n    {\n      name: '',\n      value: '',\n      default: false\n    }\n  ];\n  sizeVariants: Array<{name: string, value: string, default: boolean}> = [\n    {\n      name: '',\n      value: '',\n      default: false\n    },\n    {\n      name: '',\n      value: '',\n      default: false\n    },\n    {\n      name: '',\n      value: '',\n      default: false\n    }\n  ];\n  description: string;\n  careInstructions: string;\n  upc: string;\n  relatedProducts: Array<{id: number}> = [\n    {\n      id: null\n    },\n    {\n      id: null\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-terms-of-service-page',\n  templateUrl: 'terms-of-service.page.html',\n  styleUrls: [\n    './styles/terms-of-service.page.scss'\n  ]\n})\n\nexport class TermsOfServicePage {\n\n  constructor(private modalController: ModalController) { }\n\n  dismiss(): void {\n    this.modalController.dismiss();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class plumbingDetailsModel extends ShellModel {\n  icon: string;\n  slug: string;\n  showcaseImage: string;\n  name: string;\n  shortName: string;\n  style: string;\n  priceRange: number;\n  avgRating: number;\n  ratings: Array<{concept: string, rate: number}> = [\n    {\n      concept: '',\n      rate: null\n    },\n    {\n      concept: '',\n      rate: null\n    },\n    {\n      concept: '',\n      rate: null\n    }\n  ];\n  reviewsCount: number;\n  openHours: Array<{day: string, open: boolean, hourFrom: string, hourTo: string}> = [\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: false,\n      hourFrom: '',\n      hourTo: ''\n    }\n  ];\n  location: {\n    address: string,\n    city: string,\n    latlng: string,\n    mapImage: string\n  };\n  tags: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  usersPictures: Array<string> = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    ''\n  ];\n  popularDishes: Array<{name: string, rate: number, votesCount: number}> = [\n    {\n      name: '',\n      rate: null,\n      votesCount: null\n    },\n    {\n      name: '',\n      rate: null,\n      votesCount: null\n    }\n  ];\n  reviews: Array<{\n    user: {image: string, name: string, reviewsCount: number, points: number},\n    avgRating: number,\n    ratings: Array<{concept: string, rate: number}>,\n    publishedAt: string,\n    message: string\n  }> = [\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    },\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    },\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    }\n  ];\n  popularRecipes: Array<{\n    showcaseImage: string,\n    name: string,\n    chef: {name: string, image: string},\n    difficulty: string,\n    time: string,\n    calories: string,\n    chefExtract: string\n  }> = [\n    {\n      showcaseImage: '',\n      name: '',\n      chef: {\n        name: '',\n        image: ''\n      },\n      difficulty: '',\n      time: '',\n      calories: '',\n      chefExtract: ''\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class TravelDetailsModel extends ShellModel {\n  image: string;\n  icon: string;\n  name: string;\n  category: string;\n  shortDescription: string;\n  rating: number;\n  reviewsCount: number;\n  tags: Array<string> = new Array(3).fill('');\n  fullDescription: string;\n  openHours: Array<{day: string, open: boolean, hourFrom: string, hourTo: string}> = [\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: false,\n      hourFrom: '',\n      hourTo: ''\n    }\n  ];\n  location: {\n    address: string,\n    city: string,\n    latlng: string,\n    mapImage: string\n  };\n  whereToStay: Array<{picture: string, name: string, rating: number}> = [\n    {\n      picture: '',\n      name: '',\n      rating: null\n    },\n    {\n      picture: '',\n      name: '',\n      rating: null\n    },\n    {\n      picture: '',\n      name: '',\n      rating: null\n    }\n  ];\n  whereToEat: Array<{picture: string, name: string, rating: number}> = [\n    {\n      picture: '',\n      name: '',\n      rating: null\n    },\n    {\n      picture: '',\n      name: '',\n      rating: null\n    },\n    {\n      picture: '',\n      name: '',\n      rating: null\n    }\n  ];\n  relatedActivities: Array<{picture: string, name: string, category: string, rating: number}> = [\n    {\n      picture: '',\n      name: '',\n      category: '',\n      rating: null\n    },\n    {\n      picture: '',\n      name: '',\n      category: '',\n      rating: null\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class ElectricalDetailsModel extends ShellModel {\n  icon: string;\n  slug: string;\n  showcaseImage: string;\n  name: string;\n  shortName: string;\n  style: string;\n  priceRange: number;\n  avgRating: number;\n  ratings: Array<{concept: string, rate: number}> = [\n    {\n      concept: '',\n      rate: null\n    },\n    {\n      concept: '',\n      rate: null\n    },\n    {\n      concept: '',\n      rate: null\n    }\n  ];\n  reviewsCount: number;\n  openHours: Array<{day: string, open: boolean, hourFrom: string, hourTo: string}> = [\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: false,\n      hourFrom: '',\n      hourTo: ''\n    }\n  ];\n  location: {\n    address: string,\n    city: string,\n    latlng: string,\n    mapImage: string\n  };\n  tags: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  usersPictures: Array<string> = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    ''\n  ];\n  popularDishes: Array<{name: string, rate: number, votesCount: number}> = [\n    {\n      name: '',\n      rate: null,\n      votesCount: null\n    },\n    {\n      name: '',\n      rate: null,\n      votesCount: null\n    }\n  ];\n  reviews: Array<{\n    user: {image: string, name: string, reviewsCount: number, points: number},\n    avgRating: number,\n    ratings: Array<{concept: string, rate: number}>,\n    publishedAt: string,\n    message: string\n  }> = [\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    },\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    },\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    }\n  ];\n  popularRecipes: Array<{\n    showcaseImage: string,\n    name: string,\n    chef: {name: string, image: string},\n    difficulty: string,\n    time: string,\n    calories: string,\n    chefExtract: string\n  }> = [\n    {\n      showcaseImage: '',\n      name: '',\n      chef: {\n        name: '',\n        image: ''\n      },\n      difficulty: '',\n      time: '',\n      calories: '',\n      chefExtract: ''\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map, flatMap } from 'rxjs/operators';\n\nimport { DataStore } from '../shell/data-store';\nimport { woodListingModel } from './listing/wood-listing.model';\nimport { woodDetailsModel } from './details/wood-details.model';\n\n@Injectable()\nexport class woodService {\n  private listingDataStore: DataStore<woodListingModel>;\n  private detailsDataStore: DataStore<woodDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getListingDataSource(): Observable<woodListingModel> {\n    return this.http.get<woodListingModel>('./assets/data/wood/listing.json')\n    .pipe(\n      map(\n        (data: woodListingModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const listing = new woodListingModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. listing = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(listing, data);\n\n          return listing;\n        }\n      )\n    );\n  }\n\n  public getListingStore(dataSource: Observable<woodListingModel>): DataStore<woodListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: woodListingModel = new woodListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(slug: string): Observable<woodDetailsModel> {\n    return this.http.get<{items: Array<woodDetailsModel>}>('./assets/data/wood/details.json')\n    .pipe(\n      flatMap(details => details.items.filter(item => item.slug === slug)),\n      map(\n        (data: woodDetailsModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const details = new woodDetailsModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. details = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(details, data);\n\n          return details;\n        }\n      )\n    );\n  }\n\n  public getDetailsStore(dataSource: Observable<woodDetailsModel>): DataStore<woodDetailsModel> {\n    // Initialize the model specifying that it is a shell model\n    const shellModel: woodDetailsModel = new woodDetailsModel();\n    this.detailsDataStore = new DataStore(shellModel);\n    // Trigger the loading mechanism (with shell) in the dataStore\n    this.detailsDataStore.load(dataSource);\n\n    return this.detailsDataStore;\n  }\n}\n","import { Component, AfterContentInit, ContentChild, HostBinding } from '@angular/core';\n\n// Reference to the @ionic/angular Components List:\n// https://github.com/ionic-team/ionic/blob/master/angular/src/directives/proxies.ts\nimport { IonCheckbox } from '@ionic/angular';\n\n@Component({\n  selector: 'app-checkbox-wrapper',\n  templateUrl: './checkbox-wrapper.component.html',\n  styleUrls: [\n    './checkbox-wrapper.component.scss'\n  ]\n})\nexport class CheckboxWrapperComponent implements AfterContentInit {\n  @ContentChild(IonCheckbox) checkbox: IonCheckbox;\n\n  @HostBinding('class.checkbox-checked') isChecked: boolean;\n\n  constructor() {}\n\n  ngAfterContentInit() {\n    // ContentChild is set\n    this.isChecked = this.checkbox.checked;\n\n    // Subscribe to changes\n    this.checkbox.ionChange.subscribe(changes => {\n      this.isChecked = changes.detail.checked;\n    });\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class ElectricalItemModel {\n  icon: string;\n  image: string;\n  name: string;\n  address: string;\n  priceRange: number;\n  rating: number;\n  tags: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  pictures: Array<string> = [\n    '',\n    '',\n    '',\n    '',\n    ''\n  ];\n}\n\nexport class ElectricalListingModel extends ShellModel {\n  items: Array<ElectricalItemModel> = [\n    new ElectricalItemModel(),\n    new ElectricalItemModel(),\n    new ElectricalItemModel(),\n    new ElectricalItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map, flatMap } from 'rxjs/operators';\n\nimport { DataStore } from '../shell/data-store';\nimport { plumbingListingModel } from './listing/plumbing-listing.model';\nimport { plumbingDetailsModel } from './details/plumbing-details.model';\n\n@Injectable()\nexport class plumbingService {\n  private listingDataStore: DataStore<plumbingListingModel>;\n  private detailsDataStore: DataStore<plumbingDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getListingDataSource(): Observable<plumbingListingModel> {\n    return this.http.get<plumbingListingModel>('./assets/data/plumbing/listing.json')\n    .pipe(\n      map(\n        (data: plumbingListingModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const listing = new plumbingListingModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. listing = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(listing, data);\n\n          return listing;\n        }\n      )\n    );\n  }\n\n  public getListingStore(dataSource: Observable<plumbingListingModel>): DataStore<plumbingListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: plumbingListingModel = new plumbingListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(slug: string): Observable<plumbingDetailsModel> {\n    return this.http.get<{items: Array<plumbingDetailsModel>}>('./assets/data/plumbing/details.json')\n    .pipe(\n      flatMap(details => details.items.filter(item => item.slug === slug)),\n      map(\n        (data: plumbingDetailsModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const details = new plumbingDetailsModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. details = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(details, data);\n\n          return details;\n        }\n      )\n    );\n  }\n\n  public getDetailsStore(dataSource: Observable<plumbingDetailsModel>): DataStore<plumbingDetailsModel> {\n    // Initialize the model specifying that it is a shell model\n    const shellModel: plumbingDetailsModel = new plumbingDetailsModel();\n    this.detailsDataStore = new DataStore(shellModel);\n    // Trigger the loading mechanism (with shell) in the dataStore\n    this.detailsDataStore.load(dataSource);\n\n    return this.detailsDataStore;\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class FashionItemModel {\n  price: number;\n  salePrice: number;\n  image: string;\n  squareImage: string;\n  showcaseImages: Array<string>;\n  name: string;\n  style: string;\n  relatedProducts: Array<string>;\n}\n\nexport class FashionListingModel extends ShellModel {\n  items: Array<FashionItemModel> = [\n    new FashionItemModel(),\n    new FashionItemModel(),\n    new FashionItemModel(),\n    new FashionItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class woodItemModel {\n  icon: string;\n  image: string;\n  name: string;\n  address: string;\n  priceRange: number;\n  rating: number;\n  tags: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  pictures: Array<string> = [\n    '',\n    '',\n    '',\n    '',\n    ''\n  ];\n}\n\nexport class woodListingModel extends ShellModel {\n  items: Array<woodItemModel> = [\n    new woodItemModel(),\n    new woodItemModel(),\n    new woodItemModel(),\n    new woodItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DataStore } from '../shell/data-store';\nimport { RealEstateListingModel } from './listing/real-estate-listing.model';\nimport { RealEstateDetailsModel } from './details/real-estate-details.model';\n\n@Injectable()\nexport class RealEstateService {\n  private listingDataStore: DataStore<RealEstateListingModel>;\n  private detailsDataStore: DataStore<RealEstateDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getListingDataSource(): Observable<RealEstateListingModel> {\n    return this.http.get<RealEstateListingModel>('./assets/data/real-estate/listing.json')\n    .pipe(\n      map(\n        (data: RealEstateListingModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const listing = new RealEstateListingModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. listing = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(listing, data);\n\n          return listing;\n        }\n      )\n    );\n  }\n\n  public getListingStore(dataSource: Observable<RealEstateListingModel>): DataStore<RealEstateListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: RealEstateListingModel = new RealEstateListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(): Observable<RealEstateDetailsModel> {\n    return this.http.get<RealEstateDetailsModel>('./assets/data/real-estate/details.json')\n    .pipe(\n      map(\n        (data: RealEstateDetailsModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const details = new RealEstateDetailsModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. details = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(details, data);\n\n          return details;\n        }\n      )\n    );\n  }\n\n  public getDetailsStore(dataSource: Observable<RealEstateDetailsModel>): DataStore<RealEstateDetailsModel> {\n    // Use cache if available\n    if (!this.detailsDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: RealEstateDetailsModel = new RealEstateDetailsModel();\n      this.detailsDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.detailsDataStore.load(dataSource);\n    }\n    return this.detailsDataStore;\n  }\n}\n","import { FormControl, FormGroup } from '@angular/forms';\n\nexport class PasswordValidator {\n\n  // If our validation fails, we return an object with a key for the error name and a value of true.\n  // Otherwise, if the validation passes, we simply return null because there is no error.\n\n  static areNotEqual(formGroup: FormGroup) {\n    let val;\n    let valid = true;\n\n    for (const key in formGroup.controls) {\n      if (formGroup.controls.hasOwnProperty(key)) {\n        const control: FormControl = <FormControl>formGroup.controls[key];\n\n        if (val === undefined) {\n          val = control.value;\n        } else {\n          if (val !== control.value) {\n            valid = false;\n            break;\n          }\n        }\n      }\n    }\n\n    if (valid) {\n      return null;\n    }\n\n    return {\n      areNotEqual: true\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map, flatMap } from 'rxjs/operators';\n\nimport { DataStore } from '../shell/data-store';\nimport { PaintingListingModel } from './listing/painting-listing.model';\nimport { PaintingDetailsModel } from './details/painting-details.model';\n\n@Injectable()\nexport class PaintingService {\n  private listingDataStore: DataStore<PaintingListingModel>;\n  private detailsDataStore: DataStore<PaintingDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getListingDataSource(): Observable<PaintingListingModel> {\n    return this.http.get<PaintingListingModel>('./assets/data/painting/listing.json')\n    .pipe(\n      map(\n        (data: PaintingListingModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const listing = new PaintingListingModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. listing = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(listing, data);\n\n          return listing;\n        }\n      )\n    );\n  }\n\n  public getListingStore(dataSource: Observable<PaintingListingModel>): DataStore<PaintingListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: PaintingListingModel = new PaintingListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(slug: string): Observable<PaintingDetailsModel> {\n    return this.http.get<{items: Array<PaintingDetailsModel>}>('./assets/data/painting/details.json')\n    .pipe(\n      flatMap(details => details.items.filter(item => item.slug === slug)),\n      map(\n        (data: PaintingDetailsModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const details = new PaintingDetailsModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. details = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(details, data);\n\n          return details;\n        }\n      )\n    );\n  }\n\n  public getDetailsStore(dataSource: Observable<PaintingDetailsModel>): DataStore<PaintingDetailsModel> {\n    // Initialize the model specifying that it is a shell model\n    const shellModel: PaintingDetailsModel = new PaintingDetailsModel();\n    this.detailsDataStore = new DataStore(shellModel);\n    // Trigger the loading mechanism (with shell) in the dataStore\n    this.detailsDataStore.load(dataSource);\n\n    return this.detailsDataStore;\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class BrickDetailsModel extends ShellModel {\n  icon: string;\n  slug: string;\n  showcaseImage: string;\n  name: string;\n  shortName: string;\n  style: string;\n  priceRange: number;\n  avgRating: number;\n  ratings: Array<{concept: string, rate: number}> = [\n    {\n      concept: '',\n      rate: null\n    },\n    {\n      concept: '',\n      rate: null\n    },\n    {\n      concept: '',\n      rate: null\n    }\n  ];\n  reviewsCount: number;\n  openHours: Array<{day: string, open: boolean, hourFrom: string, hourTo: string}> = [\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: false,\n      hourFrom: '',\n      hourTo: ''\n    }\n  ];\n  location: {\n    address: string,\n    city: string,\n    latlng: string,\n    mapImage: string\n  };\n  tags: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  usersPictures: Array<string> = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    ''\n  ];\n  popularDishes: Array<{name: string, rate: number, votesCount: number}> = [\n    {\n      name: '',\n      rate: null,\n      votesCount: null\n    },\n    {\n      name: '',\n      rate: null,\n      votesCount: null\n    }\n  ];\n  reviews: Array<{\n    user: {image: string, name: string, reviewsCount: number, points: number},\n    avgRating: number,\n    ratings: Array<{concept: string, rate: number}>,\n    publishedAt: string,\n    message: string\n  }> = [\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    },\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    },\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    }\n  ];\n  popularRecipes: Array<{\n    showcaseImage: string,\n    name: string,\n    chef: {name: string, image: string},\n    difficulty: string,\n    time: string,\n    calories: string,\n    chefExtract: string\n  }> = [\n    {\n      showcaseImage: '',\n      name: '',\n      chef: {\n        name: '',\n        image: ''\n      },\n      difficulty: '',\n      time: '',\n      calories: '',\n      chefExtract: ''\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DataStore } from '../shell/data-store';\nimport { TravelListingModel } from './listing/travel-listing.model';\nimport { TravelDetailsModel } from './details/travel-details.model';\n\n@Injectable()\nexport class TravelService {\n  private listingDataStore: DataStore<TravelListingModel>;\n  private detailsDataStore: DataStore<TravelDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getListingDataSource(): Observable<TravelListingModel> {\n    return this.http.get<TravelListingModel>('./assets/data/travel/listing.json')\n    .pipe(\n      map(\n        (data: TravelListingModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const listing = new TravelListingModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. listing = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(listing, data);\n\n          return listing;\n        }\n      )\n    );\n  }\n\n  public getListingStore(dataSource: Observable<TravelListingModel>): DataStore<TravelListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: TravelListingModel = new TravelListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(): Observable<TravelDetailsModel> {\n    return this.http.get<TravelDetailsModel>('./assets/data/travel/details.json')\n    .pipe(\n      map(\n        (data: TravelDetailsModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const details = new TravelDetailsModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. details = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(details, data);\n\n          return details;\n        }\n      )\n    );\n  }\n\n  public getDetailsStore(dataSource: Observable<TravelDetailsModel>): DataStore<TravelDetailsModel> {\n    // Use cache if available\n    if (!this.detailsDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: TravelDetailsModel = new TravelDetailsModel();\n      this.detailsDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.detailsDataStore.load(dataSource);\n    }\n    return this.detailsDataStore;\n  }\n}\n\n","import { ShellModel } from '../../shell/data-store';\n\nexport class RoofingDetailsModel extends ShellModel {\n  icon: string;\n  slug: string;\n  showcaseImage: string;\n  name: string;\n  shortName: string;\n  style: string;\n  priceRange: number;\n  avgRating: number;\n  ratings: Array<{concept: string, rate: number}> = [\n    {\n      concept: '',\n      rate: null\n    },\n    {\n      concept: '',\n      rate: null\n    },\n    {\n      concept: '',\n      rate: null\n    }\n  ];\n  reviewsCount: number;\n  openHours: Array<{day: string, open: boolean, hourFrom: string, hourTo: string}> = [\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: false,\n      hourFrom: '',\n      hourTo: ''\n    }\n  ];\n  location: {\n    address: string,\n    city: string,\n    latlng: string,\n    mapImage: string\n  };\n  tags: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  usersPictures: Array<string> = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    ''\n  ];\n  popularDishes: Array<{name: string, rate: number, votesCount: number}> = [\n    {\n      name: '',\n      rate: null,\n      votesCount: null\n    },\n    {\n      name: '',\n      rate: null,\n      votesCount: null\n    }\n  ];\n  reviews: Array<{\n    user: {image: string, name: string, reviewsCount: number, points: number},\n    avgRating: number,\n    ratings: Array<{concept: string, rate: number}>,\n    publishedAt: string,\n    message: string\n  }> = [\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    },\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    },\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    }\n  ];\n  popularRecipes: Array<{\n    showcaseImage: string,\n    name: string,\n    chef: {name: string, image: string},\n    difficulty: string,\n    time: string,\n    calories: string,\n    chefExtract: string\n  }> = [\n    {\n      showcaseImage: '',\n      name: '',\n      chef: {\n        name: '',\n        image: ''\n      },\n      difficulty: '',\n      time: '',\n      calories: '',\n      chefExtract: ''\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","<ng-content></ng-content>\n","import { ShellModel } from '../shell/data-store';\n\nexport class ShowcaseShellModel extends ShellModel {\n  cover: string;\n  image: string;\n  title: string;\n  description: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseShellUserModel extends ShellModel {\n  email: string;\n  first_name: string;\n  last_name: string;\n  avatar: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseCommentModel extends ShellModel {\n  postId: number;\n  name: string;\n  email: string;\n  body: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcasePostModel extends ShellModel {\n  id: number;\n  title: string;\n  body: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseTaskModel extends ShellModel {\n  id: number;\n  userId: number;\n  title: string;\n  completed: boolean;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseUser2Model extends ShellModel {\n  id: number;\n  name: string;\n  email: string;\n  username: string;\n  company?: ShowcaseCompanyModel;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseCompanyModel extends ShellModel {\n  catchPhrase: string;\n  name: string;\n  bs: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseCombinedTaskUserModel extends ShowcaseTaskModel {\n  user: ShowcaseUser2Model;\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map, flatMap } from 'rxjs/operators';\n\nimport { DataStore } from '../shell/data-store';\nimport { CarpentryListingModel } from './listing/carpentry-listing.model';\nimport { CarpentryDetailsModel } from './details/carpentry-details.model';\n\n@Injectable()\nexport class CarpentryService {\n  private listingDataStore: DataStore<CarpentryListingModel>;\n  private detailsDataStore: DataStore<CarpentryDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getListingDataSource(): Observable<CarpentryListingModel> {\n    return this.http.get<CarpentryListingModel>('./assets/data/carpentry/listing.json')\n    .pipe(\n      map(\n        (data: CarpentryListingModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const listing = new CarpentryListingModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. listing = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(listing, data);\n\n          return listing;\n        }\n      )\n    );\n  }\n\n  public getListingStore(dataSource: Observable<CarpentryListingModel>): DataStore<CarpentryListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: CarpentryListingModel = new CarpentryListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(slug: string): Observable<CarpentryDetailsModel> {\n    return this.http.get<{items: Array<CarpentryDetailsModel>}>('./assets/data/carpentry/details.json')\n    .pipe(\n      flatMap(details => details.items.filter(item => item.slug === slug)),\n      map(\n        (data: CarpentryDetailsModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const details = new CarpentryDetailsModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. details = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(details, data);\n\n          return details;\n        }\n      )\n    );\n  }\n\n  public getDetailsStore(dataSource: Observable<CarpentryDetailsModel>): DataStore<CarpentryDetailsModel> {\n    // Initialize the model specifying that it is a shell model\n    const shellModel: CarpentryDetailsModel = new CarpentryDetailsModel();\n    this.detailsDataStore = new DataStore(shellModel);\n    // Trigger the loading mechanism (with shell) in the dataStore\n    this.detailsDataStore.load(dataSource);\n\n    return this.detailsDataStore;\n  }\n}\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticImpact as a, hapticSelectionStart as b, hapticSelectionChanged as c, hapticSelectionEnd as d, hapticSelection as h };\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport * as dayjs from 'dayjs';\n\nimport { DataStore } from '../shell/data-store';\nimport { DealsListingModel } from './listing/deals-listing.model';\nimport { DealsDetailsModel } from './details/deals-details.model';\n\n@Injectable()\nexport class DealsService {\n  private listingDataStore: DataStore<DealsListingModel>;\n  private detailsDataStore: DataStore<DealsDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  get relativeDates(): Array<string> {\n    return [\n      dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string,\n      dayjs().add(7, 'day').format('MM/DD/YYYY') as string,\n      dayjs().subtract(1, 'month').format('MM/DD/YYYY') as string,\n      dayjs().add(2, 'month').format('MM/DD/YYYY') as string\n    ];\n  }\n\n  public getListingDataSource(): Observable<DealsListingModel> {\n    return this.http.get<DealsListingModel>('./assets/data/deals/listing.json')\n    .pipe(\n      map(\n        (data: DealsListingModel) => {\n          // Using rest operator to divide the data (see: https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb)\n          const {items, ...otherData} = data;\n\n          const itemsWithRelativeDates = items.map((dealItem, index) => {\n            // Relative date (better to showcase UI micro-interactions)\n            return {...dealItem, expirationDate: this.relativeDates[index]};\n          });\n\n          // Using spread operator to concat the data (see: https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb)\n          const updatedListingData = {...otherData, items: itemsWithRelativeDates};\n\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const listing = new DealsListingModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. listing = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(listing, updatedListingData);\n\n          return listing;\n        }\n      )\n    );\n  }\n\n  public getListingStore(dataSource: Observable<DealsListingModel>): DataStore<DealsListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: DealsListingModel = new DealsListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(): Observable<DealsDetailsModel> {\n    return this.http.get<DealsDetailsModel>('./assets/data/deals/details.json')\n    .pipe(\n      map(\n        (data: DealsDetailsModel) => {\n          const expirationDate = dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string;\n          const updatedDetailsData = {...data, expirationDate};\n\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const details = new DealsDetailsModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. details = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(details, updatedDetailsData);\n\n          return details;\n        }\n      )\n    );\n  }\n\n  public getDetailsStore(dataSource: Observable<DealsDetailsModel>): DataStore<DealsDetailsModel> {\n\n    // Initialize the model specifying that it is a shell model\n    const shellModel: DealsDetailsModel = new DealsDetailsModel();\n    this.detailsDataStore = new DataStore(shellModel);\n    // Trigger the loading mechanism (with shell) in the dataStore\n    this.detailsDataStore.load(dataSource);\n\n    return this.detailsDataStore;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport * as dayjs from 'dayjs';\n\n@Pipe({ name: 'appTimeDifference' })\nexport class TimeDifferencePipe implements PipeTransform {\n  transform(value: any): number {\n    return dayjs(value).diff(dayjs(), 'day');\n  }\n}\n"],"sourceRoot":"webpack:///"}