{"version":3,"sources":["./src/app/electrical/details/electrical-details.module.ts","./src/app/electrical/details/electrical-details.resolver.ts","./src/app/electrical/details/electrical-details.page.ts","./src/app/electrical/details/electrical-details.page.html"],"names":[],"mappings":";;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AASW;AACQ;WAO9D,sFAAyB;AALrC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8EAAqB;QAChC,OAAO,EAAE;YACP,IAAI,IAA2B;SAChC;KACF;CACF,CAAC;AAoBK,MAAM,2BAA2B;CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzC3C;AAAA;AAAA;AAAA;AAAkE;AAIR;AAInD,MAAM,yBAAyB;IAEpC,YAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;IAAG,CAAC;IAE5D,OAAO,CAAC,KAA6B;QACnC,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAEjD,MAAM,UAAU,GAAuC,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QAC7G,MAAM,SAAS,GAAsC,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAExG,OAAO,SAAS,CAAC;IACnB,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBgD;AAEA;AACgC;AACb;AACT;AAepD,MAAM,qBAAqB;IA2DhC,YAAmB,IAAoB,EAAU,KAAqB,EAAS,eAAgC;QAA5F,SAAI,GAAJ,IAAI,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,oBAAe,GAAf,eAAe,CAAiB;QA1D/G,oIAAoI;QACpI,kBAAa,GAAQ;YACnB,IAAI,EAAE;gBACJ,MAAM,EAAE,KAAK,CAAC,sEAAsE;aACrF;SACF,CAAC;QA2CuC,iBAAY,GAAG,IAAI,CAAC;QAErB,gBAAW,GAAG,KAAK,CAAC;QAU1D,IAAI,CAAC,aAAa,EAAE,CAAC;IAEvB,CAAC;IAVD,IAAmC,OAAO;QACxC,OAAO,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IAC/D,CAAC;IAUD,kCAAkC;IAClC,eAAe;QACb,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAED,4CAA4C;IAC5C,eAAe;QACb,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAED,eAAe;QACb,mBAAmB;QACnB,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;YAC3C,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAClC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,uBAAuB;QACvB,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YACjD,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;gBAC3C,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;YAClC,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC3B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,yBAAyB;QACzB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACjC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QAEX,WAAW;QACX,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;QACpD,IAAI,SAAS,GAAG,EAAE,CAAC,CAAC,aAAa;QACjC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,GAAG,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;QAE5G,YAAY;QACZ,IAAI,CAAC,OAAO,GAAG,cAAc,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;QACpD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QAEjD,MAAM;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;QACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;QAEjD,QAAQ;QAER,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QAC7C,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QAC7C,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QAC7C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QAEzD,aAAa;QACb,IAAI,SAAS,GAAG,EAAE,CAAC,CAAC,aAAa;QACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,GAAC,SAAS,CAAC,CAAC;QAC5G,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,GAAC,SAAS,CAAC,CAAC;QAC/G,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;QAEvD,QAAQ;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;QACtD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;IAGzD,CAAC;IAID,QAAQ;QAIN,6DAA6D;QAC7D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI;aACjC,SAAS,CACR,CAAC,iBAA6D,EAAE,EAAE;YAChE,oHAAoH;YACpH,IAAI,CAAC,aAAa,GAAG,qEAAc,CAAC,WAAW,CAAyB,iBAAiB,CAAC,IAAI,EAAE,gFAAsB,CAAC;iBACpH,SAAS,CACR,CAAC,KAAK,EAAE,EAAE;gBACR,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,GAAG,CAAC,CACf,CAAC;QACN,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,GAAG,CAAC,CACf,CAAC;IACN,CAAC;IAEK,mBAAmB;;YACvB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,MAAM,EAAE,UAAU;gBAClB,OAAO,EAAE,YAAY;gBACrB,QAAQ,EAAE,QAAQ;gBAClB,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,MAAM;wBACZ,IAAI,EAAE,QAAQ;wBACd,OAAO,EAAE,GAAG,EAAE;4BACZ,IAAI,CAAC,aAAa,EAAE,CAAC;4BACrB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;4BACnB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;4BACjB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;4BAClB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;4BACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;4BAClB,IAAI,CAAC,QAAQ,GAAC,EAAE,CAAC;4BACjB,IAAI,CAAC,OAAO,GAAC,EAAE,CAAC;wBAClB,CAAC;qBACF;iBACF;aACF,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;KAAA;IAEK,qBAAqB;;YACzB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,OAAO,EAAE,YAAY;gBACrB,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;KAAA;IAED,kBAAkB;QAGhB,IAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;QACrE,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAC9B,IAAI,IAAI,CAAC,QAAQ,IAAI,cAAc,EAAE;YACnC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAG5B;aAAM;YAEL,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;IAEH,CAAC;IAED,mBAAmB;QAGjB,IAAI,UAAU,GAAG,YAAY,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3D,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC1B,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,EAAE;YAC7B,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAG5B;aAAM;YAEL,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;IAEH,CAAC;IAED,aAAa;QAGX,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;QACzC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;QAC9C,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC1B,IAAI,IAAI,CAAC,OAAO,IAAI,UAAU,EAAE;YAC9B,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAG5B;aAAM;YAEL,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;IAEH,CAAC;IAED,eAAe;QAGb,IAAI,eAAe,GAAG,IAAI,CAAC,EAAE,GAAC,IAAI,CAAC,EAAE,GAAC,IAAI,CAAC,EAAE,CAAC;QAC9C,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC;QACnD,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;QACxC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACvB,IAAI,IAAI,CAAC,OAAO,IAAI,OAAO,IAAI,IAAI,CAAC,YAAY,IAAI,eAAe,EAAE;YACnE,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAG5B;aAAM;YAEL,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;IAEH,CAAC;IACD,iBAAiB;QAGf,IAAI,eAAe,GAAG,CAAC,GAAC,IAAI,CAAC,EAAE,GAAC,CAAC,GAAC,IAAI,CAAC,EAAE,GAAC,CAAC,GAAC,IAAI,CAAC,EAAE,CAAC;QACpD,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QAC1D,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC;QACnD,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;QACxC,OAAO,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QAC/B,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACvB,IAAI,IAAI,CAAC,OAAO,IAAI,OAAO,IAAI,IAAI,CAAC,YAAY,IAAI,eAAe,EAAE;YACnE,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAG5B;aAAM;YAEL,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;IAEH,CAAC;IAED,yBAAyB;IAEzB,cAAc;QAEZ,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,UAAU,CAAC;QAC5D,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;QAE9C,IAAI,UAAU,IAAI,IAAI,CAAC,QAAQ,EAAE;YAC/B,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAG5B;aAAM;YAEL,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;IAEH,CAAC;IAGD,eAAe;QAEb,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,UAAU,GAAC,GAAG,CAAC;QACpD,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;QAE9C,IAAI,UAAU,IAAI,IAAI,CAAC,OAAO,EAAE;YAC9B,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAG5B;aAAM;YAEL,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;IAEH,CAAC;IAMD,uFAAuF;IACvF,0HAA0H;IAC1H,gBAAgB;QACd,uDAAuD;QACvD,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2GC9TG,0rBAAqG,IACnG,ipBAAiC,IAC/B,ynBAAU,IACR,2JAA0C,KAC1C,ipBAAiB,IACf,8oBAAgB,IACd,2iBAAuC,IAEzC,2pBAAmB,IACjB,2iBAAwC,IAG5C,wpBAAkB,IAChB,yrBAAiE,IAC/D,mpBAAiC,IAQ/B;;;;;;6wBAAM,IACJ,spBAA8B,IAC5B,kpBAA8B,IAC5B,8nBAAW,sFAAa,MACxB,sJAAuC,KACvC,iJAA6B,qFAAQ,MAEvC,kpBAA8B,IAC5B,8nBAAW,mFAAU,MACrB,sJAAqC,KACrC,iJAA6B,oFAAO,MAEtC,mpBAA8B,IAC5B,8nBAAW,sFAAa,MACxB;;;;;wBAA8D;MAAvB;;wBAAsB;MAA7D,suDAA8D,IAC9D,iJAA6B,iFAAI,MAGrC,gJAAyB,KACvB,kPAA0F,YAA/B;;wBAA8B;MAAzF,2lBAA0F,iFAE1F,mDArCU,mDAAsB,gBAAtC,aAAuC,EAAvB,SAAsB,GAGtB,mDAAuB,iBAAvC,aAAwC,EAAxB,SAAuB,GA2BR,2BAAe,EAAtC,aAA8D,EAAvC,wCAAe,EAAC,oBAAsB,WAA7D,aAA8D,EAAvC,UAAe,EAAC,UAAsB,GAKnD,4BAAiB,EAAC,wBAAc,EAAC,yBAAa,EAA1D,aAA0F,EAA9E,UAAiB,EAAC,UAAc,EAAC,UAAa,mDAnChE,+GAAuC,GAGvC,+GAAwC,GAatC,wtBAAM,GAIG,oBAAqB,UAAxB,aAAuC,EAApC,UAAqB,GAKrB,oBAAmB,QAAtB,aAAqC,EAAlC,UAAmB,GAKtB,ouBAA8D;2GAmBhF,0rBAAsG,IACpG,ipBAAiC,IAC/B,ynBAAU,IACR,6JAA4C,KAC5C,ipBAAiB,IACf,8oBAAgB,IACd,2iBAAuC,IAEzC,2pBAAmB,IACjB,2iBAAwC,IAG5C,wpBAAkB,IAChB,yrBAAiE,IAC/D,mpBAAiC,IAQ/B;;;;;;6wBAAM,IACJ,spBAA8B,IAC5B,kpBAA8B,IAC5B,8nBAAW,4EAAG,MACd,sJAAuC,KACvC,iJAA6B,0FAAG,MAElC,kpBAA8B,IAC5B,8nBAAW,4EAAG,MACd,sJAAuC,KACvC,iJAA6B,8EAAC,MAEhC,kpBAA8B,IAC5B,8nBAAW,4EAAG,MACd,sJAAsC,KACtC,iJAA6B,8EAAC,MAEhC,mpBAA8B,IAC5B,8nBAAW,4EAAG,MACd;;;;;wBAA0D;MAArB;;wBAAoB;MAAzD,suDAA0D,IAC1D,iJAA6B,+EAAE,MAGnC,gJAAyB,KACvB,kPAA2F,YAAhC;;wBAA+B;MAA1F,2lBAA2F,iFAE3F,mDA1CU,mDAAsB,gBAAtC,aAAuC,EAAvB,SAAsB,GAGtB,mDAAuB,iBAAvC,aAAwC,EAAxB,SAAuB,GAgCR,yBAAa,EAApC,aAA0D,EAAnC,sCAAa,EAAC,oBAAoB,SAAzD,aAA0D,EAAnC,UAAa,EAAC,UAAoB,GAK/C,4BAAiB,EAAC,wBAAc,EAAC,yBAAa,EAA1D,aAA2F,EAA/E,UAAiB,EAAC,UAAc,EAAC,UAAa,mDAxChE,+GAAuC,GAGvC,+GAAwC,GAatC,wtBAAM,GAIG,oBAAqB,UAAxB,aAAuC,EAApC,UAAqB,GAKrB,oBAAqB,UAAxB,aAAuC,EAApC,UAAqB,GAKrB,oBAAoB,SAAvB,aAAsC,EAAnC,UAAoB,GAKvB,ouBAA0D;2GAmB5E,0rBAAgG,IAC9F,ipBAAiC,IAC/B,ynBAAU,IAER,ipBAAiB,IACf,6oBAAgB,IACd,2iBAAuC,IAEzC,2pBAAmB,IACjB,2iBAAwC,IAG5C,wpBAAkB,IAChB,yrBAAiE,IAC/D,mpBAAiC,IAQ/B;;;;;;6wBAAM,IACJ,spBAA8B,IAC5B,kpBAA8B,IAC5B,8nBAAW,4EAAG,MACd,sJAAsC,KACtC,iJAA6B,8EAAC,MAEhC,kpBAA8B,IAC5B,8nBAAW,4EAAG,MACd,sJAAoC,KACpC,iJAA6B,8EAAC,MAEhC,mpBAA8B,IAC5B,8nBAAW,4EAAG,MACd;;;;;wBAA4D;MAAtB;;wBAAqB;MAA3D,suDAA4D,IAC5D,iJAA6B,mFAAC,MAGlC,gJAAyB,KACvB,kPAAqF,YAA1B;;wBAAyB;MAApF,2lBAAqF,iFAErF,mDArCU,mDAAsB,gBAAtC,aAAuC,EAAvB,SAAsB,GAGtB,mDAAuB,iBAAvC,aAAwC,EAAxB,SAAuB,GA2BR,0BAAc,EAArC,aAA4D,EAArC,uCAAc,EAAC,oBAAqB,UAA3D,aAA4D,EAArC,UAAc,EAAC,UAAqB,GAKjD,4BAAiB,EAAC,wBAAc,EAAC,yBAAa,EAA1D,aAAqF,EAAzE,UAAiB,EAAC,UAAc,EAAC,UAAa,mDAnChE,+GAAuC,GAGvC,+GAAwC,GAatC,wtBAAM,GAIG,oBAAoB,SAAvB,aAAsC,EAAnC,UAAoB,GAKpB,oBAAkB,OAArB,aAAoC,EAAjC,UAAkB,GAKrB,ouBAA4D;2GAmB9E,0rBAAgG,IAC9F,ipBAAiC,IAC/B,ynBAAU,IAER,ipBAAiB,IACf,6oBAAgB,IACd,2iBAAuC,IAEzC,2pBAAmB,IACjB,2iBAAwC,IAG5C,wpBAAkB,IAChB,yrBAAiE,IAC/D,mpBAAiC,IAQ/B;;;;;;6wBAAM,IACJ,spBAA8B,IAC5B,kpBAA8B,IAC5B,8nBAAW,4EAAG,MACd,sJAAsC,KACtC,iJAA6B,8EAAC,MAEhC,kpBAA8B,IAC5B,8nBAAW,4EAAG,MACd,sJAAoC,KACpC,iJAA6B,8EAAC,MAEhC,mpBAA8B,IAC5B,8nBAAW,4EAAG,MACd;;;;;wBAA4D;MAAtB;;wBAAqB;MAA3D,suDAA4D,IAC5D,iJAA6B,mFAAC,MAGlC,gJAAyB,KACvB,kPAAqF,YAA1B;;wBAAyB;MAApF,2lBAAqF,iFAErF,mDArCU,mDAAsB,gBAAtC,aAAuC,EAAvB,SAAsB,GAGtB,mDAAuB,iBAAvC,aAAwC,EAAxB,SAAuB,GA2BR,0BAAc,EAArC,aAA4D,EAArC,uCAAc,EAAC,oBAAqB,UAA3D,aAA4D,EAArC,UAAc,EAAC,UAAqB,GAKjD,4BAAiB,EAAC,wBAAc,EAAC,yBAAa,EAA1D,aAAqF,EAAzE,UAAiB,EAAC,UAAc,EAAC,UAAa,mDAnChE,+GAAuC,GAGvC,+GAAwC,GAatC,wtBAAM,GAIG,oBAAoB,SAAvB,aAAsC,EAAnC,UAAoB,GAKpB,oBAAkB,OAArB,aAAoC,EAAjC,UAAkB,GAKrB,ouBAA4D;2GAmB9E,0rBAAkG,IAChG,ipBAAiC,IAC/B,ynBAAU,IACR,wJAAuC,KACvC,kpBAAiB,IACf,8oBAAgB,IACd,2iBAAuC,IAEzC,2pBAAmB,IACjB,2iBAAwC,IAE1C,mHAAG,sHAAyC,MAE9C,wpBAAkB,IAChB,yrBAAiE,IAC/D,mpBAAiC,IAQ/B;;;;;;6wBAAM,IACJ,spBAA8B,IAC5B,kpBAA8B,IAC5B,8nBAAW,6EAAI,MACf,sJAAkC,KAClC,iJAA6B,mFAAC,MAEhC,kpBAA8B,IAC5B,8nBAAW,6EAAI,MACf,sJAAkC,KAClC,iJAA6B,mFAAC,MAEhC,kpBAA8B,IAC5B,8nBAAW,6EAAI,MACf,sJAAkC,KAClC,iJAA6B,mFAAC,MAEhC,mpBAA8B,IAC5B,8nBAAW,iFAAQ,MACnB;;;;;wBAAsE;MAA3B;;wBAA0B;MAArE,suDAAsE,IACtE,iJAA6B,mFAAC,MAEhC,kpBAA8B,IAC5B,8nBAAW,kFAAS,MACpB,sJAA6C,KAC7C,iJAA6B,8EAAC,MAEhC,mpBAA8B,IAC5B,8nBAAW,4EAAG,MACd;;;;;wBAA4D;MAAtB;;wBAAqB;MAA3D,suDAA4D,IAC5D,iJAA6B,iFAAI,MAGrC,gJAAyB,KACvB,kPAAuF,YAA5B;;wBAA2B;MAAtF,2lBAAuF,iFAEvF,mDArDU,mDAAsB,gBAAtC,aAAuC,EAAvB,SAAsB,GAGtB,mDAAuB,iBAAvC,aAAwC,EAAxB,SAAuB,GAiCR,+BAAmB,EAA1C,aAAsE,EAA/C,4CAAmB,EAAC,oBAA0B,eAArE,aAAsE,EAA/C,UAAmB,EAAC,UAA0B,GAU9C,0BAAc,EAArC,aAA4D,EAArC,uCAAc,EAAC,oBAAqB,UAA3D,aAA4D,EAArC,UAAc,EAAC,UAAqB,GAKjD,4BAAiB,EAAC,wBAAc,EAAC,yBAAa,EAA1D,aAAuF,EAA3E,UAAiB,EAAC,UAAc,EAAC,UAAa,mDAnDhE,+GAAuC,GAGvC,+GAAwC,GActC,wtBAAM,GAIG,oBAAgB,KAAnB,aAAkC,EAA/B,UAAgB,GAKhB,oBAAgB,KAAnB,aAAkC,EAA/B,UAAgB,GAKhB,oBAAgB,KAAnB,aAAkC,EAA/B,UAAgB,GAKnB,ouBAAsE,GAKnE,oBAA2B,gBAA9B,aAA6C,EAA1C,UAA2B,GAK9B,ouBAA4D;2GAmB9E,0rBAAoG,IAClG,ipBAAiC,IAC/B,ynBAAU,IACR,2JAA0C,KAC1C,kpBAAiB,IACf,8oBAAgB,IACd,2iBAAuC,IAEzC,2pBAAmB,IACjB,2iBAAwC,IAE1C,mHAAG,6IAA2D,MAEhE,wpBAAkB,IAChB,yrBAAiE,IAC/D,mpBAAiC,IAQ/B;;;;;;6wBAAM,IACJ,spBAA8B,IAC5B,kpBAA8B,IAC5B,8nBAAW,6EAAI,MACf,sJAAkC,KAClC,iJAA6B,mFAAC,MAEhC,kpBAA8B,IAC5B,8nBAAW,6EAAI,MACf,sJAAkC,KAClC,iJAA6B,mFAAC,MAEhC,kpBAA8B,IAC5B,8nBAAW,6EAAI,MACf,sJAAkC,KAClC,iJAA6B,mFAAC,MAEhC,mpBAA8B,IAC5B,8nBAAW,mFAAU,MACrB;;;;;wBAAsE;MAA3B;;wBAA0B;MAArE,suDAAsE,IACtE,iJAA6B,mFAAC,MAEhC,kpBAA8B,IAC5B,8nBAAW,kFAAS,MACpB,sJAA6C,KAC7C,iJAA6B,8EAAC,MAEhC,mpBAA8B,IAC5B,8nBAAW,4EAAG,MACd;;;;;wBAA4D;MAAtB;;wBAAqB;MAA3D,suDAA4D,IAC5D,iJAA6B,iFAAI,MAGrC,gJAAyB,KACvB,kPAAyF,YAA9B;;wBAA6B;MAAxF,2lBAAyF,iFAEzF,mDArDU,mDAAsB,gBAAtC,aAAuC,EAAvB,SAAsB,GAGtB,mDAAuB,iBAAvC,aAAwC,EAAxB,SAAuB,GAiCR,+BAAmB,EAA1C,aAAsE,EAA/C,4CAAmB,EAAC,oBAA0B,eAArE,aAAsE,EAA/C,UAAmB,EAAC,UAA0B,GAU9C,0BAAc,EAArC,aAA4D,EAArC,uCAAc,EAAC,oBAAqB,UAA3D,aAA4D,EAArC,UAAc,EAAC,UAAqB,GAKjD,4BAAiB,EAAC,wBAAc,EAAC,yBAAa,EAA1D,aAAyF,EAA7E,UAAiB,EAAC,UAAc,EAAC,UAAa,mDAnDhE,+GAAuC,GAGvC,+GAAwC,GActC,wtBAAM,GAIG,oBAAgB,KAAnB,aAAkC,EAA/B,UAAgB,GAKhB,oBAAgB,KAAnB,aAAkC,EAA/B,UAAgB,GAKhB,oBAAgB,KAAnB,aAAkC,EAA/B,UAAgB,GAKnB,ouBAAsE,GAKnE,oBAA2B,gBAA9B,aAA6C,EAA1C,UAA2B,GAK9B,ouBAA4D;2GAmB9E,0rBAAiG,IAC/F,ipBAAiC,IAC/B,ynBAAU,IAER,ipBAAiB,IACf,6oBAAgB,IACd,2iBAAuC,IAEzC,2pBAAmB,IACjB,2iBAAwC,IAG5C,wpBAAkB,IAChB,yrBAAiE,IAC/D,mpBAAiC,IAQ/B;;;;;;6wBAAM,IACJ,spBAA8B,IAC5B,kpBAA8B,IAC5B,8nBAAW,iGAAmB,MAC9B,sJAAsC,KACtC,iJAA6B,8EAAC,MAEhC,kpBAA8B,IAC5B,8nBAAW,+FAAsB,MACjC,sJAAyC,KACzC,iJAA6B,8EAAC,MAEhC,kpBAA8B,IAC5B,8nBAAW,sFAAa,MACxB,sJAA0C,KAC1C,iJAA6B,iFAAI,MAGnC,mpBAA8B,IAC5B,8nBAAW,4EAAG,MACd;;;;;wBAA8D;MAAvB;;wBAAsB;MAA7D,suDAA8D,IAC9D,iJAA6B,oFAAO,MAGxC,gJAAyB,KACvB,kPAAsF,YAA3B;;wBAA0B;MAArF,2lBAAsF,iFAEtF,mDA3CU,mDAAsB,gBAAtC,aAAuC,EAAvB,SAAsB,GAGtB,mDAAuB,iBAAvC,aAAwC,EAAxB,SAAuB,GAiCR,2BAAe,EAAtC,aAA8D,EAAvC,wCAAe,EAAC,oBAAsB,WAA7D,aAA8D,EAAvC,UAAe,EAAC,UAAsB,GAKnD,4BAAiB,EAAC,wBAAc,EAAC,yBAAa,EAA1D,aAAsF,EAA1E,UAAiB,EAAC,UAAc,EAAC,UAAa,mDAzChE,+GAAuC,GAGvC,+GAAwC,GAatC,wtBAAM,GAIG,oBAAoB,SAAvB,aAAsC,EAAnC,UAAoB,GAKpB,oBAAuB,YAA1B,aAAyC,EAAtC,UAAuB,GAKvB,oBAAwB,aAA3B,aAA0C,EAAvC,UAAwB,GAM3B,ouBAA8D;2GAmBhF,0rBAA+F,IAC7F,ipBAAiC,IAC/B,ynBAAU,IAER,ipBAAiB,IACf,6oBAAgB,IACd,2iBAAuC,IAEzC,2pBAAmB,IACjB,2iBAAwC,IAG5C,wpBAAkB,IAChB,yrBAAiE,IAC/D,mpBAAiC,IAQ/B;;;;;;6wBAAM,IACJ,spBAA8B,IAC5B,kpBAA8B,IAC5B,8nBAAW,iFAAG,MACd,sJAAsC,KACtC,iJAA6B,8EAAC,MAGhC,kpBAA8B,IAC5B,8nBAAW,4EAAG,MACd,sJAAyC,KACzC,iJAA6B,8EAAC,MAEhC,kpBAA8B,IAC5B,8nBAAW,4EAAG,MACd,sJAA0C,KAC1C,iJAA6B,uFAAU,MAGzC,mpBAA8B,IAC5B,8nBAAW,4EAAG,MACd;;;;;wBAA8D;MAAvB;;wBAAsB;MAA7D,suDAA8D,IAC9D,iJAA6B,8EAAC,MAGlC,gJAAyB,KACvB,kPAAsF,YAA3B;;wBAA0B;MAArF,2lBAAsF,iFAEtF,mDA5CU,mDAAsB,gBAAtC,aAAuC,EAAvB,SAAsB,GAGtB,mDAAuB,iBAAvC,aAAwC,EAAxB,SAAuB,GAkCR,2BAAe,EAAtC,aAA8D,EAAvC,wCAAe,EAAC,oBAAsB,WAA7D,aAA8D,EAAvC,UAAe,EAAC,UAAsB,GAKnD,4BAAiB,EAAC,wBAAc,EAAC,yBAAa,EAA1D,aAAsF,EAA1E,UAAiB,EAAC,UAAc,EAAC,UAAa,mDA1ChE,+GAAuC,GAGvC,+GAAwC,GAatC,wtBAAM,GAIG,oBAAoB,SAAvB,aAAsC,EAAnC,UAAoB,GAMpB,oBAAuB,YAA1B,aAAyC,EAAtC,UAAuB,GAKvB,oBAAwB,aAA3B,aAA0C,EAAvC,UAAwB,GAM3B,ouBAA8D;2GAmB/E,0rBAAkG,IACjG,ipBAAiC,IAC/B,ynBAAU,IAER,ipBAAiB,IACf,6oBAAgB,IACd,2iBAAuC,IAEzC,2pBAAmB,IACjB,2iBAAwC,IAG5C,wpBAAkB,IAChB,yrBAAiE,IAC/D,mpBAAiC,IAQ/B;;;;;;6wBAAM,IACJ,spBAA8B,IAC5B,kpBAA8B,IAC5B,8nBAAW,oFAAW,MACtB,sJAAyC,KACzC,iJAA6B,8EAAC,MAGhC,kpBAA8B,IAC5B,8nBAAW,4EAAG,MACd,sJAA0C,KAC1C,iJAA6B,oFAAO,MAGtC,mpBAA8B,IAC5B,8nBAAW,4EAAG,MACd;;;;;wBAA4D;MAAtB;;wBAAqB;MAA3D,suDAA4D,IAC5D,iJAA6B,mFAAM,MAGvC,gJAAyB,KACvB,kPAAuF,YAA5B;;wBAA2B;MAAtF,2lBAAuF,iFAEvF,mDAvCU,mDAAsB,gBAAtC,aAAuC,EAAvB,SAAsB,GAGtB,mDAAuB,iBAAvC,aAAwC,EAAxB,SAAuB,GA6BR,0BAAc,EAArC,aAA4D,EAArC,uCAAc,EAAC,oBAAqB,UAA3D,aAA4D,EAArC,UAAc,EAAC,UAAqB,GAKjD,4BAAiB,EAAC,wBAAc,EAAC,yBAAa,EAA1D,aAAuF,EAA3E,UAAiB,EAAC,UAAc,EAAC,UAAa,mDArChE,+GAAuC,GAGvC,+GAAwC,GAatC,wtBAAM,GAIG,oBAAuB,YAA1B,aAAyC,EAAtC,UAAuB,GAMvB,oBAAwB,aAA3B,aAA0C,EAAvC,UAAwB,GAM3B,ouBAA4D;4LA3jBlF,ooBAAY,IACV,4qBAA6B,IAC3B,qpBAA0B,IACxB;;;k8BAAyD,IAE3D,8nBAAW,IACT,2iBAAuC,IAK7C,irBAAgD,IAC9C,6oBAA2B,IACzB,spBAAmB,IACjB,uvBACiC,IAC/B,gkBAA6C,GAA3B,mEAA0B,MAC1C,8IAA0B,KACxB,mkBAA2C,GAAzB,mEAAwB,MACxC,mrBAA0D,IAoBtE,quBAA8E,IAI5E,6YAAqG,IAuDrG,6YAAsG,IA4DtG,6YAAgG,IAuDhG,6YAAgG,IAuDhG,6YAAkG,IAuElG,6YAAoG,IAuEpG,6YAAiG,IA6DjG,6YAA+F,IA8D9F,6YAAkG,iDAphBxF,yBAAe,EAA5B,YAA6B,EAAhB,SAAe,GAEP,2CAAuC,EAAxD,YAAyD,EAAxC,uDAAuC,EAAxD,YAAyD,EAAxC,SAAuC,GAGxC,mDAAsB,gBAAtC,aAAuC,EAAvB,SAAsB,GAO/B,oBAAS,EAAlB,aAAmB,EAAV,SAAS,GACC,uBAAmB,EAClC,oDAA8B,yBADhC,aACiC,EADhB,SAAmB,EAClC,UAA8B,GACZ,sCAA0B,GAA5C,aAA6C,EAA3B,UAA0B,GAEtB,oCAAwB,GAA1C,aAA2C,EAAzB,UAAwB,GACJ,oDAAqB,gBAAzD,aAA0D,EAAtB,UAAqB,GAoBjB,oBAAyB,gBAAtC,uBAAY,EAAnD,aAA8E,EAA1B,UAAyB,EAAtC,UAAY,GAIgB,kFAAmC,GAApG,aAAqG,EAApC,UAAmC,GAuDnC,mFAAoC,GAArG,aAAsG,EAArC,UAAoC,GA4DpC,6EAA8B,GAA/F,aAAgG,EAA/B,UAA8B,GAuD9B,6EAA8B,GAA/F,aAAgG,EAA/B,UAA8B,GAuD9B,+EAAgC,GAAjG,aAAkG,EAAjC,UAAgC,GAuEhC,iFAAkC,GAAnG,aAAoG,EAAnC,UAAkC,GAuElC,8EAA+B,GAAhG,aAAiG,EAAhC,UAA+B,GA6D/B,4EAA6B,GAA9F,aAA+F,EAA9B,UAA6B,GA8D5B,+EAAgC,GAAjG,aAAkG,EAAjC,UAAgC,2BA/gBhG,+GAAuC,GAQvC,sTACiC,GAC/B,mHAA6C,GAEzC,mHAA2C,GACzC,4TAA0D","file":"electrical-details-electrical-details-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { ElectricalService } from '../electrical.service';\nimport { ElectricalDetailsPage } from './electrical-details.page';\nimport { ElectricalDetailsResolver } from './electrical-details.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ElectricalDetailsPage,\n    resolve: {\n      data: ElectricalDetailsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    ElectricalDetailsPage\n  ],\n  providers: [\n    ElectricalDetailsResolver,\n    ElectricalService\n  ]\n})\nexport class ElectricalDetailsPageModule {}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { ElectricalService } from '../electrical.service';\nimport { ElectricalDetailsModel } from './electrical-details.model';\n\n@Injectable()\nexport class ElectricalDetailsResolver implements Resolve<DataStore<ElectricalDetailsModel>> {\n\n  constructor(private electricalService: ElectricalService) {}\n\n  resolve(route: ActivatedRouteSnapshot): DataStore<ElectricalDetailsModel> {\n    const itemSlug = route.paramMap.get('productId');\n\n    const dataSource: Observable<ElectricalDetailsModel> = this.electricalService.getDetailsDataSource(itemSlug);\n    const dataStore: DataStore<ElectricalDetailsModel> = this.electricalService.getDetailsStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { Component, OnInit, AfterViewInit, ViewChild, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ToastController } from '@ionic/angular';\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { ElectricalDetailsModel } from './electrical-details.model';\nimport { IonSlides, MenuController } from '@ionic/angular';\nimport { analytics } from 'firebase';\nimport { compileDirectiveFromRender2 } from '@angular/compiler/src/render3/view/compiler';\nimport { AnyTxtRecord } from 'dns';\n\n\n@Component({\n  selector: 'app-electrical-details',\n  templateUrl: './electrical-details.page.html',\n  styleUrls: [\n    './styles/electrical-details.page.scss',\n    './styles/electrical-details.shell.scss'\n  ]\n\n})\nexport class ElectricalDetailsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  slidesOptions: any = {\n    zoom: {\n      toggle: false // Disable zooming to prevent weird double tap zomming on slide images\n    }\n  };\n\n\n  subscriptions: Subscription;\n  //Electrons\n  qCharge: any;\n  tTime: any;\n  iCurrent: any;\n\n  //Resistance\n  pResist: any;\n  lLength: any;\n  csArea: any;\n  rValue: any;\n\n  //Ohms\n  vVolts: any;\n  iCur: any;\n  resistR: any;\n\n  //Series & Parallel\n  r1: any;\n  r2: any;\n  r3: any;\n  seriesRtotal: any;\n  seriesVoltage: any;\n  seriesI: any;\n\n  //Force\n  mgFlux:any;\n  conLength:any;\n  conCurrent:any;\n  conForce:any;\n\n  //Static\n  staticEMF:any;\n  staticTime:any;\n  magFlux:any;\n\n  details: ElectricalDetailsModel;\n\n  @ViewChild(IonSlides, { static: true }) slides: IonSlides;\n\n  @HostBinding('class.first-slide-active') isFirstSlide = true;\n\n  @HostBinding('class.last-slide-active') isLastSlide = false;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.details && this.details.isShell) ? true : false;\n  }\n\n\n\n  constructor(public menu: MenuController, private route: ActivatedRoute, public toastController: ToastController) {\n\n    this.generateSides();\n\n  }\n\n  // Disable side menu for this page\n  ionViewDidEnter(): void {\n    this.menu.enable(true);\n  }\n\n  // Restore to default when leaving this page\n  ionViewDidLeave(): void {\n    this.menu.enable(true);\n  }\n\n  ngAfterViewInit(): void {\n    // ViewChild is set\n    this.slides.isBeginning().then(isBeginning => {\n      this.isFirstSlide = isBeginning;\n    });\n    this.slides.isEnd().then(isEnd => {\n      this.isLastSlide = isEnd;\n    });\n\n    // Subscribe to changes\n    this.slides.ionSlideWillChange.subscribe(changes => {\n      this.slides.isBeginning().then(isBeginning => {\n        this.isFirstSlide = isBeginning;\n      });\n      this.slides.isEnd().then(isEnd => {\n        this.isLastSlide = isEnd;\n      });\n    });\n  }\n\n  skipWalkthrough(): void {\n    // Skip to the last slide\n    this.slides.length().then(length => {\n      this.slides.slideTo(length);\n    });\n  }\n\n  generateSides(): void {\n\n    //Electrons\n    this.qCharge = Math.floor(Math.random() * 400) + 10;\n    var precision = 10; // 1 decimals\n    this.tTime = Math.floor(Math.random() * (10 * precision - 1 * precision) + 1 * precision) / (1 * precision);\n\n    //Resistance\n    this.pResist = \"0.0000000172\";\n    this.lLength = Math.floor(Math.random() * 400) + 10;\n    this.csArea = Math.floor(Math.random() * 10) + 1;\n\n    //Ohms\n    this.vVolts = Math.floor(Math.random() * 200) + 10;\n    this.iCur = Math.floor(Math.random() * 100) + 10;\n\n    //Series\n\n    this.r1 = Math.floor(Math.random() * 10) + 1;\n    this.r2 = Math.floor(Math.random() * 10) + 1;\n    this.r3 = Math.floor(Math.random() * 10) + 1;\n    this.seriesVoltage = Math.floor(Math.random() * 100) + 1;\n\n    //Force & EMF\n    var precision = 10; // 2 decimals\n    this.mgFlux = Math.floor(Math.random() * (0.1 * precision - 1 * precision) + 1 * precision) / (1*precision);\n    this.conLength = Math.floor(Math.random() * (0.1 * precision - 1 * precision) + 1 * precision) / (1*precision);\n    this.conCurrent = Math.floor(Math.random() * 100) + 10;\n\n    //Static\n    this.staticEMF = Math.floor(Math.random() * 400) + 10;\n    this.staticTime = Math.floor(Math.random() * 200) + 10;\n\n\n  }\n\n\n\n  ngOnInit(): void {\n\n\n\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n      .subscribe(\n        (resolvedRouteData: IResolvedRouteData<ElectricalDetailsModel>) => {\n          // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n          this.subscriptions = ResolverHelper.extractData<ElectricalDetailsModel>(resolvedRouteData.data, ElectricalDetailsModel)\n            .subscribe(\n              (state) => {\n                this.details = state;\n              },\n              (error) => { }\n            );\n        },\n        (error) => { }\n      );\n  }\n\n  async presentToastCorrect() {\n    const toast = await this.toastController.create({\n      header: 'Correct!',\n      message: 'Well Done.',\n      position: 'bottom',\n      buttons: [\n        {\n          text: 'Next',\n          role: 'cancel',\n          handler: () => {\n            this.generateSides();\n            this.iCurrent = \"\";\n            this.rValue = \"\";\n            this.resistR = \"\";\n            this.seriesRtotal = \"\";\n            this.seriesI = \"\";\n            this.conForce=\"\";\n            this.magFlux=\"\";\n          }\n        }\n      ]\n    });\n    toast.present();\n  }\n\n  async presentToastIncorrect() {\n    const toast = await this.toastController.create({\n      message: 'Try again!',\n      position: 'bottom',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  calculateElectrons(): void {\n\n\n    var currentRounded = Math.round(this.qCharge / this.tTime * 10) / 10;\n    console.trace(currentRounded);\n    if (this.iCurrent == currentRounded) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateResistance(): void {\n\n\n    var resistance = 0.0000000172 * this.lLength / this.csArea;\n    console.trace(resistance);\n    if (this.rValue == resistance) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateOhms(): void {\n\n\n    var resistance = this.vVolts / this.iCur;\n    resistance = Math.round(resistance * 10) / 10;\n    console.trace(resistance);\n    if (this.resistR == resistance) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateSeries(): void {\n\n\n    var resistancetotal = this.r1+this.r2+this.r3;\n    var current = this.seriesVoltage / resistancetotal;\n    current = Math.round(current * 10) / 10;\n    console.trace(current);\n    if (this.seriesI == current && this.seriesRtotal == resistancetotal) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n  calculateParallel(): void {\n\n\n    var resistancetotal = 1/this.r1+1/this.r2+1/this.r3;\n    resistancetotal = Math.round(resistancetotal * 100) / 100;\n    var current = this.seriesVoltage * resistancetotal;\n    current = Math.round(current * 10) / 10;\n    console.trace(resistancetotal);\n    console.trace(current);\n    if (this.seriesI == current && this.seriesRtotal == resistancetotal) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  // Calculates Force & EMF\n\n  calculateForce(): void {\n\n    var forceTotal = this.mgFlux*this.conLength*this.conCurrent;\n    forceTotal = Math.round(forceTotal * 10) / 10;\n    \n    if (forceTotal == this.conForce) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n\n  calculateStatic(): void {\n\n    var forceTotal = this.staticEMF*this.staticTime*0.1;\n    forceTotal = Math.round(forceTotal * 10) / 10;\n    \n    if (forceTotal == this.magFlux) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n\n\n\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories/electrical\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      <app-text-shell [data]=\"details?.name\"></app-text-shell>\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"electrical-details-content\">\n  <ion-row class=\"image-row\">\n    <ion-col size=\"12\">\n      <app-image-shell [display]=\"'cover'\" animation=\"spinner\" class=\"add-overlay showcase-image\"\n        [src]=\"details?.showcaseImage\">\n        <app-aspect-ratio [ratio]=\"{ w: 64, h: 40 }\">\n          <div class=\"icon-wrapper\">\n            <app-aspect-ratio [ratio]=\"{ w: 1, h: 1 }\">\n              <app-image-shell class=\"icon-image\" [src]=\"details?.icon\"></app-image-shell>\n            </app-aspect-ratio>\n          </div>\n        </app-aspect-ratio>\n      </app-image-shell>\n    </ion-col>\n  </ion-row>\n  <!-- <ion-row class=\"description-row\">\n    <ion-col size=\"9\">\n      <h3 class=\"details-name\">\n        <app-text-shell [data]=\"details?.name\"></app-text-shell>\n      </h3>\n      <p class=\"details-style\">\n        <app-text-shell [data]=\"details?.style\"></app-text-shell>\n      </p>\n    </ion-col>\n  </ion-row> -->\n\n\n\n  <ion-slides class=\"walkthrough-slides\" pager=\"true\" [options]=\"slidesOptions\">\n\n    <!-- Electrons Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Electrons'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <img src=\"/assets/images/electrons.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Q |(Charge) :</ion-label>\n                      <p [innerHTML]=\"qCharge\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">Coulombs</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>T (Time) :</ion-label>\n                      <p [innerHTML]=\"tTime\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">Seconds</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>I (Current) :</ion-label>\n                      <ion-input clear-input name=\"iCurrent\" [(ngModel)]=\"iCurrent\"></ion-input>\n                      <p style=\"margin-left: 5px;\">Amps</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateElectrons()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Resistance Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Resistance'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <img src=\"/assets/images/resistivity.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>p :</ion-label>\n                      <p [innerHTML]=\"pResist\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">µΩm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>L :</ion-label>\n                      <p [innerHTML]=\"lLength\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>A :</ion-label>\n                      <p [innerHTML]=\"csArea\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>R :</ion-label>\n                      <ion-input clear-input name=\"rValue\" [(ngModel)]=\"rValue\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateResistance()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Ohms Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Ohms'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/resistivity.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>V :</ion-label>\n                      <p [innerHTML]=\"vVolts\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">v</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>I :</ion-label>\n                      <p [innerHTML]=\"iCur\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">A</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>R :</ion-label>\n                      <ion-input clear-input name=\"resistR\" [(ngModel)]=\"resistR\"></ion-input>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateOhms()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Ohms Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Ohms'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/resistivity.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>V :</ion-label>\n                      <p [innerHTML]=\"vVolts\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">v</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>I :</ion-label>\n                      <p [innerHTML]=\"iCur\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">A</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>R :</ion-label>\n                      <ion-input clear-input name=\"resistR\" [(ngModel)]=\"resistR\"></ion-input>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateOhms()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Series Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Series'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <img src=\"/assets/images/series.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>The formula we will use is I = V / Rtotal</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n          <img\n            src=\"/assets/images/simple_rectangle.png\"\n            class=\"ion-padding\"\n          />\n        </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>R1 :</ion-label>\n                      <p [innerHTML]=\"r1\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>R2 :</ion-label>\n                      <p [innerHTML]=\"r2\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>R3 :</ion-label>\n                      <p [innerHTML]=\"r3\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Rtotal :</ion-label>\n                      <ion-input clear-input name=\"seriesRtotal\" [(ngModel)]=\"seriesRtotal\"></ion-input>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Voltage :</ion-label>\n                      <p [innerHTML]=\"seriesVoltage\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">v</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>I :</ion-label>\n                      <ion-input clear-input name=\"seriesI\" [(ngModel)]=\"seriesI\"></ion-input>\n                      <p style=\"margin-left: 5px;\">Amps</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSeries()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Parallel Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Parallel'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <img src=\"/assets/images/parrallel.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>The formula we will use is 1/Rtotal = 1/R1 + 1/R2 +1/R3 + …</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n          <img\n            src=\"/assets/images/simple_rectangle.png\"\n            class=\"ion-padding\"\n          />\n        </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>R1 :</ion-label>\n                      <p [innerHTML]=\"r1\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>R2 :</ion-label>\n                      <p [innerHTML]=\"r2\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>R3 :</ion-label>\n                      <p [innerHTML]=\"r3\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>1/Rtotal :</ion-label>\n                      <ion-input clear-input name=\"seriesRtotal\" [(ngModel)]=\"seriesRtotal\"></ion-input>\n                      <p style=\"margin-left: 5px;\">Ω</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Voltage :</ion-label>\n                      <p [innerHTML]=\"seriesVoltage\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">v</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>I :</ion-label>\n                      <ion-input clear-input name=\"seriesI\" [(ngModel)]=\"seriesI\"></ion-input>\n                      <p style=\"margin-left: 5px;\">Amps</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateParallel()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Force Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Force'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/force.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>β (Magnetic Flux) :</ion-label>\n                      <p [innerHTML]=\"mgFlux\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">T</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>L (Conductor Length) :</ion-label>\n                      <p [innerHTML]=\"conLength\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>I (Current) :</ion-label>\n                      <p [innerHTML]=\"conCurrent\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">Amps</p>\n                    </ion-item>\n\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>F :</ion-label>\n                      <ion-input clear-input name=\"conForce\" [(ngModel)]=\"conForce\"></ion-input>\n                      <p style=\"margin-left: 5px;\">Newtons</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateForce()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- EMF Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='EMF'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/force.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>β :</ion-label>\n                      <p [innerHTML]=\"mgFlux\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">T</p>\n\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>L :</ion-label>\n                      <p [innerHTML]=\"conLength\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>V :</ion-label>\n                      <p [innerHTML]=\"conCurrent\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m / second</p>\n                    </ion-item>\n\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>E :</ion-label>\n                      <ion-input clear-input name=\"conForce\" [(ngModel)]=\"conForce\"></ion-input>\n                      <p style=\"margin-left: 5px;\">v</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateForce()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n     <!-- Static Calculations -->\n\n     <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Static'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/force.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>E (e.m.f) :</ion-label>\n                      <p [innerHTML]=\"staticEMF\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">v</p>\n\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>t :</ion-label>\n                      <p [innerHTML]=\"staticTime\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">seconds</p>\n                    </ion-item>\n          \n                    <ion-item class=\"ion-padding\">\n                      <ion-label>E :</ion-label>\n                      <ion-input clear-input name=\"magFlux\" [(ngModel)]=\"magFlux\"></ion-input>\n                      <p style=\"margin-left: 5px;\">webers</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateStatic()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n\n\n  </ion-slides>\n\n</ion-content>"],"sourceRoot":"webpack:///"}