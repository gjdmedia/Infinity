{"version":3,"sources":["webpack:///src/app/components/show-hide-password/show-hide-password.component.html","webpack:///src/app/components/show-hide-password/show-hide-password.component.ts","webpack:///src/app/shell/data-store.ts","webpack:///src/app/showcase/custom-components/custom-components.module.ts","webpack:///src/app/showcase/custom-components/custom-components.page.html","webpack:///src/app/showcase/custom-components/custom-components.page.ts"],"names":["ShowHidePasswordComponent","show","input","type","ShellModel","isShell","DataStore","shellModel","networkDelay","settings","timeline","dataSourceObservable","dataSourceWithShellObservable","AppendShell","subscribe","dataValue","next","asObservable","dataObservable","delayObservable","pipe","delayValue","Object","assign","CustomComponentsModule","CustomComponentsPage","countdownDate","add","format"],"mappings":"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","file":"custom-components-custom-components-module-ngfactory-es5.js","sourcesContent":["<ng-content></ng-content>\n<a class=\"type-toggle\" (click)=\"toggleShow()\">\n\t<ion-icon class=\"show-option\" [hidden]=\"show\" name=\"eye-off-outline\"></ion-icon>\n\t<ion-icon class=\"hide-option\" [hidden]=\"!show\" name=\"eye-outline\"></ion-icon>\n  <!-- In case you want to use text instead of icons -->\n\t<!--\n  <span class=\"show-option\" [hidden]=\"show\">show</span>\n\t<span class=\"hide-option\" [hidden]=\"!show\">hide</span>\n  -->\n</a>\n","import { Component, ContentChild } from '@angular/core';\n\nimport { IonInput } from '@ionic/angular';\n\n@Component({\n  selector: 'app-show-hide-password',\n  templateUrl: './show-hide-password.component.html',\n  styleUrls: [\n    './show-hide-password.component.scss'\n  ]\n})\nexport class ShowHidePasswordComponent {\n  show = false;\n\n  @ContentChild(IonInput) input: IonInput;\n\n  constructor() {}\n\n  toggleShow() {\n    this.show = !this.show;\n    if (this.show) {\n      this.input.type = 'text';\n    } else {\n      this.input.type = 'password';\n    }\n  }\n}\n","import { Observable, of, combineLatest, ReplaySubject } from 'rxjs';\nimport { delay, map, startWith } from 'rxjs/operators';\n\nimport { AppShellConfig } from './config/app-shell.config';\n\nexport class ShellModel {\n  isShell = false;\n}\n\nexport class DataStore<T> {\n  // We wait on purpose 2 secs on local environment when fetching from json to simulate the backend roundtrip.\n  // However, in production you should set this delay to 0 in the assets/config/app-shell.config.prod.json file.\n  // tslint:disable-next-line:max-line-length\n  private networkDelay = (AppShellConfig.settings && AppShellConfig.settings.networkDelay) ? AppShellConfig.settings.networkDelay : 0;\n\n  private timeline: ReplaySubject<T & ShellModel> = new ReplaySubject(1);\n\n  constructor(private shellModel: T) { }\n\n  // Static function with generics\n  // (ref: https://stackoverflow.com/a/24293088/1116959)\n  // Append a shell (T & ShellModel) to every value (T) emmited to the timeline\n  public static AppendShell<T>(dataObservable: Observable<T>, shellModel: T, networkDelay = 400): Observable<T & ShellModel> {\n    const delayObservable = of(true).pipe(\n      delay(networkDelay)\n    );\n\n    // Assign shell flag accordingly\n    // (ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n    return combineLatest([\n      delayObservable,\n      dataObservable\n    ]).pipe(\n      // Dismiss unnecessary delayValue\n      map(([delayValue, dataValue]: [boolean, T]): (T & ShellModel) => Object.assign(dataValue, {isShell: false})),\n      // Set the shell model as the initial value\n      startWith(Object.assign(shellModel, {isShell: true}))\n    );\n  }\n\n  load(dataSourceObservable: Observable<T>): void {\n    const dataSourceWithShellObservable = DataStore.AppendShell(dataSourceObservable, this.shellModel, this.networkDelay);\n\n    dataSourceWithShellObservable\n    .subscribe((dataValue: T & ShellModel) => {\n      this.timeline.next(dataValue);\n    });\n  }\n\n  public get state(): Observable<T & ShellModel> {\n    return this.timeline.asObservable();\n  }\n}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { CustomComponentsPage } from './custom-components.page';\nimport { ShowcaseService } from '../showcase.service';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    ComponentsModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: CustomComponentsPage\n      }\n    ])\n  ],\n  declarations: [\n    CustomComponentsPage\n  ],\n  providers: [\n    ShowcaseService\n  ]\n})\nexport class CustomComponentsModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>\n      Custom Components\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <ion-item-divider sticky=\"true\">\n    <ion-label>Checkbox Wrapper</ion-label>\n  </ion-item-divider>\n  <section class=\"showcase-section\">\n    <p>\n      This is a super straightforward component whose purpose is to wrap an <code>&lt;ion-checkbox&gt;</code> element to enable accessing the checkbox state from its parents.\n    </p>\n<pre>\n&lt;app-checkbox-wrapper class=\"custom-checkbox\"&gt;\n  &lt;ion-checkbox checked=true&gt;&lt;/ion-checkbox&gt;\n  &lt;ion-label&gt;Sample Checkbox&lt;/ion-label&gt;\n&lt;/app-checkbox-wrapper&gt;\n</pre>\n<pre>\napp-checkbox-wrapper.custom-checkbox &#123;\n  background: #CCC;\n  color: #000;\n\n  &.checkbox-checked &#123;\n    background: #00AFFF;\n    color: #FFF;\n  &#125;\n&#125;\n</pre>\n    <app-checkbox-wrapper class=\"custom-checkbox\">\n      <ion-checkbox checked=true></ion-checkbox>\n      <ion-label>Sample Checkbox</ion-label>\n    </app-checkbox-wrapper>\n  </section>\n\n  <ion-item-divider sticky=\"true\">\n    <ion-label>Show/Hide Password</ion-label>\n  </ion-item-divider>\n  <section class=\"showcase-section\">\n    <p>\n      By wrapping an <code>&lt;ion-input&gt;</code> element with this component, you can enhance the UX and add a show/hide password functionality.\n    </p>\n<pre>\n&lt;app-show-hide-password&gt;\n  &lt;ion-input type=\"password\" placeholder=\"Try setting a password\" value=\"It's a secret!\"&gt;&lt;/ion-input&gt;\n&lt;/app-show-hide-password&gt;\n</pre>\n    <app-show-hide-password>\n      <ion-input type=\"password\" placeholder=\"Try setting a password\" value=\"It's a secret!\"></ion-input>\n    </app-show-hide-password>\n  </section>\n\n  <ion-item-divider sticky=\"true\">\n    <ion-label>Countdown Timer</ion-label>\n  </ion-item-divider>\n  <section class=\"showcase-section\">\n    <p>\n      This components shows the remaining time (in days, hours, minutes or seconds) to a given date.\n    </p>\n    <p>\n      A few examples on how to use this component:\n    </p>\n    <h5>From days to seconds</h5>\n<pre>\n&lt;app-countdown-timer <b>[units]=\"&#123;from: 'day', to: 'second'&#125;\"</b> [end]=\"countdownDate\"&gt;&lt;/app-countdown-timer&gt;\n</pre>\n    <app-countdown-timer [end]=\"countdownDate\" [units]=\"{from: 'day', to: 'second'}\"></app-countdown-timer>\n    <h5>From days to minutes</h5>\n<pre>\n&lt;app-countdown-timer <b>[units]=\"&#123;from: 'day', to: 'minute'&#125;\"</b> [end]=\"countdownDate\"&gt;&lt;/app-countdown-timer&gt;\n</pre>\n    <app-countdown-timer [end]=\"countdownDate\" [units]=\"{from: 'day', to: 'minute'}\"></app-countdown-timer>\n    <h5>From hours to seconds</h5>\n<pre>\n&lt;app-countdown-timer <b>[units]=\"&#123;from: 'hour', to: 'second'&#125;\"</b> [end]=\"countdownDate\"&gt;&lt;/app-countdown-timer&gt;\n</pre>\n    <app-countdown-timer [end]=\"countdownDate\" [units]=\"{from: 'hour', to: 'second'}\"></app-countdown-timer>\n    <h5>From hours to minutes</h5>\n<pre>\n&lt;app-countdown-timer <b>[units]=\"&#123;from: 'hour', to: 'minute'&#125;\"</b> [end]=\"countdownDate\"&gt;&lt;/app-countdown-timer&gt;\n</pre>\n    <app-countdown-timer [end]=\"countdownDate\" [units]=\"{from: 'hour', to: 'minute'}\"></app-countdown-timer>\n    <h5>From minutes to seconds</h5>\n<pre>\n&lt;app-countdown-timer <b>[units]=\"&#123;from: 'minute', to: 'second'&#125;\"</b> [end]=\"countdownDate\"&gt;&lt;/app-countdown-timer&gt;\n</pre>\n    <app-countdown-timer [end]=\"countdownDate\" [units]=\"{from: 'minute', to: 'second'}\"></app-countdown-timer>\n    <h5>Just days</h5>\n<pre>\n&lt;app-countdown-timer <b>[units]=\"&#123;from: 'day', to: 'day'&#125;\"</b> [end]=\"countdownDate\"&gt;&lt;/app-countdown-timer&gt;\n</pre>\n    <app-countdown-timer [end]=\"countdownDate\" [units]=\"{from: 'day', to: 'day'}\"></app-countdown-timer>\n    <h5>Just hours</h5>\n<pre>\n&lt;app-countdown-timer <b>[units]=\"&#123;from: 'hour', to: 'hour'&#125;\"</b> [end]=\"countdownDate\"&gt;&lt;/app-countdown-timer&gt;\n</pre>\n    <app-countdown-timer [end]=\"countdownDate\" [units]=\"{from: 'hour', to: 'hour'}\"></app-countdown-timer>\n    <h5>Just minutes</h5>\n<pre>\n&lt;app-countdown-timer <b>[units]=\"&#123;from: 'minute', to: 'minute'&#125;\"</b> [end]=\"countdownDate\"&gt;&lt;/app-countdown-timer&gt;\n</pre>\n    <app-countdown-timer [end]=\"countdownDate\" [units]=\"{from: 'minute', to: 'minute'}\"></app-countdown-timer>\n    <h5>Just seconds</h5>\n<pre>\n&lt;app-countdown-timer <b>[units]=\"&#123;from: 'second', to: 'second'&#125;\"</b> [end]=\"countdownDate\"&gt;&lt;/app-countdown-timer&gt;\n</pre>\n    <app-countdown-timer [end]=\"countdownDate\" [units]=\"{from: 'second', to: 'second'}\"></app-countdown-timer>\n  </section>\n  <section class=\"showcase-section\">\n    <h2>Styling</h2>\n    <p>\n      You can change different properties to adjust the look and feel of the component.\n    </p>\n    <h5>Fill</h5>\n<pre>\napp-countdown-timer &#123;\n  --countdown-fill-border: none;\n  --countdown-fill-border-radius: 10px;\n  --countdown-fill-background: #FFFFFF;\n  --countdown-fill-shadow: 0px 0px 5px 0px rgba(0,0,0, 0.2);\n&#125;\n</pre>\n    <app-countdown-timer style=\"\n      background-color: transparent;\n      --countdown-padding: 10px;\n      --countdown-fill-border: none;\n      --countdown-fill-border-radius: 10px;\n      --countdown-fill-background: #FFFFFF;\n      --countdown-fill-shadow: 0px 0px 5px 0px rgba(0,0,0, 0.2);\n    \" fill=\"countdown\" [end]=\"countdownDate\" [units]=\"{from: 'hour', to: 'second'}\"></app-countdown-timer>\n    <h5>Color</h5>\n<pre>\napp-countdown-timer &#123;\n  --countdown-fill-background: #000000;\n  --countdown-value-color: #FFFFFF;\n  --countdown-unit-color: #F2F2F2;\n&#125;\n</pre>\n    <app-countdown-timer style=\"\n      --countdown-fill-background: #000000;\n      --countdown-padding: 10px;\n      --countdown-value-color: #FFFFFF;\n      --countdown-unit-color: #F2F2F2;\n    \" fill=\"countdown\" [end]=\"countdownDate\" [units]=\"{from: 'hour', to: 'second'}\"></app-countdown-timer>\n    <h5>Margins & Paddings</h5>\n<pre>\napp-countdown-timer &#123;\n  --countdown-margin: 0px;\n  --countdown-padding: 0px;\n  --countdown-time-margin: 0px;\n  --countdown-time-padding: 0px;\n  --countdown-inner-time-margin: 2px;\n  --countdown-inner-time-padding: 0px;\n&#125;\n</pre>\n    <h5>Time unit positioning</h5>\n    <p>\n      Time units to the right (default)\n    </p>\n<pre>\napp-countdown-timer &#123;\n  --countdown-time-flex-direction: row-reverse;\n&#125;\n</pre>\n    <app-countdown-timer style=\"\n      --countdown-time-flex-direction: row-reverse;\n    \" [end]=\"countdownDate\" [units]=\"{from: 'hour', to: 'hour'}\"></app-countdown-timer>\n    <p>\n      Time units to the left\n    </p>\n<pre>\napp-countdown-timer &#123;\n  --countdown-time-flex-direction: row;\n&#125;\n</pre>\n    <app-countdown-timer style=\"\n      --countdown-time-flex-direction: row;\n    \" [end]=\"countdownDate\" [units]=\"{from: 'hour', to: 'hour'}\"></app-countdown-timer>\n    <p>\n      Time units above\n    </p>\n<pre>\napp-countdown-timer &#123;\n  --countdown-time-flex-direction: column;\n&#125;\n</pre>\n    <app-countdown-timer style=\"\n      --countdown-time-flex-direction: column;\n    \" [end]=\"countdownDate\" [units]=\"{from: 'hour', to: 'hour'}\"></app-countdown-timer>\n    <p>\n      Time units below\n    </p>\n<pre>\napp-countdown-timer &#123;\n  --countdown-time-flex-direction: column-reverse;\n&#125;\n</pre>\n    <app-countdown-timer style=\"\n      --countdown-time-flex-direction: column-reverse;\n    \" [end]=\"countdownDate\" [units]=\"{from: 'hour', to: 'hour'}\"></app-countdown-timer>\n    <p>\n      This component can be configured with different fill modes (by default, no fill will be applied).\n    </p>\n    <h5>Fill: Entire Countdown</h5>\n<pre>\n&lt;app-countdown-timer <b>fill=\"countdown\"</b> [end]=\"countdownDate\" [units]=\"&#123;from: 'hour', to: 'second'&#125;\"&gt;&lt;/app-countdown-timer&gt;\n</pre>\n    <app-countdown-timer style=\"\n    background-color: transparent;\n    --countdown-padding: 10px;\n    --countdown-fill-border: none;\n    --countdown-fill-border-radius: 10px;\n    --countdown-fill-background: #FFFFFF;\n    --countdown-fill-shadow: 0px 0px 5px 0px rgba(0,0,0, 0.2);\n    \" fill=\"countdown\" [end]=\"countdownDate\" [units]=\"{from: 'hour', to: 'second'}\"></app-countdown-timer>\n    <h5>Fill: Time wrapper</h5>\n<pre>\n&lt;app-countdown-timer <b>fill=\"time\"</b> [end]=\"countdownDate\" [units]=\"&#123;from: 'hour', to: 'second'&#125;\"&gt;&lt;/app-countdown-timer&gt;\n</pre>\n    <app-countdown-timer style=\"\n    background-color: transparent;\n    --countdown-padding: 10px;\n    --countdown-time-margin: 0px 10px;\n    --countdown-time-padding: 10px 0px;\n    --countdown-fill-border: none;\n    --countdown-fill-border-radius: 10px;\n    --countdown-fill-background: #FFFFFF;\n    --countdown-fill-shadow: 0px 0px 5px 0px rgba(0,0,0, 0.2);\n    \" fill=\"time\" [end]=\"countdownDate\" [units]=\"{from: 'hour', to: 'second'}\"></app-countdown-timer>\n    <h5>Fill: Inner Time Value</h5>\n<pre>\n&lt;app-countdown-timer <b>fill=\"inner-time\"</b> [end]=\"countdownDate\" [units]=\"&#123;from: 'hour', to: 'second'&#125;\"&gt;&lt;/app-countdown-timer&gt;\n</pre>\n    <app-countdown-timer style=\"\n    background-color: transparent;\n    --countdown-padding: 10px;\n    --countdown-inner-time-margin: 5px;\n    --countdown-inner-time-padding: 10px;\n    --countdown-fill-border: none;\n    --countdown-fill-border-radius: 10px;\n    --countdown-fill-background: #FFFFFF;\n    --countdown-fill-shadow: 0px 0px 5px 0px rgba(0,0,0, 0.2);\n    \" fill=\"inner-time\" [end]=\"countdownDate\" [units]=\"{from: 'hour', to: 'second'}\"></app-countdown-timer>\n  </section>\n</ion-content>\n","import { Component } from '@angular/core';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n  selector: 'app-showcase-custom-components',\n  templateUrl: './custom-components.page.html',\n  styleUrls: ['./custom-components.page.scss']\n})\nexport class CustomComponentsPage {\n  // Relative date (better to showcase UI micro-interactions)\n  countdownDate: string = dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string;\n  // Instead of hardcoded one\n  // countdownDate = '12/01/2018';\n\n  constructor() { }\n}\n"]}