{"version":3,"sources":["webpack:///src/app/brick/details/brick-details.module.ts","webpack:///src/app/brick/details/brick-details.page.ts","webpack:///src/app/brick/details/brick-details.page.html","webpack:///src/app/brick/details/brick-details.resolver.ts"],"names":["routes","path","component","resolve","data","BrickDetailsPageModule","BrickDetailsPage","menu","route","toastController","slidesOptions","zoom","toggle","isFirstSlide","isLastSlide","generateSides","enable","slides","isBeginning","then","isEnd","ionSlideWillChange","subscribe","changes","length","slideTo","side1","Math","floor","random","side2","console","trace","side1a","side2a","round","doorHeight","doorWidth","brickWallArea","brickCoverage","bricksRequired","precision","costPerBrick","side2Tri","side1Tri","noTiles","tilesPerPack","pricePack","cement","sand","cement1","sand1","totalMix","raftDepth","raftHeight","raftWidth","brushesCost","maskingCost","rollersCost","caulkCost","dropCost","discount","brickArea","bricksDay","bricksSquareM","paymentBricks","subscriptions","resolvedRouteData","extractData","state","details","error","create","header","message","position","buttons","text","role","handler","side3","side4","totalArea","wallArea","doorArea","subtractDoorArea","totalBricks","totalTri","numberPacks","totalCostTiles","totalCostTilesVAT","vatTiles","sandRequired","cementRequired","sandRequired1","cementRequired1","sandMix","cementMix","convertedDepth","requiredConcrete","bricksToLay","numberDays","totalCostBricks","toast","present","duration","presentToastCorrect","presentToastIncorrect","wall","door","cost","totalCostBrick","packs","ceil","VAT","totalIncVat","part","conversion","concrete","subTotal","discAmount","totalCost","bricksToBeLayed","daysNeeded","moneyEarned","unsubscribe","isShell","BrickDetailsResolver","brickService","itemSlug","paramMap","get","dataSource","getDetailsDataSource","dataStore","getDetailsStore"],"mappings":"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","file":"brick-details-brick-details-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { BrickService } from '../brick.service';\nimport { BrickDetailsPage } from './brick-details.page';\nimport { BrickDetailsResolver } from './brick-details.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BrickDetailsPage,\n    resolve: {\n      data: BrickDetailsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    BrickDetailsPage\n  ],\n  providers: [\n    BrickDetailsResolver,\n    BrickService\n  ]\n})\nexport class BrickDetailsPageModule {}\n","import { Component, OnInit, AfterViewInit, ViewChild, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ToastController } from '@ionic/angular';\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { BrickDetailsModel } from './brick-details.model';\nimport { IonSlides, MenuController } from '@ionic/angular';\nimport { analytics } from 'firebase';\nimport { compileDirectiveFromRender2 } from '@angular/compiler/src/render3/view/compiler';\n\n\n@Component({\n  selector: 'app-brick-details',\n  templateUrl: './brick-details.page.html',\n  styleUrls: [\n    './styles/brick-details.page.scss',\n    './styles/brick-details.shell.scss'\n  ]\n\n})\nexport class BrickDetailsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  slidesOptions: any = {\n    zoom: {\n      toggle: false // Disable zooming to prevent weird double tap zomming on slide images\n    }\n  };\n\n\n  subscriptions: Subscription;\n  side1: any;\n  side2: any;\n  side3: any;\n  side4: any;\n  side1a: any;\n  side2a: any;\n  doorWidth: any;\n  doorHeight: any;\n  wallArea: any;\n  doorArea: any;\n  totalArea: any;\n  subtractDoorArea: any;\n  brickWallArea: any;\n  brickCoverage: any;\n  totalBricks: any;\n  bricksRequired: any;\n  costPerBrick: any;\n  totalCostBrick: any;\n  //Gable\n  side1Tri: any;\n  side2Tri: any;\n  totalTri: any;\n\n  //Wall Tiles\n  noTiles: any;\n  tilesPerPack: any;\n  pricePack: any;\n  numberPacks: any;\n  totalCostTiles: any;\n  vatTiles: any;\n  totalCostTilesVAT: any;\n\n  // Cement\n\n  cement: any;\n  cementRequired: any;\n  sand: any;\n  sandRequired: any;\n  cement1: any;\n  cementRequired1: any;\n  sand1: any;\n  sandRequired1: any;\n  totalMix: any;\n  sandMix: any;\n  cementMix: any;\n\n  //Raft\n  raftWidth: any;\n  raftHeight: any;\n  raftDepth: any;\n  convertedDepth: any;\n  requiredConcrete: any;  // Discount\n  brushesCost: any;\n  rollersCost: any;\n  maskingCost: any;\n  caulkCost: any;\n  dropCost: any;\n  discount: any;\n  totalXDiscount: any;\n  discountTotal: any;\n  totalCost: any;\n\n  //Build\n  brickArea: any;\n  bricksDay: any;\n  bricksSquareM: any;\n  paymentBricks: any;\n  bricksToLay: any;\n  numberDays: any;\n  totalCostBricks: any;\n\n  details: BrickDetailsModel;\n\n  @ViewChild(IonSlides, { static: true }) slides: IonSlides;\n\n  @HostBinding('class.first-slide-active') isFirstSlide = true;\n\n  @HostBinding('class.last-slide-active') isLastSlide = false;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.details && this.details.isShell) ? true : false;\n  }\n\n\n\n  constructor(public menu: MenuController, private route: ActivatedRoute, public toastController: ToastController) {\n\n    this.generateSides();\n\n  }\n\n  // Disable side menu for this page\n  ionViewDidEnter(): void {\n    this.menu.enable(true);\n  }\n\n  // Restore to default when leaving this page\n  ionViewDidLeave(): void {\n    this.menu.enable(true);\n  }\n\n  ngAfterViewInit(): void {\n    // ViewChild is set\n    this.slides.isBeginning().then(isBeginning => {\n      this.isFirstSlide = isBeginning;\n    });\n    this.slides.isEnd().then(isEnd => {\n      this.isLastSlide = isEnd;\n    });\n\n    // Subscribe to changes\n    this.slides.ionSlideWillChange.subscribe(changes => {\n      this.slides.isBeginning().then(isBeginning => {\n        this.isFirstSlide = isBeginning;\n      });\n      this.slides.isEnd().then(isEnd => {\n        this.isLastSlide = isEnd;\n      });\n    });\n  }\n\n  skipWalkthrough(): void {\n    // Skip to the last slide\n    this.slides.length().then(length => {\n      this.slides.slideTo(length);\n    });\n  }\n\n  generateSides(): void {\n\n    //Wall\n    this.side1 = Math.floor(Math.random() * 30) + 5;\n    this.side2 = this.side1 / 2;\n    console.trace('Random: ', this.side1);\n    this.side1a = Math.floor(Math.random() * 30) + 5;\n    this.side2a = this.side1a * 0.384615385;\n    this.side2a = Math.round(this.side2a * 10) / 10;\n    this.doorHeight = this.side2 * 0.57;\n    this.doorHeight = Math.round(this.doorHeight * 10) / 10;\n    this.doorWidth = this.doorHeight * 0.615;\n    this.doorWidth = Math.round(this.doorWidth * 10) / 10;\n\n    // Bricks\n    this.brickWallArea = Math.floor(Math.random() * 150) + 100;\n    this.brickCoverage = Math.floor(Math.random() * 40) + 10;\n\n    //Cost\n    this.bricksRequired = Math.floor(Math.random() * 3500) + 1000;\n    var precision = 100; // 2 decimals\n    this.costPerBrick = Math.floor(Math.random() * (0.5 * precision - 1 * precision) + 1 * precision) / (1 * precision);\n\n    //Gable\n    this.side2Tri = Math.floor(Math.random() * 30) + 5;\n    this.side1Tri = this.side2Tri * 0.7;\n    this.side1Tri = Math.round(this.side1Tri);\n\n    //Wall Tiles\n    this.noTiles = Math.floor(Math.random() * 350) + 100;\n    this.tilesPerPack = Math.floor(Math.random() * 20) + 10;\n    this.pricePack = Math.floor(Math.random() * (25.99 * precision - 1.00 * precision) + 1 * precision) / (1 * precision);\n\n    //Cement\n    this.cement = Math.floor(Math.random() * 100) + 10;\n    this.sand = this.cement * 5;\n    this.cement1 = Math.floor(Math.random() * 100) + 10;\n    this.sand1 = this.cement1 * 5;\n    this.totalMix = Math.floor(Math.random() * 150) + 10;\n\n    //Raft\n    this.raftDepth = Math.floor(Math.random() * 300) + 100;;\n    this.raftHeight = Math.floor(Math.random() * 40) + 10;\n    this.raftWidth = Math.round(this.raftHeight * 0.7);\n\n    // Discount\n    this.brushesCost = Math.floor(Math.random() * 20) + 10;\n    this.maskingCost = Math.floor(Math.random() * 10) + 1;\n    this.rollersCost = Math.floor(Math.random() * 20) + 1;\n    this.caulkCost = Math.floor(Math.random() * 15) + 2;\n    this.dropCost = Math.floor(Math.random() * 100) + 10;\n    this.discount = Math.floor(Math.random() * 20) + 5;\n\n    // Build\n    this.brickArea = Math.floor(Math.random() * 150) + 50;\n    this.bricksDay = Math.floor(Math.random() * 400) + 200;\n    this.bricksSquareM = 60;\n    this.paymentBricks = Math.floor(Math.random() * 600) + 500;\n\n  }\n\n\n\n  ngOnInit(): void {\n\n\n\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n      .subscribe(\n        (resolvedRouteData: IResolvedRouteData<BrickDetailsModel>) => {\n          // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n          this.subscriptions = ResolverHelper.extractData<BrickDetailsModel>(resolvedRouteData.data, BrickDetailsModel)\n            .subscribe(\n              (state) => {\n                this.details = state\n              },\n              (error) => { }\n            );\n        },\n        (error) => { }\n      );\n  }\n\n  async presentToastCorrect() {\n    const toast = await this.toastController.create({\n      header: 'Correct!',\n      message: 'Well Done.',\n      position: 'bottom',\n      buttons: [\n        {\n          text: 'Next',\n          role: 'cancel',\n          handler: () => {\n            this.generateSides();\n            this.side3 = \"\";\n            this.side4 = \"\";\n            this.totalArea = \"\";\n            this.wallArea = \"\";\n            this.doorArea = \"\";\n            this.subtractDoorArea = \"\";\n            this.totalBricks = \"\";\n            this.totalTri = \"\";\n            this.numberPacks = \"\";\n            this.totalCostTiles = \"\";\n            this.totalCostTilesVAT = \"\";\n            this.vatTiles = \"\";\n            this.sandRequired = \"\";\n            this.cementRequired = \"\";\n            this.sandRequired1 = \"\";\n            this.cementRequired1 = \"\";\n            this.sandMix = \"\";\n            this.cementMix = \"\";\n            this.convertedDepth = \"\";\n            this.requiredConcrete = \"\";\n            this.bricksToLay = \"\";\n            this.numberDays = \"\";\n            this.totalCostBricks = \"\";\n          }\n        }\n      ]\n    });\n    toast.present();\n  }\n\n  async presentToastIncorrect() {\n    const toast = await this.toastController.create({\n      message: 'Try again!',\n      position: 'bottom',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  //Wall\n\n  calculateSimpleArea(): void {\n\n\n\n    if (this.totalArea == this.side1 * this.side2) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateDoorRemoved(): void {\n\n    var wall = this.side1a * this.side2a;\n    var door = this.doorWidth * this.doorHeight;\n\n\n    console.trace('Wall Area: ' + wall + 'Door Area :' + door)\n\n    if (this.subtractDoorArea == wall - door) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateBricks(): void {\n\n    var wall = this.brickWallArea * this.brickCoverage;\n    wall = Math.round(wall * 10) / 10;\n\n    if (this.totalBricks == wall) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateSimpleCost(): void {\n\n    var cost = this.bricksRequired * this.costPerBrick;\n    cost = Math.round(cost * 100) / 100;\n\n    if (this.totalCostBrick == cost) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateSimpleTri(): void {\n\n    if (this.totalTri == (this.side2Tri / 2) * this.side1Tri) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateTiles(): void {\n\n    var packs = Math.ceil(this.noTiles / this.tilesPerPack)\n\n\n    if (this.totalCostTiles == this.pricePack * packs && packs == this.numberPacks) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n  calculateTilesVAT(): void {\n\n    var packs = Math.ceil(this.noTiles / this.tilesPerPack)\n    var cost = Math.round((packs * this.pricePack) * 100) / 100;\n    var VAT = Math.round((cost * 0.2) * 100) / 100;\n    var totalIncVat = cost + VAT;\n    totalIncVat = Math.round(totalIncVat * 100) / 100;\n    console.trace('Packs: ' + packs + ' xVat :' + cost + ' VAT ' + VAT + ' Total: ' + totalIncVat);\n\n\n    if (this.totalCostTilesVAT == totalIncVat) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n\n  calculateSand(): void {\n\n\n\n    if (this.sand == this.sandRequired) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n  calculateCement(): void {\n\n\n\n    if (this.cement1 == this.cementRequired1) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n  calculateMix(): void {\n\n    var part = this.totalMix / 6;\n\n\n\n    if (this.cementMix == part && this.sandMix == (part * 5)) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateRaft(): void {\n\n    var conversion = this.raftDepth / 1000;\n    var concrete = this.raftDepth * this.raftHeight * this.raftWidth / 1000;\n\n    console.trace(concrete);\n\n    if (this.convertedDepth == conversion && this.requiredConcrete == concrete) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateDiscount(): void {\n\n\n    var subTotal = this.brushesCost + this.rollersCost + this.maskingCost + this.caulkCost + this.dropCost;\n    var discAmount = Math.round(subTotal * (this.discount / 100) * 100) / 100;\n\n\n    console.trace(\"Subtotal = \" + subTotal + \"Discount = \" + discAmount)\n\n    if (this.totalCost == subTotal - discAmount) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateBuild(): void {\n\n\n    var bricksToBeLayed = this.brickArea * this.bricksSquareM;\n    var daysNeeded = Math.ceil(bricksToBeLayed / this.bricksDay);\n    var moneyEarned = bricksToBeLayed/1000 * this.paymentBricks;\n    moneyEarned = Math.ceil(moneyEarned * 100) / 100;\n    console.trace(\"Bricks to Lay = \" + bricksToBeLayed + \"Days = \" + daysNeeded + \"Money = \" + moneyEarned)\n\n    if (this.bricksToLay == bricksToBeLayed && this.numberDays == daysNeeded && this.totalCostBricks == moneyEarned) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories/brick\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      <app-text-shell [data]=\"details?.name\"></app-text-shell>\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"brick-details-content\">\n  <ion-row class=\"image-row\">\n    <ion-col size=\"12\">\n      <app-image-shell [display]=\"'cover'\" animation=\"spinner\" class=\"add-overlay showcase-image\"\n        [src]=\"details?.showcaseImage\">\n        <app-aspect-ratio [ratio]=\"{ w: 64, h: 40 }\">\n          <div class=\"icon-wrapper\">\n            <app-aspect-ratio [ratio]=\"{ w: 10, h: 10 }\">\n              <app-image-shell class=\"icon-image\" [src]=\"details?.icon\"></app-image-shell>\n            </app-aspect-ratio>\n          </div>\n        </app-aspect-ratio>\n      </app-image-shell>\n    </ion-col>\n  </ion-row>\n  <!-- <ion-row class=\"description-row\">\n    <ion-col size=\"9\">\n      <h3 class=\"details-name\">\n        <app-text-shell [data]=\"details?.name\"></app-text-shell>\n      </h3>\n      <p class=\"details-style\">\n        <app-text-shell [data]=\"details?.style\"></app-text-shell>\n      </p>\n    </ion-col>\n  </ion-row> -->\n\n\n\n  <ion-slides class=\"walkthrough-slides\" pager=\"true\" [options]=\"slidesOptions\">\n\n    <!-- Area Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Wall'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Intro</h4>\n\n        <ion-card>\n          <img src=\"/assets/images/simple_rectangle_area.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total:</ion-label>\n                      <ion-input clear-input name=\"totalArea\" [(ngModel)]=\"totalArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimpleArea()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    <ion-slide class=\"last-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Wall'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Stretch</h4>\n        <ion-card>\n          <img src=\"/assets/images/simple_rectangle_door.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <ion-card-subtitle>\n              <p>Remove the door area from the calculation</p>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1a\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2a\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Wall Area:</ion-label>\n                      <ion-input clear-input name=\"wallArea\" [(ngModel)]=\"wallArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Door Width:</ion-label>\n                      <p [innerHTML]=\"doorWidth\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Door Height:</ion-label>\n                      <p [innerHTML]=\"doorHeight\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Door Area:</ion-label>\n                      <ion-input clear-input name=\"doorArea\" [(ngModel)]=\"doorArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Wall Area - Door Area =</ion-label>\n                      <ion-input clear-input name=\"subtractDoorArea\" [(ngModel)]=\"subtractDoorArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateDoorRemoved()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Brick Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Bricks'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/force.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Wall Area :</ion-label>\n                      <p [innerHTML]=\"brickWallArea\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m2</p>\n\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Bricks / m2 :</ion-label>\n                      <p [innerHTML]=\"brickCoverage\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">bricks</p>\n                    </ion-item>\n\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Bricks :</ion-label>\n                      <ion-input clear-input name=\"totalBricks\" [(ngModel)]=\"totalBricks\"></ion-input>\n\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateBricks()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Cost Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Cost'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Intro</h4>\n\n        <ion-card>\n          <img src=\"/assets/images/simple_rectangle_area.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number of Bricks:</ion-label>\n                      <p [innerHTML]=\"bricksRequired\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cost / Brick:</ion-label>\n                      <p [innerHTML]=\"costPerBrick\" type=\"number\"></p>\n                      \n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total:</ion-label>\n                      <ion-input clear-input name=\"totalCostBrick\" [(ngModel)]=\"totalCostBrick\"></ion-input>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimpleCost()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Gable Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Gable'\">\n      <ion-row class=\"slide-inner-row\">\n        <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n\n        <ion-card>\n          <img src=\"/assets/images/simple_gable.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Height:</ion-label>\n                      <p [innerHTML]=\"side1Tri\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Width:</ion-label>\n                      <p [innerHTML]=\"side2Tri\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total:</ion-label>\n                      <ion-input clear-input name=\"totalTri\" [(ngModel)]=\"totalTri\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimpleTri()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Insulation Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Insulation'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Intro</h4>\n\n        <ion-card>\n          <img src=\"/assets/images/wall_area.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>You will require 1.75 insualtion boards</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Depth :</ion-label>\n                      <p [innerHTML]=\"wallDepth\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Width :</ion-label>\n                      <p [innerHTML]=\"wallWidth\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Height :</ion-label>\n                      <p [innerHTML]=\"wallHeight\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Back Left :</ion-label>\n                      <ion-input clear-input name=\"backLeft\" [(ngModel)]=\"backLeft\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Back Right :</ion-label>\n                      <ion-input clear-input name=\"backRight\" [(ngModel)]=\"backRight\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Front Left :</ion-label>\n                      <ion-input clear-input name=\"frontLeft\" [(ngModel)]=\"frontLeft\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Front Right :</ion-label>\n                      <ion-input clear-input name=\"frontRight\" [(ngModel)]=\"frontRight\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Area :</ion-label>\n                      <ion-input clear-input name=\"totalWallArea\" [(ngModel)]=\"totalWallArea\"></ion-input>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateWallArea()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Tiles Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Tiles'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Intro</h4>\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>Round the number packs required up to a full pack.</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number of Tiles:</ion-label>\n                      <p [innerHTML]=\"noTiles\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Tiles / Pack:</ion-label>\n                      <p [innerHTML]=\"tilesPerPack\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Price / Pack: £</ion-label>\n                      <p [innerHTML]=\"pricePack\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number of Packs? </ion-label>\n                      <ion-input clear-input name=\"numberPacks\" [(ngModel)]=\"numberPacks\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Cost (inc VAT):</ion-label>\n                      <ion-input clear-input name=\"totalCostTiles\" [(ngModel)]=\"totalCostTiles\"></ion-input>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateTiles()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Tiles'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Stretch</h4>\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>Round the number packs required up to a full pack.</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number of Tiles:</ion-label>\n                      <p [innerHTML]=\"noTiles\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Tiles / Pack:</ion-label>\n                      <p [innerHTML]=\"tilesPerPack\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Price / Pack: £</ion-label>\n                      <p [innerHTML]=\"pricePack\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number of Packs? </ion-label>\n                      <ion-input clear-input name=\"numberPacks\" [(ngModel)]=\"numberPacks\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Cost (ex VAT):</ion-label>\n                      <ion-input clear-input name=\"totalCostTiles\" [(ngModel)]=\"totalCostTiles\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>VAT @ 20%\":</ion-label>\n                      <ion-input clear-input name=\"vatTiles\" [(ngModel)]=\"vatTiles\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Cost (inc VAT):</ion-label>\n                      <ion-input clear-input name=\"totalCostTilesVAT\" [(ngModel)]=\"totalCostTilesVAT\"></ion-input>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateTilesVAT()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Cement Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Cement'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Sand</h4>\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>How much sand would be required for this mixture?</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cement: </ion-label>\n                      <p [innerHTML]=\"cement\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Sand Required: </ion-label>\n                      <ion-input clear-input name=\"sandRequired\" [(ngModel)]=\"sandRequired\"></ion-input>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSand()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Cement'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Cement</h4>\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>How much cement would be required for this mixture?</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Sand: </ion-label>\n                      <p [innerHTML]=\"sand1\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cement Required: </ion-label>\n                      <ion-input clear-input name=\"cementRequired1\" [(ngModel)]=\"cementRequired1\"></ion-input>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateCement()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Cement'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Sand & Cement</h4>\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>How much sand & cement would be required for this volume of mixture?</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Mixture: </ion-label>\n                      <p [innerHTML]=\"totalMix\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cement Required: </ion-label>\n                      <ion-input clear-input name=\"cementMix\" [(ngModel)]=\"cementMix\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Sand Required: </ion-label>\n                      <ion-input clear-input name=\"sandMix\" [(ngModel)]=\"sandMix\"></ion-input>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateMix()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Raft Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Raft'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/force.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Width :</ion-label>\n                      <p [innerHTML]=\"raftWidth\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Length :</ion-label>\n                      <p [innerHTML]=\"raftHeight\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Depth :</ion-label>\n                      <p [innerHTML]=\"raftDepth\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Converted Depth :</ion-label>\n                      <ion-input clear-input name=\"convertedDepth\" [(ngModel)]=\"convertedDepth\"></ion-input>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Conrete Required :</ion-label>\n                      <ion-input clear-input name=\"requiredConcrete\" [(ngModel)]=\"requiredConcrete\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m3</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateRaft()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Discount Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Discount'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Brushes : £</ion-label>\n                      <p [innerHTML]=\"brushesCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Rollers : £</ion-label>\n                      <p [innerHTML]=\"rollersCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Masking Tape : £</ion-label>\n                      <p [innerHTML]=\"maskingCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Caulk : £</ion-label>\n                      <p [innerHTML]=\"caulkCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Drop Cloth : £</ion-label>\n                      <p [innerHTML]=\"dropCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Discount : %</ion-label>\n                      <p [innerHTML]=\"discount\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total before Discount :</ion-label>\n                      <ion-input name=\"totalXDiscount\" [(ngModel)]=\"totalXDiscount\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Discount Total:</ion-label>\n                      <ion-input name=\"discountTotal\" [(ngModel)]=\"discountTotal\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Final Price:</ion-label>\n                      <ion-input name=\"totalCost\" [(ngModel)]=\"totalCost\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateDiscount()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Build Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Build'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Wall Area : </ion-label>\n                      <p [innerHTML]=\"brickArea\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\" > m2 </p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number of Bricks laid : </ion-label>\n                      <p [innerHTML]=\"bricksDay\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\" > per day </p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Number of bricks / m2 :</ion-label>\n                      <p [innerHTML]=\"bricksSquareM\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Payment / 1000 bricks : £</ion-label>\n                      <p [innerHTML]=\"paymentBricks\" type=\"number\"></p>\n                    </ion-item>\n            \n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number of Bricks to lay :</ion-label>\n                      <ion-input name=\"bricksToLay\" [(ngModel)]=\"bricksToLay\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number of Days : </ion-label>\n                      <ion-input name=\"numberDays\" [(ngModel)]=\"numberDays\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Payment : £</ion-label>\n                      <ion-input name=\"totalCostBricks\" [(ngModel)]=\"totalCostBricks\" maxlength=\"7\"></ion-input>\n                    </ion-item>\n\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateBuild()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    \n\n  </ion-slides>\n\n</ion-content>","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { BrickService } from '../brick.service';\nimport { BrickDetailsModel } from './brick-details.model';\n\n@Injectable()\nexport class BrickDetailsResolver implements Resolve<DataStore<BrickDetailsModel>> {\n\n  constructor(private brickService: BrickService) {}\n\n  resolve(route: ActivatedRouteSnapshot): DataStore<BrickDetailsModel> {\n    const itemSlug = route.paramMap.get('productId');\n\n    const dataSource: Observable<BrickDetailsModel> = this.brickService.getDetailsDataSource(itemSlug);\n    const dataStore: DataStore<BrickDetailsModel> = this.brickService.getDetailsStore(dataSource);\n\n    return dataStore;\n  }\n}\n"]}