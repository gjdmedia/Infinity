{"version":3,"sources":["./src/app/wood/listing/wood-listing.resolver.ts","./src/app/wood/listing/wood-listing.page.ts","./src/app/wood/listing/wood-listing.module.ts","./src/app/wood/listing/wood-listing.page.html"],"names":[],"mappings":"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","file":"wood-listing-wood-listing-module-ngfactory-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { woodService } from '../wood.service';\nimport { woodListingModel } from './wood-listing.model';\n\n@Injectable()\nexport class woodListingResolver implements Resolve<DataStore<woodListingModel>> {\n\n  constructor(private woodService: woodService) {}\n\n  resolve(): DataStore<woodListingModel> {\n    const dataSource: Observable<woodListingModel> = this.woodService.getListingDataSource();\n    const dataStore: DataStore<woodListingModel> = this.woodService.getListingStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { woodListingModel } from './wood-listing.model';\n\n@Component({\n  selector: 'app-wood-listing',\n  templateUrl: './wood-listing.page.html',\n  styleUrls: [\n    './styles/wood-listing.page.scss',\n    './styles/wood-listing.shell.scss'\n  ]\n})\nexport class woodListingPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  listing: woodListingModel;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.listing && this.listing.isShell) ? true : false;\n  }\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<woodListingModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<woodListingModel>(resolvedRouteData.data, woodListingModel)\n        .subscribe(\n          (state) => {\n            this.listing = state;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { woodService } from '../wood.service';\nimport { woodListingPage } from './wood-listing.page';\nimport { woodListingResolver } from './wood-listing.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: woodListingPage,\n    resolve: {\n      data: woodListingResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    woodListingPage\n  ],\n  providers: [\n    woodListingResolver,\n    woodService\n  ]\n})\nexport class woodListingPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>Wood Based</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ng-container *ngIf=\"listing?.items\">\n    <div class=\"listing-item\" *ngFor=\"let item of listing.items\">\n      <ion-row class=\"image-row\">\n        <ion-col size=\"12\">\n          <app-image-shell [display]=\"'cover'\" class=\"add-overlay item-image\" [src]=\"item.image\" [routerLink]=\"['/app/categories/wood/', item.slug]\">\n            <app-aspect-ratio [ratio]=\"{w:3, h:2}\">\n              <div class=\"content-inside-item-image\">\n                <div class=\"item-icon\">\n                  <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n                    <app-image-shell [src]=\"item.icon\" class=\"icon-image\"></app-image-shell>\n                  </app-aspect-ratio>\n                </div>\n                <div class=\"item-cta\">\n                  <span><app-text-shell animation=\"bouncing\" [data]=\"(item?.name && item?.category) ? (item.name + ' - ' + item.category) : (item.name)\"></app-text-shell></span>\n                  <ion-icon class=\"cta-icon\" name=\"arrow-forward\"></ion-icon>\n                </div>\n              </div>\n            </app-aspect-ratio>\n          </app-image-shell>\n        </ion-col>\n      </ion-row>\n      <!-- <ion-row class=\"info-row\">\n        <ion-col class=\"main-info-col\">\n          <h3 class=\"item-name\">\n            <a class=\"name-anchor\" [routerLink]=\"['/app/categories/wood/', item.slug]\">\n              <app-text-shell animation=\"bouncing\" [data]=\"(item?.name && item?.category) ? (item.name + ' - ' + item.category) : (item.name)\"></app-text-shell>\n            </a>\n          </h3>\n          <p class=\"item-description\">\n            <app-text-shell animation=\"bouncing\" [data]=\"item.description\" lines=\"3\"></app-text-shell>\n          </p>\n          <p class=\"item-address\">\n            <app-text-shell animation=\"bouncing\" [data]=\"item.address\"></app-text-shell>\n          </p>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"stats-row\">\n        <ion-col size=\"2\" class=\"item-rating\">\n          <span class=\"rating-value\">\n            <app-text-shell [data]=\"item.rating\"></app-text-shell>\n          </span>\n          <ion-icon class=\"stats-icon\" src=\"./assets/custom-icons/travel/star.svg\"></ion-icon>\n        </ion-col>\n        <ion-col size=\"2\" class=\"item-reviews\">\n          <span class=\"reviews-count\">\n            <app-text-shell [data]=\"item.reviewsCount\"></app-text-shell>\n          </span>\n          <ion-icon class=\"stats-icon\" src=\"./assets/custom-icons/travel/comments.svg\"></ion-icon>\n        </ion-col>\n      </ion-row> -->\n    </div>\n  </ng-container>\n</ion-content>"],"sourceRoot":"webpack:///"}