{"version":3,"sources":["webpack:///src/app/roofing/details/roofing-details.page.html","webpack:///src/app/roofing/details/roofing-details.module.ts","webpack:///src/app/roofing/details/roofing-details.resolver.ts","webpack:///src/app/roofing/details/roofing-details.page.ts"],"names":["routes","path","component","resolve","data","RoofingDetailsPageModule","RoofingDetailsResolver","roofingService","route","itemSlug","paramMap","get","dataSource","getDetailsDataSource","dataStore","getDetailsStore","RoofingDetailsPage","menu","toastController","slidesOptions","zoom","toggle","isFirstSlide","isLastSlide","generateSides","enable","slides","isBeginning","then","isEnd","ionSlideWillChange","subscribe","changes","length","slideTo","precision","labourHours","Math","floor","random","labourCost","discount","orderCost","numberTiles","breakage","numberPalletTiles","numberPerPallet","costPerTile","deliveryCharge","cement","sand","cement1","sand1","totalMix","span","rise","round","roofWidth","roofHeight","tilesPerSqM","subscriptions","resolvedRouteData","extractData","state","details","error","create","header","message","position","buttons","text","role","handler","totalPay","discountValue","finalCost","totalTiles","pallettsNeeded","totalTilesOrdered","spareTiles","sparesIncome","totalTilesCost","costVAT","totalCostIncVAT","sandRequired","cementRequired","sandRequired1","cementRequired1","sandMix","cementMix","halfSpan","riseSquared","slope","singleArea","totalArea","roofArea","roofTilesNeeded","breakageAllowance","totalTilesRoof","totalGuttering","toast","present","duration","pay","console","trace","presentToastCorrect","presentToastIncorrect","discAmount","breakAllowance","ceil","PalsNeeded","spares","costXvat","vat","costWithVAT","part","halfSpanSq","riseSq","slopeRoot","sqrt","ssArea","area","required","spareBreak","gutterRequired","hang","unsubscribe","isShell"],"mappings":"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","file":"roofing-details-roofing-details-module-ngfactory-es5.js","sourcesContent":["<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories/roofing\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      <app-text-shell [data]=\"details?.name\"></app-text-shell>\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"roofing-details-content\">\n  <ion-row class=\"image-row\">\n    <ion-col size=\"12\">\n      <app-image-shell [display]=\"'cover'\" animation=\"spinner\" class=\"add-overlay showcase-image\"\n        [src]=\"details?.showcaseImage\">\n        <app-aspect-ratio [ratio]=\"{ w: 64, h: 40 }\">\n          <div class=\"icon-wrapper\">\n            <app-aspect-ratio [ratio]=\"{ w: 1, h: 1 }\">\n              <app-image-shell class=\"icon-image\" [src]=\"details?.icon\"></app-image-shell>\n            </app-aspect-ratio>\n          </div>\n        </app-aspect-ratio>\n      </app-image-shell>\n    </ion-col>\n  </ion-row>\n  <!-- <ion-row class=\"description-row\">\n    <ion-col size=\"9\">\n      <h3 class=\"details-name\">\n        <app-text-shell [data]=\"details?.name\"></app-text-shell>\n      </h3>\n      <p class=\"details-style\">\n        <app-text-shell [data]=\"details?.style\"></app-text-shell>\n      </p>\n    </ion-col>\n  </ion-row> -->\n\n\n\n  <ion-slides class=\"walkthrough-slides\" pager=\"true\" [options]=\"slidesOptions\">\n\n    <!-- Labour Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Labour'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Rate per hour : £</ion-label>\n                      <p [innerHTML]=\"labourCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Hours worked :</ion-label>\n                      <p [innerHTML]=\"labourHours\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Cost :</ion-label>\n                      <ion-input name=\"totalPay\" [(ngModel)]=\"totalPay\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateLabour()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Discount Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Discount'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cost of Order : £</ion-label>\n                      <p [innerHTML]=\"orderCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Discount :</ion-label>\n                      <p [innerHTML]=\"discount\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">%</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Value of discount : £</ion-label>\n                      <ion-input name=\"discountValue\" [(ngModel)]=\"discountValue\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cost after discount : £</ion-label>\n                      <ion-input name=\"finalCost\" [(ngModel)]=\"finalCost\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateDiscount()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Breakages Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Breakages'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number of tiles required :</ion-label>\n                      <p [innerHTML]=\"numberTiles\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Breakage allowance :</ion-label>\n                      <p [innerHTML]=\"breakage\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">%</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total needed : </ion-label>\n                      <ion-input name=\"totalTiles\" [(ngModel)]=\"totalTiles\" maxlength=\"6\"></ion-input>\n                      <p style=\"margin-left: 5px;\">tiles</p>\n                    </ion-item>\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateBreakages()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Pallet Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Pallet'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Intro</h4>\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number of tiles required :</ion-label>\n                      <p [innerHTML]=\"numberPalletTiles\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Tiles per pallet :</ion-label>\n                      <p [innerHTML]=\"numberPerPallet\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Pallets needed : </ion-label>\n                      <ion-input name=\"pallettsNeeded\" [(ngModel)]=\"pallettsNeeded\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculatePalletSimple()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Pallet'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Stretch</h4>\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p> Calculate the amnount of money you could earn back by selling your spare tiles.</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number of tiles required :</ion-label>\n                      <p [innerHTML]=\"numberPalletTiles\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Tiles per pallet :</ion-label>\n                      <p [innerHTML]=\"numberPerPallet\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Pallets needed : </ion-label>\n                      <ion-input name=\"pallettsNeeded\" [(ngModel)]=\"pallettsNeeded\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Tiles Ordered : </ion-label>\n                      <ion-input name=\"totalTilesOrdered\" [(ngModel)]=\"totalTilesOrdered\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Spare tiles : </ion-label>\n                      <ion-input name=\"spareTiles\" [(ngModel)]=\"spareTiles\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cost per tile : £</ion-label>\n                      <p [innerHTML]=\"costPerTile\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Spares income : £</ion-label>\n                      <ion-input name=\"sparesIncome\" [(ngModel)]=\"sparesIncome\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculatePalletAdvanced()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Cost Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Cost'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number of tiles required :</ion-label>\n                      <p [innerHTML]=\"numberTiles\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cost per tile : £</ion-label>\n                      <p [innerHTML]=\"costPerTile\" type=\"number\"></p>\n\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Delivery charge : £</ion-label>\n                      <p [innerHTML]=\"deliveryCharge\" type=\"number\"></p>\n\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cost of tiles & Delivery : </ion-label>\n                      <ion-input name=\"totalTilesCost\" [(ngModel)]=\"totalTilesCost\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">ex VAT</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>VAT : £</ion-label>\n                      <ion-input name=\"costVAT\" [(ngModel)]=\"costVAT\" maxlength=\"6\"></ion-input>\n                      <p style=\"margin-left: 5px;\">@ 20%</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total cost : </ion-label>\n                      <ion-input name=\"totalCostIncVAT\" [(ngModel)]=\"totalCostIncVAT\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">inc VAT</p>\n                    </ion-item>\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateCost()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Cement Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Cement'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Sand</h4>\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>How much sand would be required for this mixture? NB: Roofing mix is 3 parts sand to 1 part cement.</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cement: </ion-label>\n                      <p [innerHTML]=\"cement\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">kg</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Sand Required: </ion-label>\n                      <ion-input clear-input name=\"sandRequired\" [(ngModel)]=\"sandRequired\"></ion-input>\n                      <p style=\"margin-left: 5px;\">kg</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSand()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Cement'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Cement</h4>\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>How much cement would be required for this mixture? NB: Roofing mix is 3 parts sand to 1 part cement.</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Sand: </ion-label>\n                      <p [innerHTML]=\"sand1\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">kg</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cement Required: </ion-label>\n                      <ion-input clear-input name=\"cementRequired1\" [(ngModel)]=\"cementRequired1\"></ion-input>\n                      <p style=\"margin-left: 5px;\">kg</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateCement()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Cement'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Sand & Cement</h4>\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>How much sand & cement would be required for this volume of mixture? NB: Roofing mix is 3 parts sand to 1\n              part cement.</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Mixture: </ion-label>\n                      <p [innerHTML]=\"totalMix\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">kg</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cement Required: </ion-label>\n                      <ion-input clear-input name=\"cementMix\" [(ngModel)]=\"cementMix\"></ion-input>\n                      <p style=\"margin-left: 5px;\">kg</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Sand Required: </ion-label>\n                      <ion-input clear-input name=\"sandMix\" [(ngModel)]=\"sandMix\"></ion-input>\n                      <p style=\"margin-left: 5px;\">kg</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateMix()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Gable Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Gable'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>To calculate the slope use the formula: half span squared + rise squared, then find the square root to get the slope.</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Rise :</ion-label>\n                      <p [innerHTML]=\"rise\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Span :</ion-label>\n                      <p [innerHTML]=\"span\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Length :</ion-label>\n                      <p [innerHTML]=\"length\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Half span squared : </ion-label>\n                      <ion-input name=\"halfSpan\" [(ngModel)]=\"halfSpan\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Rise squared : </ion-label>\n                      <ion-input name=\"riseSquared\" [(ngModel)]=\"riseSquared\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Slope : </ion-label>\n                      <ion-input name=\"slope\" [(ngModel)]=\"slope\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Single Side Area :</ion-label>\n                      <ion-input name=\"singleArea\" [(ngModel)]=\"singleArea\" maxlength=\"6\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Area : </ion-label>\n                      <ion-input name=\"totalArea\" [(ngModel)]=\"totalArea\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateGable()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n     <!-- Tiles Calculations -->\n\n     <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Tiles'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <!-- <p>To calculate the slope use the formula: half span squared + rise squared, then find the square root to get the slope.</p> -->\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Width :</ion-label>\n                      <p [innerHTML]=\"roofWidth\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Height :</ion-label>\n                      <p [innerHTML]=\"roofHeight\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Area of single side : </ion-label>\n                      <ion-input name=\"roofArea\" [(ngModel)]=\"halfSpan\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Tiles / M2 :</ion-label>\n                      <p [innerHTML]=\"tilesPerSqM\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">tiles</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Tiles required : </ion-label>\n                      <ion-input name=\"roofTilesNeeded\" [(ngModel)]=\"roofTilesNeeded\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">tiles</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>15 % breakage allowance : </ion-label>\n                      <ion-input name=\"breakageAllowance\" [(ngModel)]=\"breakageAllowance\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">tiles</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total tiles required :</ion-label>\n                      <ion-input name=\"totalTilesRoof\" [(ngModel)]=\"totalTilesRoof\" maxlength=\"6\"></ion-input>\n                      <p style=\"margin-left: 5px;\">tiles</p>\n                    </ion-item>\n        \n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateTiles()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Gutter Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Gutter'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <!-- <p>To calculate the slope use the formula: half span squared + rise squared, then find the square root to get the slope.</p> -->\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Width :</ion-label>\n                      <p [innerHTML]=\"roofWidth\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Height :</ion-label>\n                      <p [innerHTML]=\"roofHeight\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Overhang :</ion-label>\n                      <p [innerHTML]=\"tilesPerSqM\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total guttering required :</ion-label>\n                      <ion-input name=\"totalGuttering\" [(ngModel)]=\"totalGuttering\" maxlength=\"6\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateGutter()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Job Price Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Job Price'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>To calculate the slope use the formula: half span squared + rise squared, then find the square root to get the slope.</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Rise :</ion-label>\n                      <p [innerHTML]=\"rise\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Span :</ion-label>\n                      <p [innerHTML]=\"span\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Length :</ion-label>\n                      <p [innerHTML]=\"length\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Half span squared : </ion-label>\n                      <ion-input name=\"halfSpan\" [(ngModel)]=\"halfSpan\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Rise squared : </ion-label>\n                      <ion-input name=\"riseSquared\" [(ngModel)]=\"riseSquared\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Slope : </ion-label>\n                      <ion-input name=\"slope\" [(ngModel)]=\"slope\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Single Side Area :</ion-label>\n                      <ion-input name=\"singleArea\" [(ngModel)]=\"singleArea\" maxlength=\"6\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Area : </ion-label>\n                      <ion-input name=\"totalArea\" [(ngModel)]=\"totalArea\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateGable()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n\n\n  </ion-slides>\n\n</ion-content>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { RoofingService } from '../roofing.service';\nimport { RoofingDetailsPage } from './roofing-details.page';\nimport { RoofingDetailsResolver } from './roofing-details.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RoofingDetailsPage,\n    resolve: {\n      data: RoofingDetailsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    RoofingDetailsPage\n  ],\n  providers: [\n    RoofingDetailsResolver,\n    RoofingService\n  ]\n})\nexport class RoofingDetailsPageModule {}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { RoofingService } from '../roofing.service';\nimport { RoofingDetailsModel } from './roofing-details.model';\n\n@Injectable()\nexport class RoofingDetailsResolver implements Resolve<DataStore<RoofingDetailsModel>> {\n\n  constructor(private roofingService: RoofingService) {}\n\n  resolve(route: ActivatedRouteSnapshot): DataStore<RoofingDetailsModel> {\n    const itemSlug = route.paramMap.get('productId');\n\n    const dataSource: Observable<RoofingDetailsModel> = this.roofingService.getDetailsDataSource(itemSlug);\n    const dataStore: DataStore<RoofingDetailsModel> = this.roofingService.getDetailsStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { Component, OnInit, AfterViewInit, ViewChild, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ToastController } from '@ionic/angular';\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { RoofingDetailsModel } from './roofing-details.model';\nimport { IonSlides, MenuController } from '@ionic/angular';\nimport { analytics } from 'firebase';\nimport { compileDirectiveFromRender2 } from '@angular/compiler/src/render3/view/compiler';\nimport { AnyTxtRecord } from 'dns';\n\n\n@Component({\n  selector: 'app-roofing-details',\n  templateUrl: './roofing-details.page.html',\n  styleUrls: [\n    './styles/roofing-details.page.scss',\n    './styles/roofing-details.shell.scss'\n  ]\n\n})\nexport class RoofingDetailsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  slidesOptions: any = {\n    zoom: {\n      toggle: false // Disable zooming to prevent weird double tap zomming on slide images\n    }\n  };\n\n\n  subscriptions: Subscription;\n\n  // Labour\n\n  labourCost: any;\n  labourHours: any;\n  totalPay: any;\n\n  // Discount\n  orderCost: any;\n  discount: any;\n  discountValue: any;\n  finalCost: any;\n\n  //Breakages\n  numberTiles: any;\n  breakage: any;\n  totalTiles: any;\n\n  // Pallet & Cost\n  numberPalletTiles: any;\n  numberPerPallet: any;\n  pallettsNeeded: any;\n  totalTilesOrdered: any;\n  spareTiles: any;\n  costPerTile: any;\n  sparesIncome: any;\n  deliveryCharge: any;\n  costVAT: any;\n  totalTilesCost: any;\n  totalCostIncVAT: any;\n\n   // Cement\n\n   cement: any;\n   cementRequired: any;\n   sand: any;\n   sandRequired: any;\n   cement1: any;\n   cementRequired1: any;\n   sand1: any;\n   sandRequired1: any;\n   totalMix: any;\n   sandMix: any;\n   cementMix: any;\n\n   // Gable\n  rise:any;\n  span:any;\n  length:any;\n  slope:any;\n  singleArea:any;\n  totalArea:any;\n  halfSpan:any;\n  riseSquared:any;\n\n  //Tiles & Gutter\n  roofWidth:any;\n  roofHeight:any;\n  roofArea:any;\n  tilesPerSqM:any;\n  roofTilesNeeded:any;\n  breakageAllowance:any;\n  totalTilesRoof:any;\n  totalGuttering:any;\n  \n  \n\n  details: RoofingDetailsModel;\n\n  @ViewChild(IonSlides, { static: true }) slides: IonSlides;\n\n  @HostBinding('class.first-slide-active') isFirstSlide = true;\n\n  @HostBinding('class.last-slide-active') isLastSlide = false;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.details && this.details.isShell) ? true : false;\n  }\n\n\n\n  constructor(public menu: MenuController, private route: ActivatedRoute, public toastController: ToastController) {\n\n    this.generateSides();\n\n  }\n\n  // Disable side menu for this page\n  ionViewDidEnter(): void {\n    this.menu.enable(true);\n  }\n\n  // Restore to default when leaving this page\n  ionViewDidLeave(): void {\n    this.menu.enable(true);\n  }\n\n  ngAfterViewInit(): void {\n    // ViewChild is set\n    this.slides.isBeginning().then(isBeginning => {\n      this.isFirstSlide = isBeginning;\n    });\n    this.slides.isEnd().then(isEnd => {\n      this.isLastSlide = isEnd;\n    });\n\n    // Subscribe to changes\n    this.slides.ionSlideWillChange.subscribe(changes => {\n      this.slides.isBeginning().then(isBeginning => {\n        this.isFirstSlide = isBeginning;\n      });\n      this.slides.isEnd().then(isEnd => {\n        this.isLastSlide = isEnd;\n      });\n    });\n  }\n\n  skipWalkthrough(): void {\n    // Skip to the last slide\n    this.slides.length().then(length => {\n      this.slides.slideTo(length);\n    });\n  }\n\n  generateSides(): void {\n    var precision = 100; // 2 decimals\n\n    // Labour\n    this.labourHours = Math.floor(Math.random() * 30) + 10;\n    this.labourCost = Math.floor(Math.random() * (25.99 * precision - 1.00 * precision) + 1 * precision) / (1 * precision);\n\n    // Discount\n    this.discount = Math.floor(Math.random() * 30) + 10;\n    this.orderCost = Math.floor(Math.random() * (250.99 * precision - 100.00 * precision) + 1 * precision) / (1 * precision);\n\n    // Breakages\n    this.numberTiles = Math.floor(Math.random() * 900) + 700;\n    this.breakage = Math.floor(Math.random() * 30) + 1;\n\n    //Pallet & Cost\n    this.numberPalletTiles = Math.floor(Math.random() * 3500) + 700;\n    this.numberPerPallet = Math.floor(Math.random() * 300) + 200;\n    this.costPerTile = Math.floor(Math.random() * (0.99 * precision - 0.4 * precision) + 1 * precision) / (1 * precision);\n    this.deliveryCharge = Math.floor(Math.random() * 70) + 20;\n\n     //Cement\n     this.cement = Math.floor(Math.random() * 100) + 10;\n     this.sand = this.cement * 3;\n     this.cement1 = Math.floor(Math.random() * 100) + 10;\n     this.sand1 = this.cement1 * 3;\n     this.totalMix = Math.floor(Math.random() * 150) + 10;\n\n     // Gable\n     this.span = Math.floor(Math.random() * 15) + 5;\n     this.rise = Math.round(this.span * 0.4 *10) / 10;\n     this.length = Math.floor(Math.random() * 15) + 5;\n\n     //Tiles & Gutter\n     this.roofWidth = Math.floor(Math.random() * 15) + 5;\n     this.roofHeight = Math.round(this.span * 0.4 *10) / 10;\n     this.tilesPerSqM = Math.floor(Math.random() * 60) + 40;\n\n\n  }\n\n\n\n  ngOnInit(): void {\n\n\n\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n      .subscribe(\n        (resolvedRouteData: IResolvedRouteData<RoofingDetailsModel>) => {\n          // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n          this.subscriptions = ResolverHelper.extractData<RoofingDetailsModel>(resolvedRouteData.data, RoofingDetailsModel)\n            .subscribe(\n              (state) => {\n                this.details = state;\n              },\n              (error) => { }\n            );\n        },\n        (error) => { }\n      );\n  }\n\n  async presentToastCorrect() {\n    const toast = await this.toastController.create({\n      header: 'Correct!',\n      message: 'Well Done.',\n      position: 'bottom',\n      buttons: [\n        {\n          text: 'Next',\n          role: 'cancel',\n          handler: () => {\n            this.generateSides();\n            this.totalPay = \"\";\n            this.discountValue = \"\";\n            this.finalCost = \"\";\n            this.totalTiles = \"\";\n            this.pallettsNeeded = \"\";\n            this.totalTilesOrdered = \"\";\n            this.spareTiles = \"\";\n            this.sparesIncome = \"\";\n            this.totalTilesCost = \"\";\n            this.costVAT = \"\";\n            this.totalCostIncVAT = \"\";\n            this.sandRequired = \"\";\n            this.cementRequired = \"\";\n            this.sandRequired1 = \"\";\n            this.cementRequired1 = \"\";\n            this.sandMix = \"\";\n            this.cementMix = \"\";\n            this.halfSpan = \"\";\n            this.riseSquared = \"\";\n            this.slope = \"\";\n            this.singleArea = \"\";\n            this.totalArea = \"\";\n            this.roofArea = \"\";\n            this.roofTilesNeeded = \"\";\n            this.breakageAllowance = \"\";\n            this.totalTilesRoof = \"\";\n            this.totalGuttering = \"\";\n          }\n        }\n      ]\n    });\n    toast.present();\n  }\n\n  async presentToastIncorrect() {\n    const toast = await this.toastController.create({\n      message: 'Try again!',\n      position: 'bottom',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  calculateLabour(): void {\n\n    var pay = Math.round((this.labourCost * this.labourHours) * 100) / 100;\n    console.trace(pay);\n\n    if (pay == this.totalPay) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateDiscount(): void {\n\n    var discAmount = Math.round(this.orderCost * (this.discount / 100) * 100) / 100;\n    console.trace(\"OrderCost: £\" + this.orderCost + \" Discount : £\" + discAmount);\n\n    if (discAmount == this.discountValue && this.finalCost == this.orderCost - discAmount) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateBreakages(): void {\n\n    console.trace(this.numberTiles)\n    console.trace(this.breakage)\n\n    var breakAllowance = Math.ceil(this.numberTiles * (this.breakage / 100));\n    console.trace(breakAllowance);\n\n    if (this.numberTiles + breakAllowance == this.totalTiles) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculatePalletSimple(): void {\n\n    console.trace(this.numberPalletTiles)\n    console.trace(this.numberPerPallet)\n\n    var PalsNeeded = Math.ceil(this.numberPalletTiles / this.numberPerPallet);\n    console.trace(PalsNeeded);\n\n    if (this.pallettsNeeded == PalsNeeded) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n  calculatePalletAdvanced(): void {\n\n    console.trace(this.numberPalletTiles)\n    console.trace(this.numberPerPallet)\n\n    var PalsNeeded = Math.ceil(this.numberPalletTiles / this.numberPerPallet);\n    console.trace(PalsNeeded);\n\n    var spares = this.numberPerPallet * this.pallettsNeeded - this.numberPalletTiles;\n    console.trace(spares);\n\n    if (this.sparesIncome == spares * this.costPerTile) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateCost(): void {\n\n    var costXvat = Math.round((this.numberTiles * this.costPerTile + this.deliveryCharge) * 100) / 100;\n    var vat = Math.ceil((costXvat *0.02) *100) / 100;\n    var costWithVAT = Math.ceil((costXvat + vat) * 100) / 100;\n    console.trace(costXvat + \" \" + vat + \" \" + costWithVAT)\n\n    if (costWithVAT == this.totalCostIncVAT) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateSand(): void {\n\n\n\n    if (this.sand == this.sandRequired) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n  calculateCement(): void {\n\n\n\n    if (this.cement1 == this.cementRequired1) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n  calculateMix(): void {\n\n    var part = this.totalMix / 4;\n\n\n\n    if (this.cementMix == part && this.sandMix == (part * 3)) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateGable(): void {\n\n    var halfSpanSq = Math.round((this.span / 2) * (this.span / 2) * 100) / 100 ;\n    var riseSq = Math.round((this.rise * this.rise) * 100)/ 100;\n\n    var slopeRoot = Math.round((Math.sqrt(halfSpanSq + riseSq)) * 100) / 100;\n    \n    console.trace(halfSpanSq + \" \" + riseSq + \" \" + slopeRoot);\n\n    var ssArea = this.length * slopeRoot;\n\n     if (ssArea*2 == this.totalArea) {\n       console.trace('Correct!');\n\n       this.presentToastCorrect();\n\n\n     } else {\n\n       this.presentToastIncorrect();\n    }\n\n    \n\n  }\n\n  calculateTiles(): void {\n\n    var area = Math.round((this.roofWidth * this.roofHeight) * 100) / 100 ;\n    var required = Math.ceil(area * this.tilesPerSqM);\n    var spareBreak = Math.ceil(required *0.15);\n     console.trace(required + \" \" + spareBreak);\n    \n\n     if (required + spareBreak == this.totalTilesRoof) {\n       console.trace('Correct!');\n\n       this.presentToastCorrect();\n\n\n     } else {\n\n       this.presentToastIncorrect();\n    }\n\n    \n\n  }\n\n  calculateGutter(): void {\n\n    var gutterRequired = this.roofHeight + this.roofHeight + this.roofWidth + this.roofWidth;\n    var hang = Math.round(((this.tilesPerSqM /1000) * 4) * 100 )/ 100;\n    \n\n     if (gutterRequired + hang == this.totalGuttering) {\n       console.trace('Correct!');\n\n       this.presentToastCorrect();\n\n\n     } else {\n\n       this.presentToastIncorrect();\n    }\n\n    \n\n  }\n\n\n\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n"]}