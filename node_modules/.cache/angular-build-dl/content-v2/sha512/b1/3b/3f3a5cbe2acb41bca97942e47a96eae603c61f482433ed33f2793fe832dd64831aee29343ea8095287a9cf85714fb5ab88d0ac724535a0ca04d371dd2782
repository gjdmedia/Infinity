{"version":3,"sources":["webpack:///src/app/wood/details/wood-details.module.ts","webpack:///src/app/wood/details/wood-details.page.html","webpack:///src/app/wood/details/wood-details.page.ts","webpack:///src/app/wood/details/wood-details.resolver.ts"],"names":["routes","path","component","resolve","data","woodDetailsPageModule","woodDetailsPage","menu","route","toastController","slidesOptions","zoom","toggle","isFirstSlide","isLastSlide","generateSides","enable","slides","isBeginning","then","isEnd","ionSlideWillChange","subscribe","changes","length","slideTo","precision","side1","Math","floor","random","side2","carpenters","percentageincrease","noWindows","windowBoard","noDoors","vanSpeed","vanTime","subscriptions","resolvedRouteData","extractData","state","details","error","create","header","message","position","buttons","text","role","handler","side3","side4","totalArea","carpsNeeded","totalCarps","totalTimber","timberPerDoor","totalDoorTimber","vanDistance","toast","present","duration","total","console","trace","presentToastCorrect","presentToastIncorrect","requiredCarps","ceil","requiredTimber","round","travelled","unsubscribe","isShell","woodDetailsResolver","woodService","itemSlug","paramMap","get","dataSource","getDetailsDataSource","dataStore","getDetailsStore"],"mappings":"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","file":"wood-details-wood-details-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { woodService } from '../wood.service';\nimport { woodDetailsPage } from './wood-details.page';\nimport { woodDetailsResolver } from './wood-details.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: woodDetailsPage,\n    resolve: {\n      data: woodDetailsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    woodDetailsPage\n  ],\n  providers: [\n    woodDetailsResolver,\n    woodService\n  ]\n})\nexport class woodDetailsPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories/wood\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      <app-text-shell [data]=\"details?.name\"></app-text-shell>\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"wood-details-content\">\n  <ion-row class=\"image-row\">\n    <ion-col size=\"12\">\n      <app-image-shell [display]=\"'cover'\" animation=\"spinner\" class=\"add-overlay showcase-image\"\n        [src]=\"details?.showcaseImage\">\n        <app-aspect-ratio [ratio]=\"{ w: 64, h: 40 }\">\n          <div class=\"icon-wrapper\">\n            <app-aspect-ratio [ratio]=\"{ w: 1, h: 1 }\">\n              <app-image-shell class=\"icon-image\" [src]=\"details?.icon\"></app-image-shell>\n            </app-aspect-ratio>\n          </div>\n        </app-aspect-ratio>\n      </app-image-shell>\n    </ion-col>\n  </ion-row>\n  <!-- <ion-row class=\"description-row\">\n    <ion-col size=\"9\">\n      <h3 class=\"details-name\">\n        <app-text-shell [data]=\"details?.name\"></app-text-shell>\n      </h3>\n      <p class=\"details-style\">\n        <app-text-shell [data]=\"details?.style\"></app-text-shell>\n      </p>\n    </ion-col>\n  </ion-row> -->\n\n\n\n  <ion-slides class=\"walkthrough-slides\" pager=\"true\" [options]=\"slidesOptions\">\n\n      <!-- Perimiter Calculations -->\n\n      <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Perimiter'\">\n        <ion-row class=\"slide-inner-row\">\n          <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n  \n          <ion-card >\n            <img src=\"/assets/images/simple_rectangle.png\" />\n            <ion-card-header>\n              <ion-card-title>\n                <app-text-shell [data]=\"details?.name\"></app-text-shell>\n              </ion-card-title>\n              <ion-card-subtitle>\n                <app-text-shell [data]=\"details?.style\"></app-text-shell>\n              </ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n                <ion-row class=\"slide-inner-row\">\n                  <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                  <!--  <ion-row class=\"description-row\">\n                    <img\n                      src=\"/assets/images/simple_rectangle.png\"\n                      class=\"ion-padding\"\n                    />\n                  </ion-row> -->\n                  <form>\n                    <ion-list class=\"ion-padding\">\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Side 1:</ion-label>\n                        <p [innerHTML]=\"side1\" type=\"number\"></p>\n                        <p style=\"margin-left: 5px;\">m</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Side 2:</ion-label>\n                        <p [innerHTML]=\"side2\" type=\"number\"></p>\n                        <p style=\"margin-left: 5px;\">m</p>\n                      </ion-item>\n                      <ion-item type=\"submit\" class=\"ion-padding\">\n                        <ion-label>Side 3:</ion-label>\n                        <ion-input name=\"side3\" [(ngModel)]=\"side3\" maxlength=\"4\"></ion-input>\n                        <p style=\"margin-left: 5px;\">m</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Side 4:</ion-label>\n                        <ion-input name=\"side4\" [(ngModel)]=\"side4\" maxlength=\"4\"></ion-input>\n                        <p style=\"margin-left: 5px;\">m</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Total:</ion-label>\n                        <ion-input clear-input name=\"total\" [(ngModel)]=\"total\"></ion-input>\n                        <p style=\"margin-left: 5px;\">m2</p>\n                      </ion-item>\n                    </ion-list>\n                    <div class=\"ion-padding\">\n                      <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimple()\">\n                        Submit\n                      </ion-button>\n                    </div>\n                  </form>\n                </ion-row>\n              </ion-slide>\n            </ion-card-content>\n          </ion-card>\n        </ion-row>\n      </ion-slide>\n      \n       <!-- Area Calculations -->\n  \n       <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Area'\">\n        <ion-row class=\"slide-inner-row\">\n          <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n  \n          <ion-card >\n            <img src=\"/assets/images/simple_rectangle_area.png\" />\n            <ion-card-header>\n              <ion-card-title>\n                <app-text-shell [data]=\"details?.name\"></app-text-shell>\n              </ion-card-title>\n              <ion-card-subtitle>\n                <app-text-shell [data]=\"details?.style\"></app-text-shell>\n              </ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n                <ion-row class=\"slide-inner-row\">\n                  <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                  <!--  <ion-row class=\"description-row\">\n                    <img\n                      src=\"/assets/images/simple_rectangle.png\"\n                      class=\"ion-padding\"\n                    />\n                  </ion-row> -->\n                  <form>\n                    <ion-list class=\"ion-padding\">\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Side 1:</ion-label>\n                        <p [innerHTML]=\"side1\" type=\"number\"></p>\n                        <p style=\"margin-left: 5px;\">m</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Side 2:</ion-label>\n                        <p [innerHTML]=\"side2\" type=\"number\"></p>\n                        <p style=\"margin-left: 5px;\">m</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Total:</ion-label>\n                        <ion-input clear-input name=\"totalArea\" [(ngModel)]=\"totalArea\"></ion-input>\n                        <p style=\"margin-left: 5px;\">m2</p>\n                      </ion-item>\n                    </ion-list>\n                    <div class=\"ion-padding\">\n                      <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimpleArea()\">\n                        Submit\n                      </ion-button>\n                    </div>\n                  </form>\n                </ion-row>\n              </ion-slide>\n            </ion-card-content>\n          </ion-card>\n        </ion-row>\n      </ion-slide>\n\n      <!-- Carpenters Calculations -->\n  \n      <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Carpenters'\">\n        <ion-row class=\"slide-inner-row\">\n          <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n  \n          <ion-card >\n            <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n            <ion-card-header>\n              <ion-card-title>\n                <app-text-shell [data]=\"details?.name\"></app-text-shell>\n              </ion-card-title>\n              <ion-card-subtitle>\n                <app-text-shell [data]=\"details?.style\"></app-text-shell>\n              </ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n                <ion-row class=\"slide-inner-row\">\n                  <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                  <!--  <ion-row class=\"description-row\">\n                    <img\n                      src=\"/assets/images/simple_rectangle.png\"\n                      class=\"ion-padding\"\n                    />\n                  </ion-row> -->\n                  <form>\n                    <ion-list class=\"ion-padding\">\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Number of carpenters in UK :</ion-label>\n                        <p [innerHTML]=\"carpenters\" type=\"number\"></p>\n                        <!-- <p style=\"margin-left: 5px;\">m</p> -->\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Expected increase :</ion-label>\n                        <p [innerHTML]=\"percentageincrease\" type=\"number\"></p>\n                        <p style=\"margin-left: 5px;\">%</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Total needed :</ion-label>\n                        <ion-input clear-input name=\"carpsNeeded\" [(ngModel)]=\"carpsNeeded\"></ion-input>\n                        <p style=\"margin-left: 5px;\">carpenters</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Total number :</ion-label>\n                        <ion-input clear-input name=\"totalCarps\" [(ngModel)]=\"totalCarps\"></ion-input>\n                        <p style=\"margin-left: 5px;\">carpenters</p>\n                      </ion-item>\n                    </ion-list>\n                    <div class=\"ion-padding\">\n                      <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateCarpenters()\">\n                        Submit\n                      </ion-button>\n                    </div>\n                  </form>\n                </ion-row>\n              </ion-slide>\n            </ion-card-content>\n          </ion-card>\n        </ion-row>\n      </ion-slide>\n\n       <!-- Windows Calculations -->\n  \n       <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Windows'\">\n        <ion-row class=\"slide-inner-row\">\n          <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n  \n          <ion-card >\n            <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n            <ion-card-header>\n              <ion-card-title>\n                <app-text-shell [data]=\"details?.name\"></app-text-shell>\n              </ion-card-title>\n              <ion-card-subtitle>\n                <app-text-shell [data]=\"details?.style\"></app-text-shell>\n              </ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n                <ion-row class=\"slide-inner-row\">\n                  <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                  <!--  <ion-row class=\"description-row\">\n                    <img\n                      src=\"/assets/images/simple_rectangle.png\"\n                      class=\"ion-padding\"\n                    />\n                  </ion-row> -->\n                  <form>\n                    <ion-list class=\"ion-padding\">\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Number of windows :</ion-label>\n                        <p [innerHTML]=\"noWindows\" type=\"number\"></p>\n                        <!-- <p style=\"margin-left: 5px;\">m</p> -->\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Length of window board :</ion-label>\n                        <p [innerHTML]=\"windowBoard\" type=\"number\"></p>\n                        <p style=\"margin-left: 5px;\">mm</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Timber required :</ion-label>\n                        <ion-input clear-input name=\"totalTimber\" [(ngModel)]=\"totalTimber\"></ion-input>\n                        <p style=\"margin-left: 5px;\">mm</p>\n                      </ion-item>\n                    </ion-list>\n                    <div class=\"ion-padding\">\n                      <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateWindows()\">\n                        Submit\n                      </ion-button>\n                    </div>\n                  </form>\n                </ion-row>\n              </ion-slide>\n            </ion-card-content>\n          </ion-card>\n        </ion-row>\n      </ion-slide>\n\n      <!-- Door Calculations -->\n  \n      <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Doors'\">\n        <ion-row class=\"slide-inner-row\">\n          <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n  \n          <ion-card >\n            <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n            <ion-card-header>\n              <ion-card-title>\n                <app-text-shell [data]=\"details?.name\"></app-text-shell>\n              </ion-card-title>\n              <ion-card-subtitle>\n                <app-text-shell [data]=\"details?.style\"></app-text-shell>\n              </ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n                <ion-row class=\"slide-inner-row\">\n                  <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                  <!--  <ion-row class=\"description-row\">\n                    <img\n                      src=\"/assets/images/simple_rectangle.png\"\n                      class=\"ion-padding\"\n                    />\n                  </ion-row> -->\n                  <form>\n                    <ion-list class=\"ion-padding\">\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Height :</ion-label>\n                        <p type=\"number\">2.1</p>\n                        <p style=\"margin-left: 5px;\">m</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Width :</ion-label>\n                        <p type=\"number\">1.2</p>\n                        <p style=\"margin-left: 5px;\">m</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Timber required :</ion-label>\n                        <ion-input clear-input name=\"timberPerDoor\" [(ngModel)]=\"timberPerDoor\"></ion-input>\n                        <p style=\"margin-left: 5px;\">m per door</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Number of Doors :</ion-label>\n                        <p [innerHTML]=\"noDoors\" type=\"number\"></p>\n                        <!-- <p style=\"margin-left: 5px;\">doors</p> -->\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Total timber required :</ion-label>\n                        <ion-input clear-input name=\"totalDoorTimber\" [(ngModel)]=\"totalDoorTimber\"></ion-input>\n                        <p style=\"margin-left: 5px;\">m</p>\n                      </ion-item>\n                    </ion-list>\n                    <div class=\"ion-padding\">\n                      <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateDoors()\">\n                        Submit\n                      </ion-button>\n                    </div>\n                  </form>\n                </ion-row>\n              </ion-slide>\n            </ion-card-content>\n          </ion-card>\n        </ion-row>\n      </ion-slide>\n\n      <!-- Time Calculations -->\n  \n      <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Travel Time'\">\n        <ion-row class=\"slide-inner-row\">\n          <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n  \n          <ion-card >\n            <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n            <ion-card-header>\n              <ion-card-title>\n                <app-text-shell [data]=\"details?.name\"></app-text-shell>\n              </ion-card-title>\n              <ion-card-subtitle>\n                <app-text-shell [data]=\"details?.style\"></app-text-shell>\n              </ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n                <ion-row class=\"slide-inner-row\">\n                  <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                  <!--  <ion-row class=\"description-row\">\n                    <img\n                      src=\"/assets/images/simple_rectangle.png\"\n                      class=\"ion-padding\"\n                    />\n                  </ion-row> -->\n                  <form>\n                    <ion-list class=\"ion-padding\">\n                       <ion-item class=\"ion-padding\">\n                        <ion-label>Speed :</ion-label>\n                        <p [innerHTML]=\"vanSpeed\" type=\"number\"></p>\n                        <p style=\"margin-left: 5px;\">mph</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Time :</ion-label>\n                        <p [innerHTML]=\"vanTime\" type=\"number\"></p>\n                        <p style=\"margin-left: 5px;\">hours</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Distance :</ion-label>\n                        <ion-input clear-input name=\"vanDistance\" [(ngModel)]=\"vanDistance\"></ion-input>\n                        <p style=\"margin-left: 5px;\">miles</p>\n                      </ion-item>\n                    </ion-list>\n                    <div class=\"ion-padding\">\n                      <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateTravel()\">\n                        Submit\n                      </ion-button>\n                    </div>\n                  </form>\n                </ion-row>\n              </ion-slide>\n            </ion-card-content>\n          </ion-card>\n        </ion-row>\n      </ion-slide>\n     \n  </ion-slides>\n\n</ion-content>","import { Component, OnInit, AfterViewInit, ViewChild, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ToastController } from '@ionic/angular';\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { woodDetailsModel } from './wood-details.model';\nimport { IonSlides, MenuController } from '@ionic/angular';\nimport { analytics } from 'firebase';\nimport { compileDirectiveFromRender2 } from '@angular/compiler/src/render3/view/compiler';\nimport { AnyTxtRecord } from 'dns';\n\n\n@Component({\n  selector: 'app-wood-details',\n  templateUrl: './wood-details.page.html',\n  styleUrls: [\n    './styles/wood-details.page.scss',\n    './styles/wood-details.shell.scss'\n  ]\n\n})\nexport class woodDetailsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  slidesOptions: any = {\n    zoom: {\n      toggle: false // Disable zooming to prevent weird double tap zomming on slide images\n    }\n  };\n\n\n  subscriptions: Subscription;\n\n  // Area and Perimiter\n  side1: any;\n  side2: any;\n  side3: any;\n  side4: any;\n  totalArea: any;\n  total: any;\n  carpenters: any;\n  percentageincrease: any;\n  carpsNeeded:any;\n  totalCarps:any;\n  totalTimber:any;\n  noWindows: any;\n  windowBoard:any;\n  timberPerDoor:any;\n  noDoors:any;\n  totalDoorTimber:any;\n  vanSpeed:any;\n  vanTime:any;\n  vanDistance:any;\n\n  \n\n  details: woodDetailsModel;\n\n  @ViewChild(IonSlides, { static: true }) slides: IonSlides;\n\n  @HostBinding('class.first-slide-active') isFirstSlide = true;\n\n  @HostBinding('class.last-slide-active') isLastSlide = false;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.details && this.details.isShell) ? true : false;\n  }\n\n\n\n  constructor(public menu: MenuController, private route: ActivatedRoute, public toastController: ToastController) {\n\n    this.generateSides();\n\n  }\n\n  // Disable side menu for this page\n  ionViewDidEnter(): void {\n    this.menu.enable(true);\n  }\n\n  // Restore to default when leaving this page\n  ionViewDidLeave(): void {\n    this.menu.enable(true);\n  }\n\n  ngAfterViewInit(): void {\n    // ViewChild is set\n    this.slides.isBeginning().then(isBeginning => {\n      this.isFirstSlide = isBeginning;\n    });\n    this.slides.isEnd().then(isEnd => {\n      this.isLastSlide = isEnd;\n    });\n\n    // Subscribe to changes\n    this.slides.ionSlideWillChange.subscribe(changes => {\n      this.slides.isBeginning().then(isBeginning => {\n        this.isFirstSlide = isBeginning;\n      });\n      this.slides.isEnd().then(isEnd => {\n        this.isLastSlide = isEnd;\n      });\n    });\n  }\n\n  skipWalkthrough(): void {\n    // Skip to the last slide\n    this.slides.length().then(length => {\n      this.slides.slideTo(length);\n    });\n  }\n\n  generateSides(): void {\n    var precision = 10; // 1 decimals\n    //Area and perimiter\n    this.side1 = Math.floor(Math.random() * 15) + 5; \n    this.side2 = this.side1 /2;\n    //Carpenters\n    this.carpenters = Math.floor(Math.random() * 250000) + 100000; \n    this.percentageincrease = Math.floor(Math.random() * 20) + 5; \n    // Windows\n    this.noWindows = Math.floor(Math.random() * 30) + 5;\n    this.windowBoard = Math.floor(Math.random() * 600) + 300;\n    // Doors\n    this.noDoors = Math.floor(Math.random() * 30) + 10;\n    //Travel Time\n    this.vanSpeed = Math.floor(Math.random() * 50) + 30;\n    this.vanTime = Math.floor(Math.random() * (2 * precision - 1 * precision) + 1 * precision) / (1*precision);\n  }\n\n\n\n  ngOnInit(): void {\n\n\n\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n      .subscribe(\n        (resolvedRouteData: IResolvedRouteData<woodDetailsModel>) => {\n          // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n          this.subscriptions = ResolverHelper.extractData<woodDetailsModel>(resolvedRouteData.data, woodDetailsModel)\n            .subscribe(\n              (state) => {\n                this.details = state;\n              },\n              (error) => { }\n            );\n        },\n        (error) => { }\n      );\n  }\n\n  async presentToastCorrect() {\n    const toast = await this.toastController.create({\n      header: 'Correct!',\n      message: 'Well Done.',\n      position: 'bottom',\n      buttons: [\n        {\n          text: 'Next',\n          role: 'cancel',\n          handler: () => {\n            this.generateSides();\n            this.side3 = \"\";\n            this.side4 = \"\";\n            this.totalArea = \"\";\n            this.carpsNeeded = \"\";\n            this.totalCarps = \"\";\n            this.totalTimber = \"\";\n            this.timberPerDoor = \"\";\n            this.totalDoorTimber = \"\";\n            this.vanDistance = \"\";\n           \n          }\n        }\n      ]\n    });\n    toast.present();\n  }\n\n  async presentToastIncorrect() {\n    const toast = await this.toastController.create({\n      message: 'Try again!',\n      position: 'bottom',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n\n  calculateSimple():void {\n\n    \n\n    if (this.total == this.side1+this.side1+this.side2+this.side2) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  calculateSimpleArea():void {\n\n    \n\n    if (this.totalArea == this.side1*this.side2) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  calculateCarpenters():void {\n\n    var requiredCarps = this.carpenters / 100 * this.percentageincrease;\n    requiredCarps = Math.ceil(requiredCarps);\n    console.trace(requiredCarps);\n\n    if (this.carpsNeeded == requiredCarps && requiredCarps + this.carpenters == this.totalCarps) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n  calculateWindows():void {\n\n    var requiredTimber = this.noWindows * this.windowBoard;\n    //requiredTimber = Math.ceil(requiredTimber);\n    console.trace(requiredTimber);\n\n    if (requiredTimber == this.totalTimber) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n  calculateDoors():void {\n\n    var requiredTimber = this.noDoors * this.timberPerDoor;\n    requiredTimber = Math.round(requiredTimber * 100) / 100;\n    console.trace(requiredTimber);\n\n    if (requiredTimber == this.totalDoorTimber) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  calculateTravel():void {\n\n    var travelled = this.vanSpeed * this.vanTime;\n    travelled = Math.round(travelled * 100) / 100;\n    console.trace(travelled);\n\n    if (travelled == this.vanDistance) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { woodService } from '../wood.service';\nimport { woodDetailsModel } from './wood-details.model';\n\n@Injectable()\nexport class woodDetailsResolver implements Resolve<DataStore<woodDetailsModel>> {\n\n  constructor(private woodService: woodService) {}\n\n  resolve(route: ActivatedRouteSnapshot): DataStore<woodDetailsModel> {\n    const itemSlug = route.paramMap.get('productId');\n\n    const dataSource: Observable<woodDetailsModel> = this.woodService.getDetailsDataSource(itemSlug);\n    const dataStore: DataStore<woodDetailsModel> = this.woodService.getDetailsStore(dataSource);\n\n    return dataStore;\n  }\n}\n"]}