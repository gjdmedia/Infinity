{"version":3,"sources":["webpack:///src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking-resolvers.page.html","webpack:///src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking-resolvers.page.ts","webpack:///src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking.resolver.ts","webpack:///src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking-resolvers.page.html","webpack:///src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking-resolvers.page.ts","webpack:///src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking.resolver.ts","webpack:///src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell-resolvers.page.html","webpack:///src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell-resolvers.page.ts","webpack:///src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell.resolver.ts","webpack:///src/app/showcase/route-resolvers-ux/route-resolvers-ux.module.ts","webpack:///src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.html","webpack:///src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.ts"],"names":["BlockingResovlersPage","route","console","log","data","dataObservable","subscribe","observableValue","pageData","isShell","routeResolveData","warn","BlockingResolver","showcaseService","loadingController","create","message","loadingElement","present","dismiss","getDataSourceWithDelay","pipe","dismissLoader","deferedObservable","presentLoader","NonBlockingResolversPage","promiseObservable","promiseValue","NonBlockingResolver","observablePromise","Promise","resolve","reject","ProgressiveShellResovlersPage","resolvedRouteData","dataStore","state","error","ProgressiveShellResolver","dataSource","getSimpleDataStore","routes","path","component","RouteResolversUXModule","RouteResovlersUXPage"],"mappings":"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","file":"route-resolvers-ux-route-resolvers-ux-module-ngfactory-es5.js","sourcesContent":["<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"showcase/route-resolvers-ux\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      Blocking Resovler Showcase\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\">\n    <p>\n      Notice how the UX degrades when using <b>Blocking</b> Route Resolvers in Angular\n    </p>\n    <ion-row style=\"background-color: #FFF; padding: 10px;\">\n      <ion-col size=\"12\">\n        <div [ngStyle]=\"{'background-image': 'url(' + routeResolveData?.cover + ')'}\" style=\"background-size: cover; background-repeat: no-repeat;\">\n          <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\n            <h4 style=\"margin: 10px; text-align: center; color: #FFF;\">Heading on top of a cover image</h4>\n          </app-aspect-ratio>\n        </div>\n      </ion-col>\n      <ion-col size=\"4\">\n        <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n          <img [src]=\"routeResolveData?.image\" alt=\"Sample Image\" style=\"width: 100%; height: 100%;\"/>\n        </app-aspect-ratio>\n      </ion-col>\n      <ion-col size=\"8\">\n        <h3 style=\"margin-top: 0px;\">\n          {{ routeResolveData?.title }}\n        </h3>\n        <p>\n          {{ routeResolveData?.description }}\n        </p>\n      </ion-col>\n    </ion-row>\n  </section>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// You can also use a Class object as a shell model\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\n\n@Component({\n  selector: 'app-showcase-blocking-resolvers',\n  templateUrl: './blocking-resolvers.page.html',\n  styleUrls: ['./blocking-resolvers.page.scss']\n})\nexport class BlockingResovlersPage implements OnInit {\n  // We will assign data coming from the Route Resolver to this property\n  routeResolveData: ShowcaseShellModel;\n\n  constructor(\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    console.log('Showcase Blocking Resovlers - ngOnInit()');\n\n    if (this.route && this.route.data) {\n      const dataObservable = this.route.data;\n      console.log('Showcase Blocking Resovlers - Route Resolve Observable => dataObservable: ', dataObservable);\n\n      if (dataObservable) {\n        dataObservable.subscribe(observableValue => {\n          const pageData: ShowcaseShellModel = observableValue['data'];\n          // tslint:disable-next-line:max-line-length\n          console.log('Showcase Blocking Resovlers - Subscribe to dataObservable (will emmit just one value) => PageData (' + ((pageData && pageData.isShell) ? 'SHELL' : 'REAL') + '): ', pageData);\n          if (pageData) {\n            this.routeResolveData = pageData;\n          }\n        });\n      } else {\n        console.warn('No dataObservable coming from Route Resolver data');\n      }\n    } else {\n      console.warn('No data coming from Route Resolver');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\n\nimport { defer } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { ShowcaseService } from '../../showcase.service';\n\n@Injectable()\nexport class BlockingResolver implements Resolve<any> {\n  private loadingElement: any;\n\n  constructor(\n    private showcaseService: ShowcaseService,\n    private loadingController: LoadingController\n  ) { }\n\n  async presentLoader() {\n    this.loadingElement = await this.loadingController.create({\n      message: 'Loading ...'\n    });\n\n    await this.loadingElement.present();\n  }\n\n  async dismissLoader() {\n    if (this.loadingElement) {\n      await this.loadingElement.dismiss();\n    }\n  }\n\n  resolve() {\n    // WITHOUT LOADING INDICATOR\n\n    // Base Observable (where we get data from)\n    // const dataObservable = this.showcaseService.getData();\n\n    // Basic Resolver that returns the base Observable\n    // return dataObservable;\n\n\n    // WITH LOADING INDICATOR\n\n    // Base Observable (where we get data from)\n    const dataObservable = this.showcaseService.getDataSourceWithDelay().pipe(\n      finalize(() => {\n        console.log('dataObservable COMPLETED - HIDE LOADER');\n        this.dismissLoader();\n      })\n    );\n\n    const deferedObservable = defer(() => {\n      // Will be logged at the moment of subscription\n      console.log('dataObservable STARTED - SHOW LOADER');\n      this.presentLoader();\n      return dataObservable;\n    });\n\n    // Basic Resolver that returns the base Observable\n    return deferedObservable;\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"showcase/route-resolvers-ux\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      NON Blocking Resovler Showcase\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\">\n    <p>\n      With Non-Blocking Resolvers, page transition is immediate. However UX degrades because you are showing a static loading indicator while the server sends data back to the client.\n    </p>\n    <ng-container *ngIf=\"!routeResolveData\">\n      <div style=\"margin: 20px 40px; text-align: center;\">\n        <ion-spinner></ion-spinner>\n        <p>\n          <b>You can show a static shell while fetching data from the backend</b>\n        </p>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"routeResolveData\">\n      <ion-row style=\"background-color: #FFF; padding: 10px;\">\n        <ion-col size=\"12\">\n          <div [ngStyle]=\"{'background-image': 'url(' + routeResolveData?.cover + ')'}\" style=\"background-size: cover; background-repeat: no-repeat;\">\n            <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\n              <h4 style=\"margin: 10px; text-align: center; color: #FFF;\">Heading on top of a cover image</h4>\n            </app-aspect-ratio>\n          </div>\n        </ion-col>\n        <ion-col size=\"4\">\n          <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n            <img [src]=\"routeResolveData?.image\" alt=\"Sample Image\" style=\"width: 100%; height: 100%;\"/>\n          </app-aspect-ratio>\n        </ion-col>\n        <ion-col size=\"8\">\n          <h3 style=\"margin-top: 0px;\">\n            {{ routeResolveData?.title }}\n          </h3>\n          <p>\n            {{ routeResolveData?.description }}\n          </p>\n        </ion-col>\n      </ion-row>\n    </ng-container>\n  </section>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// You can also use a Class object as a shell model\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\n\n@Component({\n  selector: 'app-showcase-non-blocking-resolvers',\n  templateUrl: './non-blocking-resolvers.page.html',\n  styleUrls: ['./non-blocking-resolvers.page.scss']\n})\nexport class NonBlockingResolversPage implements OnInit {\n  // We will assign data coming from the Route Resolver to this property\n  routeResolveData: ShowcaseShellModel;\n\n  constructor(\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    console.log('Showcase NON Blocking Resovlers - ngOnInit()');\n\n    if (this.route && this.route.data) {\n      // We resolved a promise for the data Observable\n      const promiseObservable = this.route.data;\n      console.log('Showcase NON Blocking Resovlers - Route Resolve Observable => promiseObservable: ', promiseObservable);\n\n      if (promiseObservable) {\n        promiseObservable.subscribe(promiseValue => {\n          const dataObservable = promiseValue['data'];\n          console.log('Showcase NON Blocking Resovlers - Subscribe to promiseObservable => dataObservable: ', dataObservable);\n\n          if (dataObservable) {\n            dataObservable.subscribe(observableValue => {\n              const pageData: ShowcaseShellModel = observableValue;\n              // tslint:disable-next-line:max-line-length\n              console.log('Showcase NON Blocking Resovlers - Subscribe to dataObservable (will emmit just one value) => PageData (' + ((pageData && pageData.isShell) ? 'SHELL' : 'REAL') + '): ', pageData);\n              if (pageData) {\n                this.routeResolveData = pageData;\n              }\n            });\n          } else {\n            console.warn('No dataObservable coming from Route Resolver promiseObservable');\n          }\n        });\n      } else {\n        console.warn('No promiseObservable coming from Route Resolver data');\n      }\n    } else {\n      console.warn('No data coming from Route Resolver');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { ShowcaseService } from '../../showcase.service';\n\n@Injectable()\nexport class NonBlockingResolver implements Resolve<any> {\n\n  constructor(private showcaseService: ShowcaseService) {}\n\n  resolve() {\n\n    // Base Observable (where we get data from)\n    const dataObservable = this.showcaseService.getDataSourceWithDelay();\n\n    // NON-BLOCKING RESOLVERS\n\n    // Resolver using a ReplySubject that emits the base Observable and then completes\n    // const subject = new ReplaySubject();\n    // subject.next(dataObservable);\n    // subject.complete();\n    // return subject;\n\n    // Resolver using an Observable that emits the base Observable and then completes\n    // const observable = Observable.create((observer) => {\n    //   observer.next(dataObservable);\n    //   observer.complete();\n    // });\n    // return observable;\n\n    // Resolver using a Promise that resolves the base Observable\n    const observablePromise = new Promise((resolve, reject) => {\n      resolve(dataObservable);\n    });\n    return observablePromise;\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"showcase/route-resolvers-ux\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      Progressive Shell Showcase\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\">\n    <ion-row style=\"background-color: #FFF; padding: 10px;\">\n      <ion-col size=\"12\">\n        <app-image-shell class=\"add-overlay\" animation=\"spinner\" [display]=\"'cover'\" [src]=\"routeResolveData?.cover\" [alt]=\"'Sample Image Cover'\">\n          <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\n            <h4 style=\"margin: 10px; text-align: center; color: #FFF;\">Heading on top of a cover image</h4>\n          </app-aspect-ratio>\n        </app-image-shell>\n      </ion-col>\n      <ion-col size=\"4\">\n        <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n          <app-image-shell animation=\"spinner\" [src]=\"routeResolveData?.image\" [alt]=\"'Sample Image'\"></app-image-shell>\n        </app-aspect-ratio>\n      </ion-col>\n      <ion-col size=\"8\">\n        <h3 style=\"margin-top: 0px;\">\n          <app-text-shell [data]=\"routeResolveData?.title\"></app-text-shell>\n        </h3>\n        <p>\n          <app-text-shell animation=\"bouncing\" lines=\"3\" [data]=\"routeResolveData?.description\"></app-text-shell>\n        </p>\n      </ion-col>\n    </ion-row>\n  </section>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// You can also use a Class object as a shell model\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\n\n@Component({\n  selector: 'app-showcase-progressive-shell-resolvers',\n  templateUrl: './progressive-shell-resolvers.page.html',\n  styleUrls: ['./progressive-shell-resolvers.page.scss']\n})\nexport class ProgressiveShellResovlersPage implements OnInit {\n  // We will assign data coming from the Route Resolver to this property\n  routeResolveData: ShowcaseShellModel;\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    console.log('Showcase Progressive Shell Resovlers - ngOnInit()');\n\n    this.route.data.subscribe((resolvedRouteData) => {\n      const dataStore = resolvedRouteData['data'];\n\n      dataStore.state.subscribe(\n        (state) => {\n          this.routeResolveData = state;\n        },\n        (error) => {}\n      );\n    },\n    (error) => {});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { ShowcaseService } from '../../showcase.service';\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\nimport { Observable } from 'rxjs';\nimport { DataStore } from '../../../shell/data-store';\n\n@Injectable()\nexport class ProgressiveShellResolver implements Resolve<any> {\n\n  constructor(private showcaseService: ShowcaseService) {}\n\n  resolve() {\n    const dataSource: Observable<ShowcaseShellModel> = this.showcaseService.getDataSourceWithDelay();\n    const dataStore: DataStore<ShowcaseShellModel> = this.showcaseService.getSimpleDataStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { RouteResovlersUXPage } from './route-resolvers-ux.page';\nimport { NonBlockingResolversPage } from './non-blocking-resolvers/non-blocking-resolvers.page';\nimport { BlockingResovlersPage } from './blocking-resolvers/blocking-resolvers.page';\nimport { ProgressiveShellResovlersPage } from './progressive-shell-resolvers/progressive-shell-resolvers.page';\n\nimport { BlockingResolver } from './blocking-resolvers/blocking.resolver';\nimport { NonBlockingResolver } from './non-blocking-resolvers/non-blocking.resolver';\nimport { ProgressiveShellResolver } from './progressive-shell-resolvers/progressive-shell.resolver';\n\nimport { ShowcaseService } from '../showcase.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RouteResovlersUXPage\n  },\n  {\n    path: 'blocking-resolvers',\n    component: BlockingResovlersPage,\n    resolve: {\n      data: BlockingResolver\n    }\n  },\n  {\n    path: 'non-blocking-resolvers',\n    component: NonBlockingResolversPage,\n    resolve: {\n      data: NonBlockingResolver\n    }\n  },\n  {\n    path: 'progressive-shell-resolvers',\n    component: ProgressiveShellResovlersPage,\n    resolve: {\n      data: ProgressiveShellResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    HttpClientModule\n  ],\n  declarations: [\n    RouteResovlersUXPage,\n    BlockingResovlersPage,\n    NonBlockingResolversPage,\n    ProgressiveShellResovlersPage\n  ],\n  providers: [\n    BlockingResolver,\n    NonBlockingResolver,\n    ProgressiveShellResolver,\n    ShowcaseService\n  ]\n})\nexport class RouteResolversUXModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>\n      Improve Route Resolvers UX\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\">\n    <p>\n      Lets see the difference between the different implementations of Route Resolvers.\n    </p>\n    <h5>Blocking Route Resolvers</h5>\n    <p>\n      By default, Angular Route Resolvers won't transition to the page until the Resolver Observable completes.\n    </p>\n    <p>\n      Let's suppose the backend is slow and takes 5 seconds to fetch data and return it to the client, this is what's going to happen.\n    </p>\n    <p>\n      <b>Expected behavior:</b> Page transition will be delayed 5 seconds until the server sends data back to the client.\n    </p>\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/blocking-resolvers']\">Blocking Resolvers</ion-button>\n  </section>\n  <section class=\"showcase-section\">\n    <h5>NON-Blocking Route Resolvers</h5>\n    <p>\n      To avoid waiting for the Observable to complete, we can wrap the base Observable (the one we are getting data from) with a dummy Observable, Subject or Promise that emits the base Observable and immediately completes.\n    </p>\n    <p>\n      <b>Expected behavior:</b> Page transition will be instant and the transitioned page will show a blank state while the server sends data back to the client.\n    </p>\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/non-blocking-resolvers']\">Non-Blocking Resolvers</ion-button>\n  </section>\n  <section class=\"showcase-section\">\n    <h5>Progressive Shell Resolvers</h5>\n    <p>\n      By using the <code>DataStore</code> utility in conjunction with Angular Route Resolvers, we can solve this UX problem and make page transitions immediate.\n    </p>\n    <p>\n      This approach uses a non-blocking Resolver in conjunction with the <code>DataStore</code> utility.\n    </p>\n    <p>\n      <b>Expected behavior:</b> Page transition will be instant and the transitioned page will show some shell elements while the server sends data back to the client.\n    </p>\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/progressive-shell-resolvers']\">Progressive Shell Resolvers</ion-button>\n  </section>\n</ion-content>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-showcase-route-resolvers-ux',\n  templateUrl: './route-resolvers-ux.page.html',\n  styleUrls: ['./route-resolvers-ux.page.scss']\n})\n\nexport class RouteResovlersUXPage {\n\n  constructor() { }\n\n}\n"]}