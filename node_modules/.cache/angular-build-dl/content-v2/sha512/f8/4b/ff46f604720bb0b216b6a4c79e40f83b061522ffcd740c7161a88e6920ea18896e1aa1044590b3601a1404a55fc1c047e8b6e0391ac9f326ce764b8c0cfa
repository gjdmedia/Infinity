{"version":3,"sources":["webpack:///src/app/login/login.page.ts","webpack:///src/app/components/show-hide-password/show-hide-password.component.ts","webpack:///src/app/login/login.page.html","webpack:///src/app/login/login.module.ts","webpack:///src/app/components/show-hide-password/show-hide-password.component.html"],"names":["LoginPage","router","menu","validation_messages","type","message","loginForm","compose","required","pattern","minLength","enable","console","log","navigate","ShowHidePasswordComponent","show","input","routes","path","component","LoginPageModule"],"mappings":"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","file":"login-login-module-ngfactory-es5.js","sourcesContent":["import { Component } from '@angular/core';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MenuController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: [\n    './styles/login.page.scss'\n  ]\n})\nexport class LoginPage {\n  loginForm: FormGroup;\n\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Enter a valid email.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 5 characters long.' }\n    ]\n  };\n\n  constructor(\n    public router: Router,\n    public menu: MenuController\n  ) {\n    this.loginForm = new FormGroup({\n      'email': new FormControl('test@test.com', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      'password': new FormControl('', Validators.compose([\n        Validators.minLength(5),\n        Validators.required\n      ]))\n    });\n  }\n\n  // Disable side menu for this page\n  ionViewDidEnter(): void {\n    this.menu.enable(false);\n  }\n\n  // Restore to default when leaving this page\n  ionViewDidLeave(): void {\n    this.menu.enable(true);\n  }\n\n  doLogin(): void {\n    console.log('do Log In');\n    this.router.navigate(['app/categories']);\n  }\n\n  goToForgotPassword(): void {\n    console.log('redirect to forgot-password page');\n  }\n\n  doFacebookLogin(): void {\n    console.log('facebook login');\n    this.router.navigate(['app/categories']);\n  }\n\n  doGoogleLogin(): void {\n    console.log('google login');\n    this.router.navigate(['app/categories']);\n  }\n\n  doTwitterLogin(): void {\n    console.log('twitter login');\n    this.router.navigate(['app/categories']);\n  }\n}\n","import { Component, ContentChild } from '@angular/core';\n\nimport { IonInput } from '@ionic/angular';\n\n@Component({\n  selector: 'app-show-hide-password',\n  templateUrl: './show-hide-password.component.html',\n  styleUrls: [\n    './show-hide-password.component.scss'\n  ]\n})\nexport class ShowHidePasswordComponent {\n  show = false;\n\n  @ContentChild(IonInput) input: IonInput;\n\n  constructor() {}\n\n  toggleShow() {\n    this.show = !this.show;\n    if (this.show) {\n      this.input.type = 'text';\n    } else {\n      this.input.type = 'password';\n    }\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>Log In</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"login-content\">\n  <h2 class=\"auth-title\">\n    Welcome!\n    <br/>\n    Discover the new Ionic 5\n  </h2>\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"doLogin()\">\n    <ion-list class=\"inputs-list\" lines=\"full\">\n      <ion-item class=\"input-item\">\n        <ion-input type=\"email\" placeholder=\"Email\" formControlName=\"email\" clearInput autocapitalize=\"off\" inputmode=\"email\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.email\">\n          <div class=\"error-message\" *ngIf=\"loginForm.get('email').hasError(validation.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n\n      <ion-item class=\"input-item\">\n        <app-show-hide-password>\n          <ion-input type=\"password\" placeholder=\"Password\" formControlName=\"password\"></ion-input>\n        </app-show-hide-password>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.password\">\n          <div class=\"error-message\" *ngIf=\"loginForm.get('password').hasError(validation.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n    </ion-list>\n\n    <ion-button class=\"login-btn\" type=\"submit\" expand=\"block\" [disabled]=\"!loginForm.valid\">Log In</ion-button>\n    <ion-row class=\"other-auth-options-row\">\n      <ion-button class=\"forgot-btn\" fill=\"clear\" [routerLink]=\"['/auth/forgot-password']\">\n        Forgot Password?\n      </ion-button>\n      <ion-button class=\"signup-btn\" fill=\"clear\" [routerLink]=\"['/auth/signup']\">\n        Sign Up!\n      </ion-button>\n    </ion-row>\n  </form>\n\n  <div class=\"social-auth-options\">\n    <p class=\"options-divider\">Or</p>\n    <ion-button class=\"social-auth-btn facebook-auth-btn\" expand=\"block\" color=\"facebook\" (click)=\"doFacebookLogin()\">Log In with Facebook</ion-button>\n    <ion-button class=\"social-auth-btn google-auth-btn\" expand=\"block\" color=\"google\" (click)=\"doGoogleLogin()\">Log In with Google</ion-button>\n    <ion-button class=\"social-auth-btn twitter-auth-btn\" expand=\"block\" color=\"twitter\" (click)=\"doTwitterLogin()\">Log In with Twitter</ion-button>\n  </div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../components/components.module';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","<ng-content></ng-content>\n<a class=\"type-toggle\" (click)=\"toggleShow()\">\n\t<ion-icon class=\"show-option\" [hidden]=\"show\" name=\"eye-off-outline\"></ion-icon>\n\t<ion-icon class=\"hide-option\" [hidden]=\"!show\" name=\"eye-outline\"></ion-icon>\n  <!-- In case you want to use text instead of icons -->\n\t<!--\n  <span class=\"show-option\" [hidden]=\"show\">show</span>\n\t<span class=\"hide-option\" [hidden]=\"!show\">hide</span>\n  -->\n</a>\n"]}