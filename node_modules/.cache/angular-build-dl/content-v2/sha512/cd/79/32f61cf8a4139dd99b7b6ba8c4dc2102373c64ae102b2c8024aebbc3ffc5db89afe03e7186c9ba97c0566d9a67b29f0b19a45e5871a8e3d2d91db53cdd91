{"version":3,"sources":["./src/app/roofing/details/roofing-details.page.html","./src/app/roofing/details/roofing-details.module.ts","./src/app/roofing/details/roofing-details.resolver.ts","./src/app/roofing/details/roofing-details.page.ts"],"names":[],"mappings":"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","file":"roofing-details-roofing-details-module-ngfactory-es2015.js","sourcesContent":["<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories/roofing\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      <app-text-shell [data]=\"details?.name\"></app-text-shell>\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"roofing-details-content\">\n  <ion-row class=\"image-row\">\n    <ion-col size=\"12\">\n      <app-image-shell [display]=\"'cover'\" animation=\"spinner\" class=\"add-overlay showcase-image\"\n        [src]=\"details?.showcaseImage\">\n        <app-aspect-ratio [ratio]=\"{ w: 64, h: 40 }\">\n          <div class=\"icon-wrapper\">\n            <app-aspect-ratio [ratio]=\"{ w: 1, h: 1 }\">\n              <app-image-shell class=\"icon-image\" [src]=\"details?.icon\"></app-image-shell>\n            </app-aspect-ratio>\n          </div>\n        </app-aspect-ratio>\n      </app-image-shell>\n    </ion-col>\n  </ion-row>\n  <!-- <ion-row class=\"description-row\">\n    <ion-col size=\"9\">\n      <h3 class=\"details-name\">\n        <app-text-shell [data]=\"details?.name\"></app-text-shell>\n      </h3>\n      <p class=\"details-style\">\n        <app-text-shell [data]=\"details?.style\"></app-text-shell>\n      </p>\n    </ion-col>\n  </ion-row> -->\n\n\n\n  <ion-slides class=\"walkthrough-slides\" pager=\"true\" [options]=\"slidesOptions\">\n\n    <!-- Labour Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Labour'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Rate per hour : £</ion-label>\n                      <p [innerHTML]=\"labourCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Hours worked :</ion-label>\n                      <p [innerHTML]=\"labourHours\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Cost :</ion-label>\n                      <ion-input name=\"totalPay\" [(ngModel)]=\"totalPay\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateLabour()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Discount Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Discount'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cost of Order : £</ion-label>\n                      <p [innerHTML]=\"orderCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Discount :</ion-label>\n                      <p [innerHTML]=\"discount\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">%</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Value of discount : £</ion-label>\n                      <ion-input name=\"discountValue\" [(ngModel)]=\"discountValue\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cost after discount : £</ion-label>\n                      <ion-input name=\"finalCost\" [(ngModel)]=\"finalCost\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateDiscount()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Breakages Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Breakages'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number of tiles required :</ion-label>\n                      <p [innerHTML]=\"numberTiles\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Breakage allowance :</ion-label>\n                      <p [innerHTML]=\"breakage\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">%</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total needed : </ion-label>\n                      <ion-input name=\"totalTiles\" [(ngModel)]=\"totalTiles\" maxlength=\"6\"></ion-input>\n                      <p style=\"margin-left: 5px;\">tiles</p>\n                    </ion-item>\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateBreakages()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Pallet Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Pallet'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Intro</h4>\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number of tiles required :</ion-label>\n                      <p [innerHTML]=\"numberPalletTiles\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Tiles per pallet :</ion-label>\n                      <p [innerHTML]=\"numberPerPallet\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Pallets needed : </ion-label>\n                      <ion-input name=\"pallettsNeeded\" [(ngModel)]=\"pallettsNeeded\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculatePalletSimple()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Pallet'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Stretch</h4>\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p> Calculate the amnount of money you could earn back by selling your spare tiles.</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number of tiles required :</ion-label>\n                      <p [innerHTML]=\"numberPalletTiles\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Tiles per pallet :</ion-label>\n                      <p [innerHTML]=\"numberPerPallet\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Pallets needed : </ion-label>\n                      <ion-input name=\"pallettsNeeded\" [(ngModel)]=\"pallettsNeeded\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Tiles Ordered : </ion-label>\n                      <ion-input name=\"totalTilesOrdered\" [(ngModel)]=\"totalTilesOrdered\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Spare tiles : </ion-label>\n                      <ion-input name=\"spareTiles\" [(ngModel)]=\"spareTiles\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cost per tile : £</ion-label>\n                      <p [innerHTML]=\"costPerTile\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Spares income : £</ion-label>\n                      <ion-input name=\"sparesIncome\" [(ngModel)]=\"sparesIncome\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculatePalletAdvanced()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Cost Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Cost'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number of tiles required :</ion-label>\n                      <p [innerHTML]=\"numberTiles\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cost per tile : £</ion-label>\n                      <p [innerHTML]=\"costPerTile\" type=\"number\"></p>\n\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Delivery charge : £</ion-label>\n                      <p [innerHTML]=\"deliveryCharge\" type=\"number\"></p>\n\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cost of tiles & Delivery : </ion-label>\n                      <ion-input name=\"totalTilesCost\" [(ngModel)]=\"totalTilesCost\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">ex VAT</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>VAT : £</ion-label>\n                      <ion-input name=\"costVAT\" [(ngModel)]=\"costVAT\" maxlength=\"6\"></ion-input>\n                      <p style=\"margin-left: 5px;\">@ 20%</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total cost : </ion-label>\n                      <ion-input name=\"totalCostIncVAT\" [(ngModel)]=\"totalCostIncVAT\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">inc VAT</p>\n                    </ion-item>\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateCost()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Cement Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Cement'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Sand</h4>\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>How much sand would be required for this mixture? NB: Roofing mix is 3 parts sand to 1 part cement.</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cement: </ion-label>\n                      <p [innerHTML]=\"cement\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">kg</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Sand Required: </ion-label>\n                      <ion-input clear-input name=\"sandRequired\" [(ngModel)]=\"sandRequired\"></ion-input>\n                      <p style=\"margin-left: 5px;\">kg</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSand()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Cement'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Cement</h4>\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>How much cement would be required for this mixture? NB: Roofing mix is 3 parts sand to 1 part cement.</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Sand: </ion-label>\n                      <p [innerHTML]=\"sand1\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">kg</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cement Required: </ion-label>\n                      <ion-input clear-input name=\"cementRequired1\" [(ngModel)]=\"cementRequired1\"></ion-input>\n                      <p style=\"margin-left: 5px;\">kg</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateCement()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Cement'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Sand & Cement</h4>\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>How much sand & cement would be required for this volume of mixture? NB: Roofing mix is 3 parts sand to 1\n              part cement.</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Mixture: </ion-label>\n                      <p [innerHTML]=\"totalMix\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">kg</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cement Required: </ion-label>\n                      <ion-input clear-input name=\"cementMix\" [(ngModel)]=\"cementMix\"></ion-input>\n                      <p style=\"margin-left: 5px;\">kg</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Sand Required: </ion-label>\n                      <ion-input clear-input name=\"sandMix\" [(ngModel)]=\"sandMix\"></ion-input>\n                      <p style=\"margin-left: 5px;\">kg</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateMix()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Gable Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Gable'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>To calculate the slope use the formula: half span squared + rise squared, then find the square root to get the slope.</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Rise :</ion-label>\n                      <p [innerHTML]=\"rise\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Span :</ion-label>\n                      <p [innerHTML]=\"span\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Length :</ion-label>\n                      <p [innerHTML]=\"length\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Half span squared : </ion-label>\n                      <ion-input name=\"halfSpan\" [(ngModel)]=\"halfSpan\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Rise squared : </ion-label>\n                      <ion-input name=\"riseSquared\" [(ngModel)]=\"riseSquared\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Slope : </ion-label>\n                      <ion-input name=\"slope\" [(ngModel)]=\"slope\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Single Side Area :</ion-label>\n                      <ion-input name=\"singleArea\" [(ngModel)]=\"singleArea\" maxlength=\"6\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Area : </ion-label>\n                      <ion-input name=\"totalArea\" [(ngModel)]=\"totalArea\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateGable()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n     <!-- Tiles Calculations -->\n\n     <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Tiles'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <!-- <p>To calculate the slope use the formula: half span squared + rise squared, then find the square root to get the slope.</p> -->\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Width :</ion-label>\n                      <p [innerHTML]=\"roofWidth\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Height :</ion-label>\n                      <p [innerHTML]=\"roofHeight\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Area of single side : </ion-label>\n                      <ion-input name=\"roofArea\" [(ngModel)]=\"halfSpan\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Tiles / M2 :</ion-label>\n                      <p [innerHTML]=\"tilesPerSqM\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">tiles</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Tiles required : </ion-label>\n                      <ion-input name=\"roofTilesNeeded\" [(ngModel)]=\"roofTilesNeeded\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">tiles</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>15 % breakage allowance : </ion-label>\n                      <ion-input name=\"breakageAllowance\" [(ngModel)]=\"breakageAllowance\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">tiles</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total tiles required :</ion-label>\n                      <ion-input name=\"totalTilesRoof\" [(ngModel)]=\"totalTilesRoof\" maxlength=\"6\"></ion-input>\n                      <p style=\"margin-left: 5px;\">tiles</p>\n                    </ion-item>\n        \n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateTiles()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Gutter Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Gutter'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <!-- <p>To calculate the slope use the formula: half span squared + rise squared, then find the square root to get the slope.</p> -->\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Width :</ion-label>\n                      <p [innerHTML]=\"roofWidth\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Height :</ion-label>\n                      <p [innerHTML]=\"roofHeight\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Overhang :</ion-label>\n                      <p [innerHTML]=\"tilesPerSqM\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total guttering required :</ion-label>\n                      <ion-input name=\"totalGuttering\" [(ngModel)]=\"totalGuttering\" maxlength=\"6\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateGutter()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Job Price Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Job Price'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n            <p>To calculate the slope use the formula: half span squared + rise squared, then find the square root to get the slope.</p>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Rise :</ion-label>\n                      <p [innerHTML]=\"rise\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Span :</ion-label>\n                      <p [innerHTML]=\"span\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Length :</ion-label>\n                      <p [innerHTML]=\"length\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Half span squared : </ion-label>\n                      <ion-input name=\"halfSpan\" [(ngModel)]=\"halfSpan\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Rise squared : </ion-label>\n                      <ion-input name=\"riseSquared\" [(ngModel)]=\"riseSquared\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Slope : </ion-label>\n                      <ion-input name=\"slope\" [(ngModel)]=\"slope\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Single Side Area :</ion-label>\n                      <ion-input name=\"singleArea\" [(ngModel)]=\"singleArea\" maxlength=\"6\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Area : </ion-label>\n                      <ion-input name=\"totalArea\" [(ngModel)]=\"totalArea\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateGable()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n\n\n  </ion-slides>\n\n</ion-content>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { RoofingService } from '../roofing.service';\nimport { RoofingDetailsPage } from './roofing-details.page';\nimport { RoofingDetailsResolver } from './roofing-details.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RoofingDetailsPage,\n    resolve: {\n      data: RoofingDetailsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    RoofingDetailsPage\n  ],\n  providers: [\n    RoofingDetailsResolver,\n    RoofingService\n  ]\n})\nexport class RoofingDetailsPageModule {}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { RoofingService } from '../roofing.service';\nimport { RoofingDetailsModel } from './roofing-details.model';\n\n@Injectable()\nexport class RoofingDetailsResolver implements Resolve<DataStore<RoofingDetailsModel>> {\n\n  constructor(private roofingService: RoofingService) {}\n\n  resolve(route: ActivatedRouteSnapshot): DataStore<RoofingDetailsModel> {\n    const itemSlug = route.paramMap.get('productId');\n\n    const dataSource: Observable<RoofingDetailsModel> = this.roofingService.getDetailsDataSource(itemSlug);\n    const dataStore: DataStore<RoofingDetailsModel> = this.roofingService.getDetailsStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { Component, OnInit, AfterViewInit, ViewChild, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ToastController } from '@ionic/angular';\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { RoofingDetailsModel } from './roofing-details.model';\nimport { IonSlides, MenuController } from '@ionic/angular';\nimport { analytics } from 'firebase';\nimport { compileDirectiveFromRender2 } from '@angular/compiler/src/render3/view/compiler';\nimport { AnyTxtRecord } from 'dns';\n\n\n@Component({\n  selector: 'app-roofing-details',\n  templateUrl: './roofing-details.page.html',\n  styleUrls: [\n    './styles/roofing-details.page.scss',\n    './styles/roofing-details.shell.scss'\n  ]\n\n})\nexport class RoofingDetailsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  slidesOptions: any = {\n    zoom: {\n      toggle: false // Disable zooming to prevent weird double tap zomming on slide images\n    }\n  };\n\n\n  subscriptions: Subscription;\n\n  // Labour\n\n  labourCost: any;\n  labourHours: any;\n  totalPay: any;\n\n  // Discount\n  orderCost: any;\n  discount: any;\n  discountValue: any;\n  finalCost: any;\n\n  //Breakages\n  numberTiles: any;\n  breakage: any;\n  totalTiles: any;\n\n  // Pallet & Cost\n  numberPalletTiles: any;\n  numberPerPallet: any;\n  pallettsNeeded: any;\n  totalTilesOrdered: any;\n  spareTiles: any;\n  costPerTile: any;\n  sparesIncome: any;\n  deliveryCharge: any;\n  costVAT: any;\n  totalTilesCost: any;\n  totalCostIncVAT: any;\n\n   // Cement\n\n   cement: any;\n   cementRequired: any;\n   sand: any;\n   sandRequired: any;\n   cement1: any;\n   cementRequired1: any;\n   sand1: any;\n   sandRequired1: any;\n   totalMix: any;\n   sandMix: any;\n   cementMix: any;\n\n   // Gable\n  rise:any;\n  span:any;\n  length:any;\n  slope:any;\n  singleArea:any;\n  totalArea:any;\n  halfSpan:any;\n  riseSquared:any;\n\n  //Tiles & Gutter\n  roofWidth:any;\n  roofHeight:any;\n  roofArea:any;\n  tilesPerSqM:any;\n  roofTilesNeeded:any;\n  breakageAllowance:any;\n  totalTilesRoof:any;\n  totalGuttering:any;\n  \n  \n\n  details: RoofingDetailsModel;\n\n  @ViewChild(IonSlides, { static: true }) slides: IonSlides;\n\n  @HostBinding('class.first-slide-active') isFirstSlide = true;\n\n  @HostBinding('class.last-slide-active') isLastSlide = false;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.details && this.details.isShell) ? true : false;\n  }\n\n\n\n  constructor(public menu: MenuController, private route: ActivatedRoute, public toastController: ToastController) {\n\n    this.generateSides();\n\n  }\n\n  // Disable side menu for this page\n  ionViewDidEnter(): void {\n    this.menu.enable(true);\n  }\n\n  // Restore to default when leaving this page\n  ionViewDidLeave(): void {\n    this.menu.enable(true);\n  }\n\n  ngAfterViewInit(): void {\n    // ViewChild is set\n    this.slides.isBeginning().then(isBeginning => {\n      this.isFirstSlide = isBeginning;\n    });\n    this.slides.isEnd().then(isEnd => {\n      this.isLastSlide = isEnd;\n    });\n\n    // Subscribe to changes\n    this.slides.ionSlideWillChange.subscribe(changes => {\n      this.slides.isBeginning().then(isBeginning => {\n        this.isFirstSlide = isBeginning;\n      });\n      this.slides.isEnd().then(isEnd => {\n        this.isLastSlide = isEnd;\n      });\n    });\n  }\n\n  skipWalkthrough(): void {\n    // Skip to the last slide\n    this.slides.length().then(length => {\n      this.slides.slideTo(length);\n    });\n  }\n\n  generateSides(): void {\n    var precision = 100; // 2 decimals\n\n    // Labour\n    this.labourHours = Math.floor(Math.random() * 30) + 10;\n    this.labourCost = Math.floor(Math.random() * (25.99 * precision - 1.00 * precision) + 1 * precision) / (1 * precision);\n\n    // Discount\n    this.discount = Math.floor(Math.random() * 30) + 10;\n    this.orderCost = Math.floor(Math.random() * (250.99 * precision - 100.00 * precision) + 1 * precision) / (1 * precision);\n\n    // Breakages\n    this.numberTiles = Math.floor(Math.random() * 900) + 700;\n    this.breakage = Math.floor(Math.random() * 30) + 1;\n\n    //Pallet & Cost\n    this.numberPalletTiles = Math.floor(Math.random() * 3500) + 700;\n    this.numberPerPallet = Math.floor(Math.random() * 300) + 200;\n    this.costPerTile = Math.floor(Math.random() * (0.99 * precision - 0.4 * precision) + 1 * precision) / (1 * precision);\n    this.deliveryCharge = Math.floor(Math.random() * 70) + 20;\n\n     //Cement\n     this.cement = Math.floor(Math.random() * 100) + 10;\n     this.sand = this.cement * 3;\n     this.cement1 = Math.floor(Math.random() * 100) + 10;\n     this.sand1 = this.cement1 * 3;\n     this.totalMix = Math.floor(Math.random() * 150) + 10;\n\n     // Gable\n     this.span = Math.floor(Math.random() * 15) + 5;\n     this.rise = Math.round(this.span * 0.4 *10) / 10;\n     this.length = Math.floor(Math.random() * 15) + 5;\n\n     //Tiles & Gutter\n     this.roofWidth = Math.floor(Math.random() * 15) + 5;\n     this.roofHeight = Math.round(this.span * 0.4 *10) / 10;\n     this.tilesPerSqM = Math.floor(Math.random() * 60) + 40;\n\n\n  }\n\n\n\n  ngOnInit(): void {\n\n\n\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n      .subscribe(\n        (resolvedRouteData: IResolvedRouteData<RoofingDetailsModel>) => {\n          // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n          this.subscriptions = ResolverHelper.extractData<RoofingDetailsModel>(resolvedRouteData.data, RoofingDetailsModel)\n            .subscribe(\n              (state) => {\n                this.details = state;\n              },\n              (error) => { }\n            );\n        },\n        (error) => { }\n      );\n  }\n\n  async presentToastCorrect() {\n    const toast = await this.toastController.create({\n      header: 'Correct!',\n      message: 'Well Done.',\n      position: 'bottom',\n      buttons: [\n        {\n          text: 'Next',\n          role: 'cancel',\n          handler: () => {\n            this.generateSides();\n            this.totalPay = \"\";\n            this.discountValue = \"\";\n            this.finalCost = \"\";\n            this.totalTiles = \"\";\n            this.pallettsNeeded = \"\";\n            this.totalTilesOrdered = \"\";\n            this.spareTiles = \"\";\n            this.sparesIncome = \"\";\n            this.totalTilesCost = \"\";\n            this.costVAT = \"\";\n            this.totalCostIncVAT = \"\";\n            this.sandRequired = \"\";\n            this.cementRequired = \"\";\n            this.sandRequired1 = \"\";\n            this.cementRequired1 = \"\";\n            this.sandMix = \"\";\n            this.cementMix = \"\";\n            this.halfSpan = \"\";\n            this.riseSquared = \"\";\n            this.slope = \"\";\n            this.singleArea = \"\";\n            this.totalArea = \"\";\n            this.roofArea = \"\";\n            this.roofTilesNeeded = \"\";\n            this.breakageAllowance = \"\";\n            this.totalTilesRoof = \"\";\n            this.totalGuttering = \"\";\n          }\n        }\n      ]\n    });\n    toast.present();\n  }\n\n  async presentToastIncorrect() {\n    const toast = await this.toastController.create({\n      message: 'Try again!',\n      position: 'bottom',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  calculateLabour(): void {\n\n    var pay = Math.round((this.labourCost * this.labourHours) * 100) / 100;\n    console.trace(pay);\n\n    if (pay == this.totalPay) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateDiscount(): void {\n\n    var discAmount = Math.round(this.orderCost * (this.discount / 100) * 100) / 100;\n    console.trace(\"OrderCost: £\" + this.orderCost + \" Discount : £\" + discAmount);\n\n    if (discAmount == this.discountValue && this.finalCost == this.orderCost - discAmount) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateBreakages(): void {\n\n    console.trace(this.numberTiles)\n    console.trace(this.breakage)\n\n    var breakAllowance = Math.ceil(this.numberTiles * (this.breakage / 100));\n    console.trace(breakAllowance);\n\n    if (this.numberTiles + breakAllowance == this.totalTiles) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculatePalletSimple(): void {\n\n    console.trace(this.numberPalletTiles)\n    console.trace(this.numberPerPallet)\n\n    var PalsNeeded = Math.ceil(this.numberPalletTiles / this.numberPerPallet);\n    console.trace(PalsNeeded);\n\n    if (this.pallettsNeeded == PalsNeeded) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n  calculatePalletAdvanced(): void {\n\n    console.trace(this.numberPalletTiles)\n    console.trace(this.numberPerPallet)\n\n    var PalsNeeded = Math.ceil(this.numberPalletTiles / this.numberPerPallet);\n    console.trace(PalsNeeded);\n\n    var spares = this.numberPerPallet * this.pallettsNeeded - this.numberPalletTiles;\n    console.trace(spares);\n\n    if (this.sparesIncome == spares * this.costPerTile) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateCost(): void {\n\n    var costXvat = Math.round((this.numberTiles * this.costPerTile + this.deliveryCharge) * 100) / 100;\n    var vat = Math.ceil((costXvat *0.02) *100) / 100;\n    var costWithVAT = Math.ceil((costXvat + vat) * 100) / 100;\n    console.trace(costXvat + \" \" + vat + \" \" + costWithVAT)\n\n    if (costWithVAT == this.totalCostIncVAT) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateSand(): void {\n\n\n\n    if (this.sand == this.sandRequired) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n  calculateCement(): void {\n\n\n\n    if (this.cement1 == this.cementRequired1) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n  calculateMix(): void {\n\n    var part = this.totalMix / 4;\n\n\n\n    if (this.cementMix == part && this.sandMix == (part * 3)) {\n      console.trace('Correct!');\n\n      this.presentToastCorrect();\n\n\n    } else {\n\n      this.presentToastIncorrect();\n    }\n\n  }\n\n  calculateGable(): void {\n\n    var halfSpanSq = Math.round((this.span / 2) * (this.span / 2) * 100) / 100 ;\n    var riseSq = Math.round((this.rise * this.rise) * 100)/ 100;\n\n    var slopeRoot = Math.round((Math.sqrt(halfSpanSq + riseSq)) * 100) / 100;\n    \n    console.trace(halfSpanSq + \" \" + riseSq + \" \" + slopeRoot);\n\n    var ssArea = this.length * slopeRoot;\n\n     if (ssArea*2 == this.totalArea) {\n       console.trace('Correct!');\n\n       this.presentToastCorrect();\n\n\n     } else {\n\n       this.presentToastIncorrect();\n    }\n\n    \n\n  }\n\n  calculateTiles(): void {\n\n    var area = Math.round((this.roofWidth * this.roofHeight) * 100) / 100 ;\n    var required = Math.ceil(area * this.tilesPerSqM);\n    var spareBreak = Math.ceil(required *0.15);\n     console.trace(required + \" \" + spareBreak);\n    \n\n     if (required + spareBreak == this.totalTilesRoof) {\n       console.trace('Correct!');\n\n       this.presentToastCorrect();\n\n\n     } else {\n\n       this.presentToastIncorrect();\n    }\n\n    \n\n  }\n\n  calculateGutter(): void {\n\n    var gutterRequired = this.roofHeight + this.roofHeight + this.roofWidth + this.roofWidth;\n    var hang = Math.round(((this.tilesPerSqM /1000) * 4) * 100 )/ 100;\n    \n\n     if (gutterRequired + hang == this.totalGuttering) {\n       console.trace('Correct!');\n\n       this.presentToastCorrect();\n\n\n     } else {\n\n       this.presentToastIncorrect();\n    }\n\n    \n\n  }\n\n\n\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n"],"sourceRoot":"webpack:///"}