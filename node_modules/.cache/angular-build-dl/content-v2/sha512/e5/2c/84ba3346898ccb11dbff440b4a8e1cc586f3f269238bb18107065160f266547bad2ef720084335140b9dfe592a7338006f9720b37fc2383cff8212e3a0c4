{"version":3,"sources":["webpack:///src/app/language/language.service.ts","webpack:///src/app/user/profile/user-profile.page.ts","webpack:///src/app/utils/resolver-helper.ts","webpack:///src/app/user/profile/user-profile.page.html","webpack:///src/app/user/profile/user-profile.module.ts","webpack:///src/app/user/profile/user-profile.resolver.ts"],"names":["LanguageService","languages","Array","push","name","code","UserProfilePage","route","translate","languageService","alertController","available_languages","subscriptions","data","subscribe","resolvedRouteData","extractData","state","profile","getTranslations","onLangChange","error","unsubscribe","getTranslation","currentLang","translations","getLanguages","map","item","type","label","value","checked","create","header","SELECT_LANGUAGE","inputs","cssClass","buttons","text","CANCEL","role","handler","OK","use","alert","present","isShell","ResolverHelper","source","constructor","routes","path","component","resolve","UserProfilePageModule","UserProfileResolver","userService","dataSource","getProfileDataSource","dataStore","getProfileStore"],"mappings":"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","file":"user-profile-user-profile-module-ngfactory-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { LanguageModel } from './language.model';\n\n@Injectable()\nexport class LanguageService {\n  languages: Array<LanguageModel> = new Array<LanguageModel>();\n\n   constructor() {\n     this.languages.push(\n      { name: 'English', code: 'en' },\n      { name: 'Spanish', code: 'es' },\n      { name: 'French', code: 'fr' }\n     );\n   }\n\n   getLanguages() {\n     return this.languages;\n   }\n\n }\n","import { Component, OnInit, HostBinding, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { UserProfileModel } from './user-profile.model';\nimport { AlertController } from '@ionic/angular';\n\nimport { LanguageService } from '../../language/language.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.page.html',\n  styleUrls: [\n    './styles/user-profile.page.scss',\n    './styles/user-profile.shell.scss',\n    './styles/user-profile.ios.scss',\n    './styles/user-profile.md.scss'\n  ],\n})\nexport class UserProfilePage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  profile: UserProfileModel;\n  available_languages = [];\n  translations;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.profile && this.profile.isShell) ? true : false;\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    public translate: TranslateService,\n    public languageService: LanguageService,\n    public alertController: AlertController\n  ) { }\n\n\n  ngOnInit(): void {\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<UserProfileModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<UserProfileModel>(resolvedRouteData.data, UserProfileModel)\n        .subscribe(\n          (state) => {\n            this.profile = state;\n\n            // get translations for this page to use in the Language Chooser Alert\n            this.getTranslations();\n\n            this.translate.onLangChange.subscribe(() => {\n              this.getTranslations();\n            });\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n\n  getTranslations() {\n    // get translations for this page to use in the Language Chooser Alert\n    this.translate.getTranslation(this.translate.currentLang)\n    .subscribe((translations) => {\n      this.translations = translations;\n    });\n  }\n\n  async openLanguageChooser() {\n    this.available_languages = this.languageService.getLanguages()\n    .map(item =>\n      ({\n        name: item.name,\n        type: 'radio',\n        label: item.name,\n        value: item.code,\n        checked: item.code === this.translate.currentLang\n      })\n    );\n\n    const alert = await this.alertController.create({\n      header: this.translations.SELECT_LANGUAGE,\n      inputs: this.available_languages,\n      cssClass: 'language-alert',\n      buttons: [\n        {\n          text: this.translations.CANCEL,\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {}\n        }, {\n          text: this.translations.OK,\n          handler: (data) => {\n            if (data) {\n              this.translate.use(data);\n            }\n          }\n        }\n      ]\n    });\n    await alert.present();\n\n  }\n}\n","import { DataStore } from '../shell/data-store';\nimport { Observable, of } from 'rxjs';\n\nexport interface IResolvedRouteData<T> {\n  data: T | DataStore<T>;\n}\n\nexport class ResolverHelper<T> {\n  // More info on function overloads here: https://www.typescriptlang.org/docs/handbook/functions.html#overloads\n  public static extractData<T>(source: (T | DataStore<T>), constructor: (new(...args: any[]) => T)): Observable<T> {\n    if (source instanceof DataStore) {\n      return source.state;\n    } else if (source instanceof constructor) {\n      // The right side of instanceof should be an expression evaluating to a constructor function (ie. a class), not a type\n      // That's why we included an extra parameter which acts as a constructor function for type T\n      // (see: https://github.com/microsoft/TypeScript/issues/5236)\n      return of(source);\n    }\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"user-profile-content\">\n  <ion-row class=\"user-details-section\">\n    <ion-col class=\"user-image-wrapper\">\n      <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n        <app-image-shell class=\"user-image\" animation=\"spinner\" [src]=\"profile.userImage\"></app-image-shell>\n      </app-aspect-ratio>\n    </ion-col>\n    <ion-col class=\"user-info-wrapper\">\n      <ion-row class=\"user-data-row\">\n        <ion-col size=\"9\">\n          <h3 class=\"user-name\">\n            <app-text-shell [data]=\"profile.name\"></app-text-shell>\n          </h3>\n          <h5 class=\"user-title\">\n            <app-text-shell [data]=\"profile.job\"></app-text-shell>\n          </h5>\n        </ion-col>\n        <ion-col class=\"membership-col\">\n          <span class=\"user-membership\">\n            <app-text-shell [data]=\"profile.membership\"></app-text-shell>\n          </span>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"actions-row\">\n        <ion-col class=\"main-actions\">\n          <ion-button class=\"call-to-action-btn\" size=\"small\" color=\"primary\">{{ 'FOLLOW' | translate }}</ion-button>\n          <ion-button class=\"call-to-action-btn\" size=\"small\" color=\"medium\">{{ 'MESSAGE' | translate }}</ion-button>\n        </ion-col>\n        <ion-col class=\"secondary-actions\">\n          <ion-button class=\"more-btn\" size=\"small\" fill=\"clear\" color=\"medium\" (click)=\"openLanguageChooser()\">\n            <ion-icon slot=\"icon-only\" ios=\"ellipsis-horizontal\" md=\"ellipsis-vertical\"></ion-icon>\n          </ion-button>\n        </ion-col>\n      </ion-row>\n    </ion-col>\n  </ion-row>\n  <ion-row class=\"user-stats-section\">\n    <ion-col class=\"user-stats-wrapper\" size=\"4\">\n      <span class=\"stat-value\">\n        <app-text-shell [data]=\"profile.likes\"></app-text-shell>\n      </span>\n      <span class=\"stat-name\">{{ 'LIKES' | translate }}</span>\n    </ion-col>\n    <ion-col class=\"user-stats-wrapper\" size=\"4\">\n      <span class=\"stat-value\">\n        <app-text-shell [data]=\"profile.followers\"></app-text-shell>\n      </span>\n      <span class=\"stat-name\">{{ 'FOLLOWERS' | translate }}</span>\n    </ion-col>\n    <ion-col class=\"user-stats-wrapper\" size=\"4\">\n      <span class=\"stat-value\">\n        <app-text-shell [data]=\"profile.following\"></app-text-shell>\n      </span>\n      <span class=\"stat-name\">{{ 'FOLLOWING' | translate }}</span>\n    </ion-col>\n  </ion-row>\n  <div class=\"user-about-section\">\n    <h3 class=\"details-section-title\">{{ 'ABOUT' | translate }}</h3>\n    <p class=\"user-description\">\n      <app-text-shell animation=\"bouncing\" lines=\"4\" [data]=\"profile.about\"></app-text-shell>\n    </p>\n  </div>\n  <div class=\"user-friends-section\">\n    <ion-row class=\"heading-row\">\n      <h3 class=\"details-section-title\">{{ 'FRIENDS' | translate }}</h3>\n      <a class=\"heading-call-to-action\" [routerLink]=\"['/app/user/friends']\">{{ 'SEE_ALL' | translate }}</a>\n    </ion-row>\n    <ion-row class=\"friends-row\">\n      <ion-col class=\"friend-item\" size=\"2\" *ngFor=\"let friend of profile.friends\">\n        <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n          <app-image-shell class=\"friend-picture\" [src]=\"friend.image\"></app-image-shell>\n        </app-aspect-ratio>\n        <span class=\"friend-name\">\n          <app-text-shell [data]=\"friend.name\"></app-text-shell>\n        </span>\n      </ion-col>\n    </ion-row>\n  </div>\n\n  <div class=\"user-photos-section\">\n    <ion-row class=\"heading-row\">\n      <h3 class=\"details-section-title\">{{ 'PHOTOS' | translate }}</h3>\n      <a class=\"heading-call-to-action\">{{ 'SEE_ALL' | translate }}</a>\n    </ion-row>\n    <ion-row class=\"pictures-row\">\n      <ion-col class=\"picture-item\" size=\"2\" *ngFor=\"let photo of profile.photos\">\n        <app-image-shell [display]=\"'cover'\" [src]=\"photo.image\" class=\"user-photo-image\">\n          <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n          </app-aspect-ratio>\n        </app-image-shell>\n      </ion-col>\n    </ion-row>\n  </div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserService } from '../user.service';\nimport { UserProfilePage } from './user-profile.page';\nimport { UserProfileResolver } from './user-profile.resolver';\nimport { ComponentsModule } from '../../components/components.module';\nimport { LanguageService } from '../../language/language.service';\nimport { TranslateModule } from '@ngx-translate/core';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserProfilePage,\n    resolve: {\n      data: UserProfileResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    TranslateModule,\n    ComponentsModule,\n    RouterModule.forChild(routes),\n    HttpClientModule\n  ],\n  declarations: [UserProfilePage],\n  providers: [\n    UserProfileResolver,\n    UserService,\n    LanguageService\n  ]\n})\nexport class UserProfilePageModule {}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { UserService } from '../user.service';\nimport { UserProfileModel } from './user-profile.model';\n\n@Injectable()\nexport class UserProfileResolver implements Resolve<DataStore<UserProfileModel>> {\n\n  constructor(private userService: UserService) { }\n\n  resolve(): DataStore<UserProfileModel> {\n    const dataSource: Observable<UserProfileModel> = this.userService.getProfileDataSource();\n    const dataStore: DataStore<UserProfileModel> = this.userService.getProfileStore(dataSource);\n\n    return dataStore;\n  }\n}\n"]}