{"version":3,"sources":["./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell-resolvers.page.html","./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking-resolvers.page.html","./src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.html","./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking-resolvers.page.html","./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking-resolvers.page.ts","./src/app/showcase/route-resolvers-ux/route-resolvers-ux.module.ts","./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell.resolver.ts","./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking.resolver.ts","./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking.resolver.ts","./src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.ts","./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking-resolvers.page.ts","./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell-resolvers.page.ts"],"names":[],"mappings":"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","file":"route-resolvers-ux-route-resolvers-ux-module-ngfactory-es2015.js","sourcesContent":["<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"showcase/route-resolvers-ux\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      Progressive Shell Showcase\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\">\n    <ion-row style=\"background-color: #FFF; padding: 10px;\">\n      <ion-col size=\"12\">\n        <app-image-shell class=\"add-overlay\" animation=\"spinner\" [display]=\"'cover'\" [src]=\"routeResolveData?.cover\" [alt]=\"'Sample Image Cover'\">\n          <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\n            <h4 style=\"margin: 10px; text-align: center; color: #FFF;\">Heading on top of a cover image</h4>\n          </app-aspect-ratio>\n        </app-image-shell>\n      </ion-col>\n      <ion-col size=\"4\">\n        <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n          <app-image-shell animation=\"spinner\" [src]=\"routeResolveData?.image\" [alt]=\"'Sample Image'\"></app-image-shell>\n        </app-aspect-ratio>\n      </ion-col>\n      <ion-col size=\"8\">\n        <h3 style=\"margin-top: 0px;\">\n          <app-text-shell [data]=\"routeResolveData?.title\"></app-text-shell>\n        </h3>\n        <p>\n          <app-text-shell animation=\"bouncing\" lines=\"3\" [data]=\"routeResolveData?.description\"></app-text-shell>\n        </p>\n      </ion-col>\n    </ion-row>\n  </section>\n</ion-content>\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"showcase/route-resolvers-ux\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      Blocking Resovler Showcase\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\">\n    <p>\n      Notice how the UX degrades when using <b>Blocking</b> Route Resolvers in Angular\n    </p>\n    <ion-row style=\"background-color: #FFF; padding: 10px;\">\n      <ion-col size=\"12\">\n        <div [ngStyle]=\"{'background-image': 'url(' + routeResolveData?.cover + ')'}\" style=\"background-size: cover; background-repeat: no-repeat;\">\n          <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\n            <h4 style=\"margin: 10px; text-align: center; color: #FFF;\">Heading on top of a cover image</h4>\n          </app-aspect-ratio>\n        </div>\n      </ion-col>\n      <ion-col size=\"4\">\n        <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n          <img [src]=\"routeResolveData?.image\" alt=\"Sample Image\" style=\"width: 100%; height: 100%;\"/>\n        </app-aspect-ratio>\n      </ion-col>\n      <ion-col size=\"8\">\n        <h3 style=\"margin-top: 0px;\">\n          {{ routeResolveData?.title }}\n        </h3>\n        <p>\n          {{ routeResolveData?.description }}\n        </p>\n      </ion-col>\n    </ion-row>\n  </section>\n</ion-content>\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>\n      Improve Route Resolvers UX\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\">\n    <p>\n      Lets see the difference between the different implementations of Route Resolvers.\n    </p>\n    <h5>Blocking Route Resolvers</h5>\n    <p>\n      By default, Angular Route Resolvers won't transition to the page until the Resolver Observable completes.\n    </p>\n    <p>\n      Let's suppose the backend is slow and takes 5 seconds to fetch data and return it to the client, this is what's going to happen.\n    </p>\n    <p>\n      <b>Expected behavior:</b> Page transition will be delayed 5 seconds until the server sends data back to the client.\n    </p>\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/blocking-resolvers']\">Blocking Resolvers</ion-button>\n  </section>\n  <section class=\"showcase-section\">\n    <h5>NON-Blocking Route Resolvers</h5>\n    <p>\n      To avoid waiting for the Observable to complete, we can wrap the base Observable (the one we are getting data from) with a dummy Observable, Subject or Promise that emits the base Observable and immediately completes.\n    </p>\n    <p>\n      <b>Expected behavior:</b> Page transition will be instant and the transitioned page will show a blank state while the server sends data back to the client.\n    </p>\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/non-blocking-resolvers']\">Non-Blocking Resolvers</ion-button>\n  </section>\n  <section class=\"showcase-section\">\n    <h5>Progressive Shell Resolvers</h5>\n    <p>\n      By using the <code>DataStore</code> utility in conjunction with Angular Route Resolvers, we can solve this UX problem and make page transitions immediate.\n    </p>\n    <p>\n      This approach uses a non-blocking Resolver in conjunction with the <code>DataStore</code> utility.\n    </p>\n    <p>\n      <b>Expected behavior:</b> Page transition will be instant and the transitioned page will show some shell elements while the server sends data back to the client.\n    </p>\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/progressive-shell-resolvers']\">Progressive Shell Resolvers</ion-button>\n  </section>\n</ion-content>\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"showcase/route-resolvers-ux\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      NON Blocking Resovler Showcase\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\">\n    <p>\n      With Non-Blocking Resolvers, page transition is immediate. However UX degrades because you are showing a static loading indicator while the server sends data back to the client.\n    </p>\n    <ng-container *ngIf=\"!routeResolveData\">\n      <div style=\"margin: 20px 40px; text-align: center;\">\n        <ion-spinner></ion-spinner>\n        <p>\n          <b>You can show a static shell while fetching data from the backend</b>\n        </p>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"routeResolveData\">\n      <ion-row style=\"background-color: #FFF; padding: 10px;\">\n        <ion-col size=\"12\">\n          <div [ngStyle]=\"{'background-image': 'url(' + routeResolveData?.cover + ')'}\" style=\"background-size: cover; background-repeat: no-repeat;\">\n            <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\n              <h4 style=\"margin: 10px; text-align: center; color: #FFF;\">Heading on top of a cover image</h4>\n            </app-aspect-ratio>\n          </div>\n        </ion-col>\n        <ion-col size=\"4\">\n          <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n            <img [src]=\"routeResolveData?.image\" alt=\"Sample Image\" style=\"width: 100%; height: 100%;\"/>\n          </app-aspect-ratio>\n        </ion-col>\n        <ion-col size=\"8\">\n          <h3 style=\"margin-top: 0px;\">\n            {{ routeResolveData?.title }}\n          </h3>\n          <p>\n            {{ routeResolveData?.description }}\n          </p>\n        </ion-col>\n      </ion-row>\n    </ng-container>\n  </section>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// You can also use a Class object as a shell model\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\n\n@Component({\n  selector: 'app-showcase-blocking-resolvers',\n  templateUrl: './blocking-resolvers.page.html',\n  styleUrls: ['./blocking-resolvers.page.scss']\n})\nexport class BlockingResovlersPage implements OnInit {\n  // We will assign data coming from the Route Resolver to this property\n  routeResolveData: ShowcaseShellModel;\n\n  constructor(\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    console.log('Showcase Blocking Resovlers - ngOnInit()');\n\n    if (this.route && this.route.data) {\n      const dataObservable = this.route.data;\n      console.log('Showcase Blocking Resovlers - Route Resolve Observable => dataObservable: ', dataObservable);\n\n      if (dataObservable) {\n        dataObservable.subscribe(observableValue => {\n          const pageData: ShowcaseShellModel = observableValue['data'];\n          // tslint:disable-next-line:max-line-length\n          console.log('Showcase Blocking Resovlers - Subscribe to dataObservable (will emmit just one value) => PageData (' + ((pageData && pageData.isShell) ? 'SHELL' : 'REAL') + '): ', pageData);\n          if (pageData) {\n            this.routeResolveData = pageData;\n          }\n        });\n      } else {\n        console.warn('No dataObservable coming from Route Resolver data');\n      }\n    } else {\n      console.warn('No data coming from Route Resolver');\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { RouteResovlersUXPage } from './route-resolvers-ux.page';\nimport { NonBlockingResolversPage } from './non-blocking-resolvers/non-blocking-resolvers.page';\nimport { BlockingResovlersPage } from './blocking-resolvers/blocking-resolvers.page';\nimport { ProgressiveShellResovlersPage } from './progressive-shell-resolvers/progressive-shell-resolvers.page';\n\nimport { BlockingResolver } from './blocking-resolvers/blocking.resolver';\nimport { NonBlockingResolver } from './non-blocking-resolvers/non-blocking.resolver';\nimport { ProgressiveShellResolver } from './progressive-shell-resolvers/progressive-shell.resolver';\n\nimport { ShowcaseService } from '../showcase.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RouteResovlersUXPage\n  },\n  {\n    path: 'blocking-resolvers',\n    component: BlockingResovlersPage,\n    resolve: {\n      data: BlockingResolver\n    }\n  },\n  {\n    path: 'non-blocking-resolvers',\n    component: NonBlockingResolversPage,\n    resolve: {\n      data: NonBlockingResolver\n    }\n  },\n  {\n    path: 'progressive-shell-resolvers',\n    component: ProgressiveShellResovlersPage,\n    resolve: {\n      data: ProgressiveShellResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    HttpClientModule\n  ],\n  declarations: [\n    RouteResovlersUXPage,\n    BlockingResovlersPage,\n    NonBlockingResolversPage,\n    ProgressiveShellResovlersPage\n  ],\n  providers: [\n    BlockingResolver,\n    NonBlockingResolver,\n    ProgressiveShellResolver,\n    ShowcaseService\n  ]\n})\nexport class RouteResolversUXModule {}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { ShowcaseService } from '../../showcase.service';\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\nimport { Observable } from 'rxjs';\nimport { DataStore } from '../../../shell/data-store';\n\n@Injectable()\nexport class ProgressiveShellResolver implements Resolve<any> {\n\n  constructor(private showcaseService: ShowcaseService) {}\n\n  resolve() {\n    const dataSource: Observable<ShowcaseShellModel> = this.showcaseService.getDataSourceWithDelay();\n    const dataStore: DataStore<ShowcaseShellModel> = this.showcaseService.getSimpleDataStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\n\nimport { defer } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { ShowcaseService } from '../../showcase.service';\n\n@Injectable()\nexport class BlockingResolver implements Resolve<any> {\n  private loadingElement: any;\n\n  constructor(\n    private showcaseService: ShowcaseService,\n    private loadingController: LoadingController\n  ) { }\n\n  async presentLoader() {\n    this.loadingElement = await this.loadingController.create({\n      message: 'Loading ...'\n    });\n\n    await this.loadingElement.present();\n  }\n\n  async dismissLoader() {\n    if (this.loadingElement) {\n      await this.loadingElement.dismiss();\n    }\n  }\n\n  resolve() {\n    // WITHOUT LOADING INDICATOR\n\n    // Base Observable (where we get data from)\n    // const dataObservable = this.showcaseService.getData();\n\n    // Basic Resolver that returns the base Observable\n    // return dataObservable;\n\n\n    // WITH LOADING INDICATOR\n\n    // Base Observable (where we get data from)\n    const dataObservable = this.showcaseService.getDataSourceWithDelay().pipe(\n      finalize(() => {\n        console.log('dataObservable COMPLETED - HIDE LOADER');\n        this.dismissLoader();\n      })\n    );\n\n    const deferedObservable = defer(() => {\n      // Will be logged at the moment of subscription\n      console.log('dataObservable STARTED - SHOW LOADER');\n      this.presentLoader();\n      return dataObservable;\n    });\n\n    // Basic Resolver that returns the base Observable\n    return deferedObservable;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { ShowcaseService } from '../../showcase.service';\n\n@Injectable()\nexport class NonBlockingResolver implements Resolve<any> {\n\n  constructor(private showcaseService: ShowcaseService) {}\n\n  resolve() {\n\n    // Base Observable (where we get data from)\n    const dataObservable = this.showcaseService.getDataSourceWithDelay();\n\n    // NON-BLOCKING RESOLVERS\n\n    // Resolver using a ReplySubject that emits the base Observable and then completes\n    // const subject = new ReplaySubject();\n    // subject.next(dataObservable);\n    // subject.complete();\n    // return subject;\n\n    // Resolver using an Observable that emits the base Observable and then completes\n    // const observable = Observable.create((observer) => {\n    //   observer.next(dataObservable);\n    //   observer.complete();\n    // });\n    // return observable;\n\n    // Resolver using a Promise that resolves the base Observable\n    const observablePromise = new Promise((resolve, reject) => {\n      resolve(dataObservable);\n    });\n    return observablePromise;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-showcase-route-resolvers-ux',\n  templateUrl: './route-resolvers-ux.page.html',\n  styleUrls: ['./route-resolvers-ux.page.scss']\n})\n\nexport class RouteResovlersUXPage {\n\n  constructor() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// You can also use a Class object as a shell model\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\n\n@Component({\n  selector: 'app-showcase-non-blocking-resolvers',\n  templateUrl: './non-blocking-resolvers.page.html',\n  styleUrls: ['./non-blocking-resolvers.page.scss']\n})\nexport class NonBlockingResolversPage implements OnInit {\n  // We will assign data coming from the Route Resolver to this property\n  routeResolveData: ShowcaseShellModel;\n\n  constructor(\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    console.log('Showcase NON Blocking Resovlers - ngOnInit()');\n\n    if (this.route && this.route.data) {\n      // We resolved a promise for the data Observable\n      const promiseObservable = this.route.data;\n      console.log('Showcase NON Blocking Resovlers - Route Resolve Observable => promiseObservable: ', promiseObservable);\n\n      if (promiseObservable) {\n        promiseObservable.subscribe(promiseValue => {\n          const dataObservable = promiseValue['data'];\n          console.log('Showcase NON Blocking Resovlers - Subscribe to promiseObservable => dataObservable: ', dataObservable);\n\n          if (dataObservable) {\n            dataObservable.subscribe(observableValue => {\n              const pageData: ShowcaseShellModel = observableValue;\n              // tslint:disable-next-line:max-line-length\n              console.log('Showcase NON Blocking Resovlers - Subscribe to dataObservable (will emmit just one value) => PageData (' + ((pageData && pageData.isShell) ? 'SHELL' : 'REAL') + '): ', pageData);\n              if (pageData) {\n                this.routeResolveData = pageData;\n              }\n            });\n          } else {\n            console.warn('No dataObservable coming from Route Resolver promiseObservable');\n          }\n        });\n      } else {\n        console.warn('No promiseObservable coming from Route Resolver data');\n      }\n    } else {\n      console.warn('No data coming from Route Resolver');\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// You can also use a Class object as a shell model\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\n\n@Component({\n  selector: 'app-showcase-progressive-shell-resolvers',\n  templateUrl: './progressive-shell-resolvers.page.html',\n  styleUrls: ['./progressive-shell-resolvers.page.scss']\n})\nexport class ProgressiveShellResovlersPage implements OnInit {\n  // We will assign data coming from the Route Resolver to this property\n  routeResolveData: ShowcaseShellModel;\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    console.log('Showcase Progressive Shell Resovlers - ngOnInit()');\n\n    this.route.data.subscribe((resolvedRouteData) => {\n      const dataStore = resolvedRouteData['data'];\n\n      dataStore.state.subscribe(\n        (state) => {\n          this.routeResolveData = state;\n        },\n        (error) => {}\n      );\n    },\n    (error) => {});\n  }\n}\n"],"sourceRoot":"webpack:///"}