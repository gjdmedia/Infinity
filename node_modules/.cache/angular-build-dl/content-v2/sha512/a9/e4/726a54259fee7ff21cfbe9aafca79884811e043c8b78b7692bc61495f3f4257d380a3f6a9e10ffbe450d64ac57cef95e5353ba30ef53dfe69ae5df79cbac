{"version":3,"sources":["webpack:///src/app/painting/details/painting-details.resolver.ts","webpack:///src/app/painting/details/painting-details.page.ts","webpack:///src/app/painting/details/painting-details.page.html","webpack:///src/app/painting/details/painting-details.module.ts"],"names":["PaintingDetailsResolver","paintingService","route","itemSlug","paramMap","get","dataSource","getDetailsDataSource","dataStore","getDetailsStore","PaintingDetailsPage","menu","toastController","slidesOptions","zoom","toggle","isFirstSlide","isLastSlide","generateSides","enable","slides","isBeginning","then","isEnd","ionSlideWillChange","subscribe","changes","length","slideTo","side1","Math","floor","random","side2","doorHeight","round","doorWidth","costPaint","costCaulk","costBrushes","costTape","brushesCost","maskingCost","rollersCost","caulkCost","dropCost","discount","labourPerHour","labourHours","side2Tri","side1Tri","wallWidth","wallDepth","wallHeight","coverage","tinsCoverage","wallSize","precision","paperCost","rollCoverage","subscriptions","data","resolvedRouteData","extractData","state","details","error","create","header","message","position","buttons","text","role","handler","totalArea","totalXVat","totalIncVat","vat","totalXDiscount","discountTotal","totalCost","totalLabourCost","totalTri","doorArea","totalReducedArea","tinsNeeded","rollsRequired","rollsCost","toast","present","duration","console","trace","presentToastCorrect","presentToastIncorrect","wallArea","vatAmount","subTotal","discAmount","volumeRounded","rollsRounded","rollsCostRounded","unsubscribe","isShell","routes","path","component","resolve","PaintingDetailsPageModule"],"mappings":"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","file":"painting-details-painting-details-module-ngfactory-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { PaintingService } from '../painting.service';\nimport { PaintingDetailsModel } from './painting-details.model';\n\n@Injectable()\nexport class PaintingDetailsResolver implements Resolve<DataStore<PaintingDetailsModel>> {\n\n  constructor(private paintingService: PaintingService) {}\n\n  resolve(route: ActivatedRouteSnapshot): DataStore<PaintingDetailsModel> {\n    const itemSlug = route.paramMap.get('productId');\n\n    const dataSource: Observable<PaintingDetailsModel> = this.paintingService.getDetailsDataSource(itemSlug);\n    const dataStore: DataStore<PaintingDetailsModel> = this.paintingService.getDetailsStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { Component, OnInit,AfterViewInit, ViewChild, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription, VirtualTimeScheduler } from 'rxjs';\nimport { ToastController } from '@ionic/angular';\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { PaintingDetailsModel } from './painting-details.model';\nimport { IonSlides, MenuController } from '@ionic/angular';\nimport { analytics } from 'firebase';\nimport { compileDirectiveFromRender2 } from '@angular/compiler/src/render3/view/compiler';\n\n\n@Component({\n  selector: 'app-painting-details',\n  templateUrl: './painting-details.page.html',\n  styleUrls: [\n    './styles/painting-details.page.scss',\n    './styles/painting-details.shell.scss'\n  ]\n  \n})\nexport class PaintingDetailsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  slidesOptions: any = {\n    zoom: {\n      toggle: false // Disable zooming to prevent weird double tap zomming on slide images\n    }\n  };\n\n  \n  subscriptions: Subscription;\n  \n  // Area\n  side1: any;\n  side2: any;\n  side3: any;\n  side4: any;\n  totalArea: any;\n  doorHeight:any;\n  doorWidth:any;\n  doorArea:any;\n  totalReducedArea:any;\n\n  // VAT\n  costPaint: any;\n  costCaulk: any;\n  costBrushes: any;\n  costTape: any;\n  totalXVat: any;\n  vat: any;\n  totalIncVat: any;\n\n  // Discount\n  brushesCost:any;\n  rollersCost:any;\n  maskingCost:any;\n  caulkCost:any;\n  dropCost:any;\n  discount: any;\n  totalXDiscount: any;\n  discountTotal: any;\n  totalCost: any;\n\n  //Labour\n  labourPerHour:any;\n  labourHours:any;\n  totalLabourCost:any;\n\n  //Triangle\n  side1Tri: any;\n  side2Tri: any;\n  totalTri:any;\n\n  //WallArea\n  wallDepth:any;\n  wallWidth:any;\n  wallHeight:any;\n  backLeft:any;\n  backRight:any;\n  frontLeft:any;\n  frontRight:any;\n  totalWallArea:any;\n\n  //Paint Tins\n  coverage:any;\n  tinsCoverage:any;\n  tinsNeeded:any;\n\n  //Wallpaper\n  wallSize:any;\n  paperCost:any;\n  rollCoverage:any;\n  rollsRequired:any;\n  rollsCost: any;\n\n\n  details: PaintingDetailsModel;\n\n  @ViewChild(IonSlides, { static: true }) slides: IonSlides;\n\n  @HostBinding('class.first-slide-active') isFirstSlide = true;\n\n  @HostBinding('class.last-slide-active') isLastSlide = false;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.details && this.details.isShell) ? true : false;\n  }\n\n  \n\n  constructor(public menu: MenuController, private route: ActivatedRoute, public toastController: ToastController) { \n\n    this.generateSides();\n\n  }\n\n    // Disable side menu for this page\n    ionViewDidEnter(): void {\n      this.menu.enable(true);\n    }\n  \n    // Restore to default when leaving this page\n    ionViewDidLeave(): void {\n      this.menu.enable(true);\n    }\n\n    ngAfterViewInit(): void {\n      // ViewChild is set\n      this.slides.isBeginning().then(isBeginning => {\n        this.isFirstSlide = isBeginning;\n      });\n      this.slides.isEnd().then(isEnd => {\n        this.isLastSlide = isEnd;\n      });\n  \n      // Subscribe to changes\n      this.slides.ionSlideWillChange.subscribe(changes => {\n        this.slides.isBeginning().then(isBeginning => {\n          this.isFirstSlide = isBeginning;\n        });\n        this.slides.isEnd().then(isEnd => {\n          this.isLastSlide = isEnd;\n        });\n      });\n    }\n  \n    skipWalkthrough(): void {\n      // Skip to the last slide\n      this.slides.length().then(length => {\n        this.slides.slideTo(length);\n      });\n    }\n\n  generateSides():void {\n    // Area\n    this.side1 = Math.floor(Math.random() * 30) + 5; \n    this.side2 = this.side1 /2;\n    this.doorHeight = this.side2*0.55;\n    this.doorHeight = Math.round(this.doorHeight * 10) / 10;\n    this.doorWidth = this.side1*0.75;\n    this.doorWidth = Math.round(this.doorWidth * 10) / 10;\n\n\n    // VAT\n    this.costPaint = Math.floor(Math.random() * 200) + 15; \n    this.costCaulk = Math.floor(Math.random() * 15) + 2; \n    this.costBrushes = Math.floor(Math.random() * 20) + 10; \n    this.costTape = Math.floor(Math.random() * 10) + 1; \n\n    // Discount\n    this.brushesCost = Math.floor(Math.random() * 20) + 10; \n    this.maskingCost = Math.floor(Math.random() * 10) + 1; \n    this.rollersCost = Math.floor(Math.random() * 20) + 1; \n    this.caulkCost = Math.floor(Math.random() * 15) + 2; \n    this.dropCost = Math.floor(Math.random() * 100) + 10; \n    this.discount = Math.floor(Math.random() * 20) + 5; \n\n    //Labour\n    this.labourPerHour = Math.floor(Math.random() * 30) + 10; \n    this.labourHours = Math.floor(Math.random() * 80) + 10; \n\n    //Triangle\n    this.side2Tri = Math.floor(Math.random() * 30) + 5; \n    this.side1Tri = this.side2Tri /2;\n\n    //Wall Area\n    this.wallWidth = Math.floor(Math.random() * 30) + 5; \n    this.wallDepth = this.wallWidth*0.65;\n    this.wallDepth = Math.round(this.wallDepth * 10) / 10;\n    this.wallHeight = 2.5;\n\n    //Paint Tins\n    this.coverage = Math.floor(Math.random() * 300) + 100; \n    this.tinsCoverage = Math.floor(Math.random() * 10) + 10; \n\n    //Wallpaper\n    this.wallSize = Math.floor(Math.random() * 40) + 10; \n    var precision = 100; // 2 decimals\n    this.paperCost = Math.floor(Math.random() * (10 * precision - 1 * precision) + 1 * precision) / (1*precision);\n    this.rollCoverage = 5.35;\n  }\n \n\n\n  ngOnInit(): void {\n\n    \n\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<PaintingDetailsModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<PaintingDetailsModel>(resolvedRouteData.data, PaintingDetailsModel)\n        .subscribe(\n          (state) => {\n            this.details = state;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n  \n  async presentToastCorrect() {\n    const toast = await this.toastController.create({\n      header: 'Correct!',\n      message: 'Well Done.',\n      position: 'bottom',\n      buttons: [\n         {\n          text: 'Next',\n          role: 'cancel',\n          handler: () => {\n            this.generateSides();\n           this.totalArea=\"\"\n           this.totalXVat = \"\";\n            this.totalIncVat= \"\";\n            this.vat = \"\";\n            this.totalXDiscount=\"\";\n            this.discountTotal=\"\";\n            this.totalCost=\"\";\n            this.totalLabourCost=\"\";\n            this.totalTri=\"\";\n            this.doorArea=\"\";\n            this.totalReducedArea=\"\";\n            this.tinsNeeded=\"\";\n            this.rollsRequired=\"\";\n            this.rollsCost=\"\";\n          }\n        }\n      ]\n    });\n    toast.present();\n  }\n\n  async presentToastIncorrect() {\n    const toast = await this.toastController.create({\n      message: 'Try again!',\n      position: 'bottom',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  \n\n  calculateSimpleArea():void {\n\n    \n\n    if (this.totalArea == this.side1*this.side2) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  calculateAdvancedArea():void {\n\n    var wallArea = this.side1 * this.side2;\n    var doorArea = this.doorWidth * this.doorHeight;\n\n    if (wallArea == this.totalArea && doorArea == this.doorArea && this.totalReducedArea == wallArea - doorArea) {\n      console.trace('Correct!');\n  \n       this.presentToastCorrect();\n       \n        \n      } else {\n  \n        this.presentToastIncorrect();\n      }\n\n\n  }\n\n  calculateSimpleVAT():void {\n\n    var vatAmount = (this.costPaint + this.costCaulk+this.costBrushes+this.costTape) * 0.2\n    console.trace(vatAmount)\n\n    if (this.costPaint + this.costCaulk+this.costBrushes+this.costTape+ vatAmount == this.totalIncVat)  {\n      console.trace('Correct!');\n  \n       this.presentToastCorrect();\n       \n        \n      } else {\n  \n        this.presentToastIncorrect();\n      }\n      \n    }\n\n    calculateDiscount():void {\n\n         \n      var subTotal = this.brushesCost+this.rollersCost+this.maskingCost+this.caulkCost+this.dropCost;\n      var discAmount = Math.round(subTotal * (this.discount / 100) * 100) / 100 ;\n      \n\n      console.trace(\"Subtotal = \" + subTotal + \"Discount = \" + discAmount)\n\n      if (this.totalCost == subTotal - discAmount)  {\n        console.trace('Correct!');\n    \n         this.presentToastCorrect();\n         \n          \n        } else {\n    \n          this.presentToastIncorrect();\n        }\n        \n      }\n\n      calculateLabour():void{\n\n        if (this.totalLabourCost == this.labourPerHour * this.labourHours)  {\n          console.trace('Correct!');\n      \n           this.presentToastCorrect();\n           \n            \n          } else {\n      \n            this.presentToastIncorrect();\n          }\n          \n        }\n\n        calculateSimpleTri():void{\n\n          if (this.totalTri == (this.side2Tri / 2) * this.side1Tri)  {\n            console.trace('Correct!');\n        \n             this.presentToastCorrect();\n             \n              \n            } else {\n        \n              this.presentToastIncorrect();\n            }\n            \n          }\n\n\n          calculateTins():void{\n\n            var volumeRounded = Math.round(this.coverage / this.tinsCoverage * 10) / 10 ;\n            console.trace(volumeRounded);\n            if (this.tinsNeeded == volumeRounded)  {\n              console.trace('Correct!');\n          \n               this.presentToastCorrect();\n               \n                \n              } else {\n          \n                this.presentToastIncorrect();\n              }\n              \n            }\n            calculateWallpaper():void{\n\n              var rollsRounded = Math.round(this.wallSize / this.rollCoverage * 10) / 10 ;\n              var rollsCostRounded = Math.round(this.paperCost * this.rollsRequired * 10) / 10 ;\n              console.trace(rollsRounded);\n              console.trace(rollsCostRounded)\n              if (this.rollsRequired == rollsRounded && this.rollsCost == rollsCostRounded)  {\n                console.trace('Correct!');\n            \n                 this.presentToastCorrect();\n                 \n                  \n                } else {\n            \n                  this.presentToastIncorrect();\n                }\n                \n              }\n\n\n      \n\n \n              \n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories/painting\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      <app-text-shell [data]=\"details?.name\"></app-text-shell>\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"painting-details-content\">\n  <ion-row class=\"image-row\">\n    <ion-col size=\"12\">\n      <app-image-shell [display]=\"'cover'\" animation=\"spinner\" class=\"add-overlay showcase-image\"\n        [src]=\"details?.showcaseImage\">\n        <app-aspect-ratio [ratio]=\"{ w: 64, h: 40 }\">\n          <div class=\"icon-wrapper\">\n            <app-aspect-ratio [ratio]=\"{ w: 1, h: 1 }\">\n              <app-image-shell class=\"icon-image\" [src]=\"details?.icon\"></app-image-shell>\n            </app-aspect-ratio>\n          </div>\n        </app-aspect-ratio>\n      </app-image-shell>\n    </ion-col>\n  </ion-row>\n  <!-- <ion-row class=\"description-row\">\n    <ion-col size=\"9\">\n      <h3 class=\"details-name\">\n        <app-text-shell [data]=\"details?.name\"></app-text-shell>\n      </h3>\n      <p class=\"details-style\">\n        <app-text-shell [data]=\"details?.style\"></app-text-shell>\n      </p>\n    </ion-col>\n  </ion-row> -->\n\n\n\n  <ion-slides class=\"walkthrough-slides\" pager=\"true\" [options]=\"slidesOptions\">\n\n\n    <!-- Area Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Area'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Intro</h4>\n\n        <ion-card>\n          <img src=\"/assets/images/simple_rectangle_area.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total:</ion-label>\n                      <ion-input clear-input name=\"totalArea\" [(ngModel)]=\"totalArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimpleArea()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    <ion-slide class=\"last-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Area'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Advanced</h4>\n        <ion-card>\n          <img src=\"/assets/images/simple_rectangle_door.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1 :</ion-label>\n                      <p [innerHTML]=\"side1\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2 :</ion-label>\n                      <p [innerHTML]=\"side2\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Wall Area :</ion-label>\n                      <ion-input clear-input name=\"totalArea\" [(ngModel)]=\"totalArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Door Width :</ion-label>\n                      <p [innerHTML]=\"doorWidth\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Door Height :</ion-label>\n                      <p [innerHTML]=\"doorHeight\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Door Area :</ion-label>\n                      <ion-input clear-input name=\"doorArea\" [(ngModel)]=\"doorArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Area Required :</ion-label>\n                      <ion-input clear-input name=\"totalReducedArea\" [(ngModel)]=\"totalReducedArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateAdvancedArea()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- VAT Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='VAT'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Tins of Paint: £</ion-label>\n                      <p [innerHTML]=\"costPaint\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Caulk: £</ion-label>\n                      <p [innerHTML]=\"costCaulk\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Paint Brushes: £</ion-label>\n                      <p [innerHTML]=\"costBrushes\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Masking Tape: £</ion-label>\n                      <p [innerHTML]=\"costTape\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total before VAT: £</ion-label>\n                      <ion-input clear-input name=\"totalXVat\" [(ngModel)]=\"totalXVat\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>VAT at 20%: £</ion-label>\n                      <ion-input clear-input name=\"vat\" [(ngModel)]=\"vat\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Cost: £</ion-label>\n                      <ion-input clear-input name=\"totalIncVat\" [(ngModel)]=\"totalIncVat\"></ion-input>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimpleVAT()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Discount Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Discount'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Brushes : £</ion-label>\n                      <p [innerHTML]=\"brushesCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Rollers : £</ion-label>\n                      <p [innerHTML]=\"rollersCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Masking Tape : £</ion-label>\n                      <p [innerHTML]=\"maskingCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Caulk : £</ion-label>\n                      <p [innerHTML]=\"caulkCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Drop Cloth : £</ion-label>\n                      <p [innerHTML]=\"dropCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Discount : %</ion-label>\n                      <p [innerHTML]=\"discount\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total before Discount :</ion-label>\n                      <ion-input name=\"totalXDiscount\" [(ngModel)]=\"totalXDiscount\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Discount Total:</ion-label>\n                      <ion-input name=\"discountTotal\" [(ngModel)]=\"discountTotal\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Final Price:</ion-label>\n                      <ion-input name=\"totalCost\" [(ngModel)]=\"totalCost\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateDiscount()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Labour Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Labour'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Labour Cost : £</ion-label>\n                      <p [innerHTML]=\"labourPerHour\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Length of the Job : £</ion-label>\n                      <p [innerHTML]=\"labourHours\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Cost :</ion-label>\n                      <ion-input name=\"totalCost\" [(ngModel)]=\"totalLabourCost\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateLabour()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n\n\n    <!-- Triangle Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Triangle'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Intro</h4>\n\n        <ion-card>\n          <img src=\"/assets/images/simple_triangle.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1Tri\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">cm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2Tri\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">cm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total:</ion-label>\n                      <ion-input clear-input name=\"totalTri\" [(ngModel)]=\"totalTri\"></ion-input>\n                      <p style=\"margin-left: 5px;\">cm2</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimpleTri()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n\n    <!-- Wall Area Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Wall Area'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Intro</h4>\n\n        <ion-card>\n          <img src=\"/assets/images/wall_area.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Depth :</ion-label>\n                      <p [innerHTML]=\"wallDepth\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Width :</ion-label>\n                      <p [innerHTML]=\"wallWidth\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Height :</ion-label>\n                      <p [innerHTML]=\"wallHeight\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Back Left :</ion-label>\n                      <ion-input clear-input name=\"backLeft\" [(ngModel)]=\"backLeft\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Back Right :</ion-label>\n                      <ion-input clear-input name=\"backRight\" [(ngModel)]=\"backRight\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Front Left :</ion-label>\n                      <ion-input clear-input name=\"frontLeft\" [(ngModel)]=\"frontLeft\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Front Right :</ion-label>\n                      <ion-input clear-input name=\"frontRight\" [(ngModel)]=\"frontRight\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Area :</ion-label>\n                      <ion-input clear-input name=\"totalWallArea\" [(ngModel)]=\"totalWallArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateWallArea()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Paint Tins Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Paint'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Intro</h4>\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/wall_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Coverage needed :</ion-label>\n                      <p [innerHTML]=\"coverage\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>One tin covers :</ion-label>\n                      <p [innerHTML]=\"tinsCoverage\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Tins needed :</ion-label>\n                      <ion-input clear-input name=\"tinsNeeded\" [(ngModel)]=\"tinsNeeded\"></ion-input>\n                      <p style=\"margin-left: 5px;\">tins</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateTins()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- House Time Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='House Paint'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/wall_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Exterior Size :</ion-label>\n                      <p [innerHTML]=\"coverage\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>You can paint :</ion-label>\n                      <p [innerHTML]=\"tinsCoverage\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m2 / hour</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Tins needed :</ion-label>\n                      <ion-input clear-input name=\"tinsNeeded\" [(ngModel)]=\"tinsNeeded\"></ion-input>\n                      <p style=\"margin-left: 5px;\">tins</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateTins()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Wallpaper Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Wallpaper'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/wall_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Wall Size :</ion-label>\n                      <p [innerHTML]=\"wallSize\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cost per roll : £ </ion-label>\n                      <p [innerHTML]=\"paperCost\" type=\"number\"></p>\n                    \n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Roll coverage :</ion-label>\n                      <p [innerHTML]=\"rollCoverage\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Rolls required :</ion-label>\n                      <ion-input clear-input name=\"rollsRequired\" [(ngModel)]=\"rollsRequired\"></ion-input>\n                      <p style=\"margin-left: 5px;\">rolls</p>\n                    </ion-item>\n                \n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total cost : £</ion-label>\n                      <ion-input clear-input name=\"rollsCost\" [(ngModel)]=\"rollsCost\"></ion-input>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateWallpaper()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n  </ion-slides>\n</ion-content>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { PaintingService } from '../painting.service';\nimport { PaintingDetailsPage } from './painting-details.page';\nimport { PaintingDetailsResolver } from './painting-details.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PaintingDetailsPage,\n    resolve: {\n      data: PaintingDetailsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    PaintingDetailsPage\n  ],\n  providers: [\n    PaintingDetailsResolver,\n    PaintingService\n  ]\n})\nexport class PaintingDetailsPageModule {}\n"]}