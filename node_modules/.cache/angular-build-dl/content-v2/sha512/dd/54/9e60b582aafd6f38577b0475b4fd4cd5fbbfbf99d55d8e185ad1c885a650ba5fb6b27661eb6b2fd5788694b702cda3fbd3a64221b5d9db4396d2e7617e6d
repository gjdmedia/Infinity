{"version":3,"sources":["webpack:///src/app/fashion/listing/fashion-listing.module.ts","webpack:///src/app/fashion/listing/fashion-listing.resolver.ts","webpack:///src/app/fashion/listing/fashion-listing.page.html","webpack:///src/app/utils/resolver-helper.ts","webpack:///src/app/fashion/listing/fashion-listing.page.ts"],"names":["routes","path","component","resolve","data","FashionListingPageModule","FashionListingResolver","fashionService","dataSource","getListingDataSource","dataStore","getListingStore","ResolverHelper","source","constructor","state","FashionListingPage","route","subscriptions","subscribe","resolvedRouteData","extractData","listing","error","unsubscribe","isShell"],"mappings":"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","file":"fashion-listing-fashion-listing-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { FashionService } from '../fashion.service';\nimport { FashionListingPage } from './fashion-listing.page';\nimport { FashionListingResolver } from './fashion-listing.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FashionListingPage,\n    resolve: {\n      data: FashionListingResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    HttpClientModule\n  ],\n  declarations: [FashionListingPage],\n  providers: [\n    FashionListingResolver,\n    FashionService\n  ]\n})\nexport class FashionListingPageModule {}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { FashionService } from '../fashion.service';\nimport { FashionListingModel } from './fashion-listing.model';\n\n@Injectable()\nexport class FashionListingResolver implements Resolve<DataStore<FashionListingModel>> {\n\n  constructor(private fashionService: FashionService) {}\n\n  resolve(): DataStore<FashionListingModel> {\n    const dataSource: Observable<FashionListingModel> = this.fashionService.getListingDataSource();\n    const dataStore: DataStore<FashionListingModel> = this.fashionService.getListingStore(dataSource);\n\n    return dataStore;\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>Fashion Listing</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"fashion-listing-content\">\n  <ng-container *ngIf=\"listing?.items\">\n    <ion-row class=\"items-row\">\n      <ion-col size=\"6\" class=\"listing-item\" *ngFor=\"let item of listing.items\">\n        <div class=\"item-image-wrapper\">\n          <a class=\"image-anchor\" [routerLink]=\"['/app/categories/fashion/', item.slug]\">\n            <app-aspect-ratio [ratio]=\"{w: 3, h: 4}\">\n              <app-image-shell class=\"item-image\" animation=\"spinner\" [src]=\"item.image\" [alt]=\"'product image'\"></app-image-shell>\n            </app-aspect-ratio>\n          </a>\n        </div>\n        <ion-row class=\"item-body\">\n          <ion-col size=\"12\" class=\"main-info\">\n            <h4 class=\"item-name\">\n              <a class=\"name-anchor\" [routerLink]=\"['/app/categories/fashion/', item.slug]\">\n                <app-text-shell animation=\"gradient\" [data]=\"item.name\"></app-text-shell>\n              </a>\n            </h4>\n          </ion-col>\n          <ion-col size=\"12\">\n            <ion-row class=\"secondary-info\">\n              <ion-col class=\"price-col\">\n                <span class=\"item-sale-price\">\n                  <app-text-shell animation=\"gradient\" [data]=\"item.salePrice | currency\"></app-text-shell>\n                </span>\n              </ion-col>\n              <ng-container *ngIf=\"item.price != '0'\">\n                <ion-col class=\"separator\">\n                </ion-col>\n                <ion-col class=\"price-col\">\n                  <span class=\"item-original-price\">\n                    <app-text-shell animation=\"gradient\" [data]=\"item.price | currency\"></app-text-shell>\n                  </span>\n                </ion-col>\n              </ng-container>\n            </ion-row>\n          </ion-col>\n        </ion-row>\n      </ion-col>\n    </ion-row>\n  </ng-container>\n</ion-content>\n","import { DataStore } from '../shell/data-store';\nimport { Observable, of } from 'rxjs';\n\nexport interface IResolvedRouteData<T> {\n  data: T | DataStore<T>;\n}\n\nexport class ResolverHelper<T> {\n  // More info on function overloads here: https://www.typescriptlang.org/docs/handbook/functions.html#overloads\n  public static extractData<T>(source: (T | DataStore<T>), constructor: (new(...args: any[]) => T)): Observable<T> {\n    if (source instanceof DataStore) {\n      return source.state;\n    } else if (source instanceof constructor) {\n      // The right side of instanceof should be an expression evaluating to a constructor function (ie. a class), not a type\n      // That's why we included an extra parameter which acts as a constructor function for type T\n      // (see: https://github.com/microsoft/TypeScript/issues/5236)\n      return of(source);\n    }\n  }\n}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { FashionListingModel } from './fashion-listing.model';\n\n@Component({\n  selector: 'app-fashion-listing',\n  templateUrl: './fashion-listing.page.html',\n  styleUrls: [\n    './styles/fashion-listing.page.scss',\n    './styles/fashion-listing.shell.scss'\n  ]\n})\nexport class FashionListingPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  listing: FashionListingModel;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.listing && this.listing.isShell) ? true : false;\n  }\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<FashionListingModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<FashionListingModel>(resolvedRouteData.data, FashionListingModel)\n        .subscribe(\n          (state) => {\n            this.listing = state;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n"]}