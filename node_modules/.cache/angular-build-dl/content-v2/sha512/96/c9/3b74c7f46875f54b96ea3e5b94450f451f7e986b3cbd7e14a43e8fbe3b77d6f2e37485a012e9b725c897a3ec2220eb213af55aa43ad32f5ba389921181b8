{"version":3,"sources":["./src/app/painting/details/painting-details.resolver.ts","./src/app/painting/details/painting-details.page.ts","./src/app/painting/details/painting-details.page.html","./src/app/painting/details/painting-details.module.ts"],"names":[],"mappings":"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","file":"painting-details-painting-details-module-ngfactory-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { PaintingService } from '../painting.service';\nimport { PaintingDetailsModel } from './painting-details.model';\n\n@Injectable()\nexport class PaintingDetailsResolver implements Resolve<DataStore<PaintingDetailsModel>> {\n\n  constructor(private paintingService: PaintingService) {}\n\n  resolve(route: ActivatedRouteSnapshot): DataStore<PaintingDetailsModel> {\n    const itemSlug = route.paramMap.get('productId');\n\n    const dataSource: Observable<PaintingDetailsModel> = this.paintingService.getDetailsDataSource(itemSlug);\n    const dataStore: DataStore<PaintingDetailsModel> = this.paintingService.getDetailsStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { Component, OnInit,AfterViewInit, ViewChild, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription, VirtualTimeScheduler } from 'rxjs';\nimport { ToastController } from '@ionic/angular';\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { PaintingDetailsModel } from './painting-details.model';\nimport { IonSlides, MenuController } from '@ionic/angular';\nimport { analytics } from 'firebase';\nimport { compileDirectiveFromRender2 } from '@angular/compiler/src/render3/view/compiler';\n\n\n@Component({\n  selector: 'app-painting-details',\n  templateUrl: './painting-details.page.html',\n  styleUrls: [\n    './styles/painting-details.page.scss',\n    './styles/painting-details.shell.scss'\n  ]\n  \n})\nexport class PaintingDetailsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  slidesOptions: any = {\n    zoom: {\n      toggle: false // Disable zooming to prevent weird double tap zomming on slide images\n    }\n  };\n\n  \n  subscriptions: Subscription;\n  \n  // Area\n  side1: any;\n  side2: any;\n  side3: any;\n  side4: any;\n  totalArea: any;\n  doorHeight:any;\n  doorWidth:any;\n  doorArea:any;\n  totalReducedArea:any;\n\n  // VAT\n  costPaint: any;\n  costCaulk: any;\n  costBrushes: any;\n  costTape: any;\n  totalXVat: any;\n  vat: any;\n  totalIncVat: any;\n\n  // Discount\n  brushesCost:any;\n  rollersCost:any;\n  maskingCost:any;\n  caulkCost:any;\n  dropCost:any;\n  discount: any;\n  totalXDiscount: any;\n  discountTotal: any;\n  totalCost: any;\n\n  //Labour\n  labourPerHour:any;\n  labourHours:any;\n  totalLabourCost:any;\n\n  //Triangle\n  side1Tri: any;\n  side2Tri: any;\n  totalTri:any;\n\n  //WallArea\n  wallDepth:any;\n  wallWidth:any;\n  wallHeight:any;\n  backLeft:any;\n  backRight:any;\n  frontLeft:any;\n  frontRight:any;\n  totalWallArea:any;\n\n  //Paint Tins\n  coverage:any;\n  tinsCoverage:any;\n  tinsNeeded:any;\n\n  //Wallpaper\n  wallSize:any;\n  paperCost:any;\n  rollCoverage:any;\n  rollsRequired:any;\n  rollsCost: any;\n\n\n  details: PaintingDetailsModel;\n\n  @ViewChild(IonSlides, { static: true }) slides: IonSlides;\n\n  @HostBinding('class.first-slide-active') isFirstSlide = true;\n\n  @HostBinding('class.last-slide-active') isLastSlide = false;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.details && this.details.isShell) ? true : false;\n  }\n\n  \n\n  constructor(public menu: MenuController, private route: ActivatedRoute, public toastController: ToastController) { \n\n    this.generateSides();\n\n  }\n\n    // Disable side menu for this page\n    ionViewDidEnter(): void {\n      this.menu.enable(true);\n    }\n  \n    // Restore to default when leaving this page\n    ionViewDidLeave(): void {\n      this.menu.enable(true);\n    }\n\n    ngAfterViewInit(): void {\n      // ViewChild is set\n      this.slides.isBeginning().then(isBeginning => {\n        this.isFirstSlide = isBeginning;\n      });\n      this.slides.isEnd().then(isEnd => {\n        this.isLastSlide = isEnd;\n      });\n  \n      // Subscribe to changes\n      this.slides.ionSlideWillChange.subscribe(changes => {\n        this.slides.isBeginning().then(isBeginning => {\n          this.isFirstSlide = isBeginning;\n        });\n        this.slides.isEnd().then(isEnd => {\n          this.isLastSlide = isEnd;\n        });\n      });\n    }\n  \n    skipWalkthrough(): void {\n      // Skip to the last slide\n      this.slides.length().then(length => {\n        this.slides.slideTo(length);\n      });\n    }\n\n  generateSides():void {\n    // Area\n    this.side1 = Math.floor(Math.random() * 30) + 5; \n    this.side2 = this.side1 /2;\n    this.doorHeight = this.side2*0.55;\n    this.doorHeight = Math.round(this.doorHeight * 10) / 10;\n    this.doorWidth = this.side1*0.75;\n    this.doorWidth = Math.round(this.doorWidth * 10) / 10;\n\n\n    // VAT\n    this.costPaint = Math.floor(Math.random() * 200) + 15; \n    this.costCaulk = Math.floor(Math.random() * 15) + 2; \n    this.costBrushes = Math.floor(Math.random() * 20) + 10; \n    this.costTape = Math.floor(Math.random() * 10) + 1; \n\n    // Discount\n    this.brushesCost = Math.floor(Math.random() * 20) + 10; \n    this.maskingCost = Math.floor(Math.random() * 10) + 1; \n    this.rollersCost = Math.floor(Math.random() * 20) + 1; \n    this.caulkCost = Math.floor(Math.random() * 15) + 2; \n    this.dropCost = Math.floor(Math.random() * 100) + 10; \n    this.discount = Math.floor(Math.random() * 20) + 5; \n\n    //Labour\n    this.labourPerHour = Math.floor(Math.random() * 30) + 10; \n    this.labourHours = Math.floor(Math.random() * 80) + 10; \n\n    //Triangle\n    this.side2Tri = Math.floor(Math.random() * 30) + 5; \n    this.side1Tri = this.side2Tri /2;\n\n    //Wall Area\n    this.wallWidth = Math.floor(Math.random() * 30) + 5; \n    this.wallDepth = this.wallWidth*0.65;\n    this.wallDepth = Math.round(this.wallDepth * 10) / 10;\n    this.wallHeight = 2.5;\n\n    //Paint Tins\n    this.coverage = Math.floor(Math.random() * 300) + 100; \n    this.tinsCoverage = Math.floor(Math.random() * 10) + 10; \n\n    //Wallpaper\n    this.wallSize = Math.floor(Math.random() * 40) + 10; \n    var precision = 100; // 2 decimals\n    this.paperCost = Math.floor(Math.random() * (10 * precision - 1 * precision) + 1 * precision) / (1*precision);\n    this.rollCoverage = 5.35;\n  }\n \n\n\n  ngOnInit(): void {\n\n    \n\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<PaintingDetailsModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<PaintingDetailsModel>(resolvedRouteData.data, PaintingDetailsModel)\n        .subscribe(\n          (state) => {\n            this.details = state;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n  \n  async presentToastCorrect() {\n    const toast = await this.toastController.create({\n      header: 'Correct!',\n      message: 'Well Done.',\n      position: 'bottom',\n      buttons: [\n         {\n          text: 'Next',\n          role: 'cancel',\n          handler: () => {\n            this.generateSides();\n           this.totalArea=\"\"\n           this.totalXVat = \"\";\n            this.totalIncVat= \"\";\n            this.vat = \"\";\n            this.totalXDiscount=\"\";\n            this.discountTotal=\"\";\n            this.totalCost=\"\";\n            this.totalLabourCost=\"\";\n            this.totalTri=\"\";\n            this.doorArea=\"\";\n            this.totalReducedArea=\"\";\n            this.tinsNeeded=\"\";\n            this.rollsRequired=\"\";\n            this.rollsCost=\"\";\n          }\n        }\n      ]\n    });\n    toast.present();\n  }\n\n  async presentToastIncorrect() {\n    const toast = await this.toastController.create({\n      message: 'Try again!',\n      position: 'bottom',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  \n\n  calculateSimpleArea():void {\n\n    \n\n    if (this.totalArea == this.side1*this.side2) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  calculateAdvancedArea():void {\n\n    var wallArea = this.side1 * this.side2;\n    var doorArea = this.doorWidth * this.doorHeight;\n\n    if (wallArea == this.totalArea && doorArea == this.doorArea && this.totalReducedArea == wallArea - doorArea) {\n      console.trace('Correct!');\n  \n       this.presentToastCorrect();\n       \n        \n      } else {\n  \n        this.presentToastIncorrect();\n      }\n\n\n  }\n\n  calculateSimpleVAT():void {\n\n    var vatAmount = (this.costPaint + this.costCaulk+this.costBrushes+this.costTape) * 0.2\n    console.trace(vatAmount)\n\n    if (this.costPaint + this.costCaulk+this.costBrushes+this.costTape+ vatAmount == this.totalIncVat)  {\n      console.trace('Correct!');\n  \n       this.presentToastCorrect();\n       \n        \n      } else {\n  \n        this.presentToastIncorrect();\n      }\n      \n    }\n\n    calculateDiscount():void {\n\n         \n      var subTotal = this.brushesCost+this.rollersCost+this.maskingCost+this.caulkCost+this.dropCost;\n      var discAmount = Math.round(subTotal * (this.discount / 100) * 100) / 100 ;\n      \n\n      console.trace(\"Subtotal = \" + subTotal + \"Discount = \" + discAmount)\n\n      if (this.totalCost == subTotal - discAmount)  {\n        console.trace('Correct!');\n    \n         this.presentToastCorrect();\n         \n          \n        } else {\n    \n          this.presentToastIncorrect();\n        }\n        \n      }\n\n      calculateLabour():void{\n\n        if (this.totalLabourCost == this.labourPerHour * this.labourHours)  {\n          console.trace('Correct!');\n      \n           this.presentToastCorrect();\n           \n            \n          } else {\n      \n            this.presentToastIncorrect();\n          }\n          \n        }\n\n        calculateSimpleTri():void{\n\n          if (this.totalTri == (this.side2Tri / 2) * this.side1Tri)  {\n            console.trace('Correct!');\n        \n             this.presentToastCorrect();\n             \n              \n            } else {\n        \n              this.presentToastIncorrect();\n            }\n            \n          }\n\n\n          calculateTins():void{\n\n            var volumeRounded = Math.round(this.coverage / this.tinsCoverage * 10) / 10 ;\n            console.trace(volumeRounded);\n            if (this.tinsNeeded == volumeRounded)  {\n              console.trace('Correct!');\n          \n               this.presentToastCorrect();\n               \n                \n              } else {\n          \n                this.presentToastIncorrect();\n              }\n              \n            }\n            calculateWallpaper():void{\n\n              var rollsRounded = Math.round(this.wallSize / this.rollCoverage * 10) / 10 ;\n              var rollsCostRounded = Math.round(this.paperCost * this.rollsRequired * 10) / 10 ;\n              console.trace(rollsRounded);\n              console.trace(rollsCostRounded)\n              if (this.rollsRequired == rollsRounded && this.rollsCost == rollsCostRounded)  {\n                console.trace('Correct!');\n            \n                 this.presentToastCorrect();\n                 \n                  \n                } else {\n            \n                  this.presentToastIncorrect();\n                }\n                \n              }\n\n\n      \n\n \n              \n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories/painting\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      <app-text-shell [data]=\"details?.name\"></app-text-shell>\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"painting-details-content\">\n  <ion-row class=\"image-row\">\n    <ion-col size=\"12\">\n      <app-image-shell [display]=\"'cover'\" animation=\"spinner\" class=\"add-overlay showcase-image\"\n        [src]=\"details?.showcaseImage\">\n        <app-aspect-ratio [ratio]=\"{ w: 64, h: 40 }\">\n          <div class=\"icon-wrapper\">\n            <app-aspect-ratio [ratio]=\"{ w: 1, h: 1 }\">\n              <app-image-shell class=\"icon-image\" [src]=\"details?.icon\"></app-image-shell>\n            </app-aspect-ratio>\n          </div>\n        </app-aspect-ratio>\n      </app-image-shell>\n    </ion-col>\n  </ion-row>\n  <!-- <ion-row class=\"description-row\">\n    <ion-col size=\"9\">\n      <h3 class=\"details-name\">\n        <app-text-shell [data]=\"details?.name\"></app-text-shell>\n      </h3>\n      <p class=\"details-style\">\n        <app-text-shell [data]=\"details?.style\"></app-text-shell>\n      </p>\n    </ion-col>\n  </ion-row> -->\n\n\n\n  <ion-slides class=\"walkthrough-slides\" pager=\"true\" [options]=\"slidesOptions\">\n\n\n    <!-- Area Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Area'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Intro</h4>\n\n        <ion-card>\n          <img src=\"/assets/images/simple_rectangle_area.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total:</ion-label>\n                      <ion-input clear-input name=\"totalArea\" [(ngModel)]=\"totalArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimpleArea()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    <ion-slide class=\"last-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Area'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Advanced</h4>\n        <ion-card>\n          <img src=\"/assets/images/simple_rectangle_door.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1 :</ion-label>\n                      <p [innerHTML]=\"side1\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2 :</ion-label>\n                      <p [innerHTML]=\"side2\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Wall Area :</ion-label>\n                      <ion-input clear-input name=\"totalArea\" [(ngModel)]=\"totalArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Door Width :</ion-label>\n                      <p [innerHTML]=\"doorWidth\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Door Height :</ion-label>\n                      <p [innerHTML]=\"doorHeight\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Door Area :</ion-label>\n                      <ion-input clear-input name=\"doorArea\" [(ngModel)]=\"doorArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Area Required :</ion-label>\n                      <ion-input clear-input name=\"totalReducedArea\" [(ngModel)]=\"totalReducedArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateAdvancedArea()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- VAT Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='VAT'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Tins of Paint: £</ion-label>\n                      <p [innerHTML]=\"costPaint\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Caulk: £</ion-label>\n                      <p [innerHTML]=\"costCaulk\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Paint Brushes: £</ion-label>\n                      <p [innerHTML]=\"costBrushes\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Masking Tape: £</ion-label>\n                      <p [innerHTML]=\"costTape\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total before VAT: £</ion-label>\n                      <ion-input clear-input name=\"totalXVat\" [(ngModel)]=\"totalXVat\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>VAT at 20%: £</ion-label>\n                      <ion-input clear-input name=\"vat\" [(ngModel)]=\"vat\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Cost: £</ion-label>\n                      <ion-input clear-input name=\"totalIncVat\" [(ngModel)]=\"totalIncVat\"></ion-input>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimpleVAT()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Discount Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Discount'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Brushes : £</ion-label>\n                      <p [innerHTML]=\"brushesCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Rollers : £</ion-label>\n                      <p [innerHTML]=\"rollersCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Masking Tape : £</ion-label>\n                      <p [innerHTML]=\"maskingCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Caulk : £</ion-label>\n                      <p [innerHTML]=\"caulkCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Drop Cloth : £</ion-label>\n                      <p [innerHTML]=\"dropCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Discount : %</ion-label>\n                      <p [innerHTML]=\"discount\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total before Discount :</ion-label>\n                      <ion-input name=\"totalXDiscount\" [(ngModel)]=\"totalXDiscount\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Discount Total:</ion-label>\n                      <ion-input name=\"discountTotal\" [(ngModel)]=\"discountTotal\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Final Price:</ion-label>\n                      <ion-input name=\"totalCost\" [(ngModel)]=\"totalCost\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateDiscount()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Labour Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Labour'\">\n\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Labour Cost : £</ion-label>\n                      <p [innerHTML]=\"labourPerHour\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Length of the Job : £</ion-label>\n                      <p [innerHTML]=\"labourHours\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Cost :</ion-label>\n                      <ion-input name=\"totalCost\" [(ngModel)]=\"totalLabourCost\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n\n\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateLabour()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n\n\n    <!-- Triangle Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Triangle'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Intro</h4>\n\n        <ion-card>\n          <img src=\"/assets/images/simple_triangle.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1Tri\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">cm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2Tri\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">cm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total:</ion-label>\n                      <ion-input clear-input name=\"totalTri\" [(ngModel)]=\"totalTri\"></ion-input>\n                      <p style=\"margin-left: 5px;\">cm2</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimpleTri()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n\n    <!-- Wall Area Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Wall Area'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Intro</h4>\n\n        <ion-card>\n          <img src=\"/assets/images/wall_area.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Depth :</ion-label>\n                      <p [innerHTML]=\"wallDepth\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Width :</ion-label>\n                      <p [innerHTML]=\"wallWidth\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Height :</ion-label>\n                      <p [innerHTML]=\"wallHeight\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Back Left :</ion-label>\n                      <ion-input clear-input name=\"backLeft\" [(ngModel)]=\"backLeft\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Back Right :</ion-label>\n                      <ion-input clear-input name=\"backRight\" [(ngModel)]=\"backRight\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Front Left :</ion-label>\n                      <ion-input clear-input name=\"frontLeft\" [(ngModel)]=\"frontLeft\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Front Right :</ion-label>\n                      <ion-input clear-input name=\"frontRight\" [(ngModel)]=\"frontRight\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Area :</ion-label>\n                      <ion-input clear-input name=\"totalWallArea\" [(ngModel)]=\"totalWallArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateWallArea()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Paint Tins Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Paint'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Intro</h4>\n\n        <ion-card>\n          <!-- <img src=\"/assets/images/wall_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Coverage needed :</ion-label>\n                      <p [innerHTML]=\"coverage\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>One tin covers :</ion-label>\n                      <p [innerHTML]=\"tinsCoverage\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Tins needed :</ion-label>\n                      <ion-input clear-input name=\"tinsNeeded\" [(ngModel)]=\"tinsNeeded\"></ion-input>\n                      <p style=\"margin-left: 5px;\">tins</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateTins()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- House Time Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='House Paint'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/wall_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Exterior Size :</ion-label>\n                      <p [innerHTML]=\"coverage\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>You can paint :</ion-label>\n                      <p [innerHTML]=\"tinsCoverage\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m2 / hour</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Tins needed :</ion-label>\n                      <ion-input clear-input name=\"tinsNeeded\" [(ngModel)]=\"tinsNeeded\"></ion-input>\n                      <p style=\"margin-left: 5px;\">tins</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateTins()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n    <!-- Wallpaper Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Wallpaper'\">\n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/wall_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n              <img\n                src=\"/assets/images/simple_rectangle.png\"\n                class=\"ion-padding\"\n              />\n            </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Wall Size :</ion-label>\n                      <p [innerHTML]=\"wallSize\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Cost per roll : £ </ion-label>\n                      <p [innerHTML]=\"paperCost\" type=\"number\"></p>\n                    \n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Roll coverage :</ion-label>\n                      <p [innerHTML]=\"rollCoverage\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Rolls required :</ion-label>\n                      <ion-input clear-input name=\"rollsRequired\" [(ngModel)]=\"rollsRequired\"></ion-input>\n                      <p style=\"margin-left: 5px;\">rolls</p>\n                    </ion-item>\n                \n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total cost : £</ion-label>\n                      <ion-input clear-input name=\"rollsCost\" [(ngModel)]=\"rollsCost\"></ion-input>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateWallpaper()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n  </ion-slides>\n</ion-content>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { PaintingService } from '../painting.service';\nimport { PaintingDetailsPage } from './painting-details.page';\nimport { PaintingDetailsResolver } from './painting-details.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PaintingDetailsPage,\n    resolve: {\n      data: PaintingDetailsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    PaintingDetailsPage\n  ],\n  providers: [\n    PaintingDetailsResolver,\n    PaintingService\n  ]\n})\nexport class PaintingDetailsPageModule {}\n"],"sourceRoot":"webpack:///"}