{"version":3,"sources":["webpack:///src/app/user/friends/user-friends.resolver.ts","webpack:///src/app/user/friends/user-friends.page.html","webpack:///src/app/user/friends/user-friends.module.ts","webpack:///src/app/user/friends/user-friends.page.ts","webpack:///src/app/utils/resolver-helper.ts"],"names":["UserFriendsResolver","userService","dataSource","getFriendsDataSource","dataStore","getFriendsStore","routes","path","component","resolve","data","UserFriendsPageModule","UserFriendsPage","route","segmentValue","searchQuery","showFilters","subscriptions","subscribe","resolvedRouteData","extractData","state","friendsList","friends","followersList","followers","followingList","following","error","ev","detail","value","searchList","query","filterList","list","filter","item","name","toLowerCase","includes","unsubscribe","isShell","ResolverHelper","source","constructor"],"mappings":";;;;;;;;;;;;;;;;;;;;AAKA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAIaA,mB;AAEX,qCAAoBC,WAApB,EAA8C;AAAA;;AAA1B,eAAAA,WAAA,GAAAA,WAAA;AAA6B;;;;oCAE1C;AACL,gBAAMC,UAAU,GAAiC,KAAKD,WAAL,CAAiBE,oBAAjB,EAAjD;AACA,gBAAMC,SAAS,GAAgC,KAAKH,WAAL,CAAiBI,eAAjB,CAAiCH,UAAjC,CAA/C;AAEA,mBAAOE,SAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uECuBK,yZ,GAAA;AAAA;AAAA;AAAA;AAAA,gB,GAAsG,6E,IAAM;AAAtB;AAA5B;AAAe;;AAAzE,wBAAsF,SAAtF,EAA0D,SAA1D,EAAyE,SAAzE;AAAqF,S,EAAA,I;AAAA;;;uEACrF,uZ,GAAA;AAAA;AAAA;AAAA;AAAA,gB,GAAmG,gF,IAAS;AAAvB;AAA5B;AAAe;;AAAxE,wBAAqF,SAArF,EAAyD,SAAzD,EAAwE,SAAxE;AAAoF,S,EAAA,I;AAAA;;;uEAlBxF,4V,GAAA,2T,GACE,qW,GAAA;AAAA;AAAA,gB,GACE,gX,GAAA;AAAA;AAAA,gB,EAAkB;AAAA;AAAA;AAAA,U,GAChB,8c,GAAA;AAAA;AAAA;AAAA,gB,GAGJ,qV,GAAA,4T,GACE,4I,IACE,8I,IACE,4W,GAAA;AAAA;AAAA,gB,GAEF,6I,IACE,4W,GAAA;AAAA;AAAA,gB,GAIN,yV,GAAA,4T,GACE,8G,GAAA;AAAA;AAAA,gB,GACA,8G,GAAA;AAAA;AAAA,gB,GAAmG;AAjBjE;;AAApC,wBAAoC,SAApC;;AACoB;;AAAlB,wBAAkB,SAAlB;;AAC0D,4BAAoB,QAApB,CAAoB,MAApB,CAAoB,KAApB;AAAqB;;AAA7E,wBAAwD,SAAxD,EAA6E,SAA7E;;AAMkB,4BAAoB,QAApB,CAAoB,MAApB,CAAoB,IAApB;;AAAhB,yBAAgB,SAAhB;;AAGgB,6BAAmB,QAAnB,CAAmB,MAAnB,CAAmB,GAAnB;;AAAhB,yBAAgB,UAAhB;;AAKQ,8BAAyB,QAAzB,CAAyB,MAAzB,CAAyB,SAAzB;;AAAZ,yBAAY,UAAZ;;AACY,6BAAwB,QAAxB,CAAwB,MAAxB,CAAwB,SAAxB;;AAAZ,yBAAY,UAAZ;AAAoC,S,EAAA;AAhBpC;;AAAA;;AACE;;AAAA;;AAAA;;AAAA;;AAME;;AAAA;;AAGA;;AAAA;AAAoC,S;AAAA;;;uEAcxC,yH,IAA0E,I,EAAA,I;AAAA;;;uEAD5E,qV,GAAA,4T,GACE,8G,GAAA;AAAA;AAAA;AAAA,gB,EAAc;AAAA;AAAA,U,GAAA;AAAA;;AAAA;;AAAd,wBAAc,SAAd,EAAc,SAAd;AAAyE,S,EAAA,I;AAAA;;;uEAF7E,sV,GAAA,4T,GACE,8G,GAAA;AAAA;AAAA,gB,GAAiE;AAAA;AAAnC,6BAAkC,YAAlC;;AAA9B,wBAA8B,SAA9B;AAAgE,S,EAAA,I;AAAA;;;uEAIlE,yH,IACE,sJ,IAA+B,oF,IAAU,I,EAAA,I;AAAA;;;uEAOvC,yH,IAA0E,I,EAAA,I;AAAA;;;uEAD5E,qV,GAAA,4T,GACE,+G,GAAA;AAAA;AAAA;AAAA,gB,EAAc;AAAA;AAAA,U,GAAA;AAAA;;AAAA;;AAAd,wBAAc,SAAd,EAAc,SAAd;AAAyE,S,EAAA,I;AAAA;;;uEAF7E,sV,GAAA,4T,GACE,8G,GAAA;AAAA;AAAA,gB,GAAmE;AAAA;AAArC,6BAAoC,cAApC;;AAA9B,wBAA8B,SAA9B;AAAkE,S,EAAA,I;AAAA;;;uEAIpE,yH,IACE,sJ,IAA+B,sF,IAAY,I,EAAA,I;AAAA;;;uEAOzC,yH,IAA0E,I,EAAA,I;AAAA;;;uEAD5E,qV,GAAA,4T,GACE,+G,GAAA;AAAA;AAAA;AAAA,gB,EAAc;AAAA;AAAA,U,GAAA;AAAA;;AAAA;;AAAd,wBAAc,SAAd,EAAc,SAAd;AAAyE,S,EAAA,I;AAAA;;;uEAF7E,sV,GAAA,4T,GACE,+G,GAAA;AAAA;AAAA,gB,GAAmE;AAAA;AAArC,6BAAoC,cAApC;;AAA9B,wBAA8B,SAA9B;AAAkE,S,EAAA,I;AAAA;;;uEAIpE,yH,IACE,sJ,IAA+B,sF,IAAY,I,EAAA,I;AAAA;;;uEA5EjD,6V,GAAA,8T,GACE,mU,GAAA,+T,GACE,oV,GAAA,+T,GACE;AAAA;;AAAA;;;;;;SAAA,E,wGAAA,E,4GAAA,C;;;;mBAKN,wW,GAAA,gU,GACE;AAAA;AAAA;;AAAA;;;;;;;;;;AAA0D;;;;;AAA1D;AAAA,4N,GAAA;AAAA;AAAA,gF,EAAA;AAAA;AAAA,gB,EAAA,kN,GACE,2W,GAAA;AAAA;AAAA,gB,GACE,8T,GAAA,8T,GAAW,8E,IAEb,6W,GAAA;AAAA;AAAA,gB,GACE,8T,GAAA,8T,GAAW,gF,IAEb,6W,GAAA;AAAA;AAAA,gB,GACE,8T,GAAA,8T,GAAW,gF,IAIf;AAAA;AAAA;;AAAA;;;;;;;;;;AAAkD;;;;;AAA0B;;;;;AAA5E;AAAA,gO,GAAA;AAAA;AAAA,gB,EAAA,gN,EAAA;AAAA;AAAA,8E,EAAA;AAAA;AAAA;AAAA;AAAA,U,EAAA,0L,EAAA,qN,GAEA,sH,IAwBA,wI,IACE,iH,GAAA;AAAA;AAAA,gB,GAKA,iH,GAAA;AAAA;AAAA,gB,GAKF,wI,IACE,iH,GAAA;AAAA;AAAA,gB,GAKA,kH,GAAA;AAAA;AAAA,gB,GAKF,wI,IACE,kH,GAAA;AAAA;AAAA,gB,GAKA,kH,GAAA;AAAA;AAAA,gB,GAAgD;AAAA;AAxE7B;;AAAjB,wBAAiB,SAAjB;;AAAiB;;AAAjB,wBAAiB,SAAjB;;AAMS;;AAAb,yBAAa,SAAb;;AACsB;;AAApB,yBAAoB,SAApB;;AAGoB;;AAApB,yBAAoB,SAApB;;AAGoB;;AAApB,yBAAoB,SAApB;;AAKuC;;AAAzC,yBAAyC,UAAzC;;AAAkD,8BAAyB,YAAzB;;AAAlD,yBAAkD,UAAlD;;AA2BiC;;AAA/B,yBAA+B,UAA/B;;AAKc;;AAAd,yBAAc,UAAd;;AAM+B;;AAA/B,yBAA+B,UAA/B;;AAKc;;AAAd,yBAAc,UAAd;;AAM+B;;AAA/B,yBAA+B,UAA/B;;AAKc;;AAAd,yBAAc,UAAd;AAA+C,S,EAAA;AAAA;;AAtDjD;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AA0BS;;AAAT,yBAAS,UAAT;;AAWS;;AAAT,yBAAS,UAAT;;AAWS;;AAAT,yBAAS,UAAT;AAAgD,S;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClElD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;eAgBY,0E;AALZ,UAAME,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,kEAFb;AAGEC,eAAO,EAAE;AACPC,cAAI,EAAE;AADC;AAHX,OADqB,CAAvB;;UAyBaC,qB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAgBaC,e;AAiBX,iCAAoBC,KAApB,EAA2C;AAAA;;AAAvB,eAAAA,KAAA,GAAAA,KAAA;AAXpB,eAAAC,YAAA,GAAe,SAAf;AAIA,eAAAC,WAAA,GAAc,EAAd;AACA,eAAAC,WAAA,GAAc,KAAd;AAM8C;;;;qCAEtC;AAAA;;AACN;AACA,iBAAKC,aAAL,GAAqB,KAAKJ,KAAL,CAAWH,IAAX,CACpBQ,SADoB,CAEnB,UAACC,iBAAD,EAA6D;AAC3D;AACA,mBAAI,CAACF,aAAL,GAAqB,sEAAeG,WAAf,CAA6CD,iBAAiB,CAACT,IAA/D,EAAqE,oEAArE,EACpBQ,SADoB,CAEnB,UAACG,KAAD,EAAW;AACT,qBAAI,CAACX,IAAL,GAAYW,KAAZ;AACA,qBAAI,CAACC,WAAL,GAAmB,KAAI,CAACZ,IAAL,CAAUa,OAA7B;AACA,qBAAI,CAACC,aAAL,GAAqB,KAAI,CAACd,IAAL,CAAUe,SAA/B;AACA,qBAAI,CAACC,aAAL,GAAqB,KAAI,CAAChB,IAAL,CAAUiB,SAA/B;AACD,eAPkB,EAQnB,UAACC,KAAD,EAAW,CAAE,CARM,CAArB;AAUD,aAdkB,EAenB,UAACA,KAAD,EAAW,CAAE,CAfM,CAArB;AAiBD;;;yCAEcC,E,EAAE;AACf,iBAAKf,YAAL,GAAoBe,EAAE,CAACC,MAAH,CAAUC,KAA9B,CADe,CAGf;;AACA,iBAAKC,UAAL;AACD;;;uCAES;AACR,gBAAMC,KAAK,GAAI,KAAKlB,WAAL,IAAoB,KAAKA,WAAL,KAAqB,IAA1C,GAAkD,KAAKA,WAAvD,GAAqE,EAAnF;;AAEA,gBAAI,KAAKD,YAAL,KAAsB,SAA1B,EAAqC;AACnC,mBAAKQ,WAAL,GAAmB,KAAKY,UAAL,CAAgB,KAAKxB,IAAL,CAAUa,OAA1B,EAAmCU,KAAnC,CAAnB;AACD,aAFD,MAEO,IAAI,KAAKnB,YAAL,KAAsB,WAA1B,EAAuC;AAC5C,mBAAKU,aAAL,GAAqB,KAAKU,UAAL,CAAgB,KAAKxB,IAAL,CAAUe,SAA1B,EAAqCQ,KAArC,CAArB;AACD,aAFM,MAEA,IAAI,KAAKnB,YAAL,KAAsB,WAA1B,EAAuC;AAC5C,mBAAKY,aAAL,GAAqB,KAAKQ,UAAL,CAAgB,KAAKxB,IAAL,CAAUiB,SAA1B,EAAqCM,KAArC,CAArB;AACD;AACF;;;qCAEUE,I,EAAMF,K,EAAK;AACpB,mBAAOE,IAAI,CAACC,MAAL,CAAY,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCP,KAAK,CAACM,WAAN,EAAjC,CAAJ;AAAA,aAAhB,CAAP;AACD,W,CAED;AACA;;;;6CACgB;AACd;AACA,iBAAKtB,aAAL,CAAmBwB,WAAnB;AACD;;;8BAvD4C;AAC3C,mBAAQ,KAAK/B,IAAL,IAAa,KAAKA,IAAL,CAAUgC,OAAxB,GAAmC,IAAnC,GAA0C,KAAjD;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,c;;;;;;;AACX;sCAC6BC,M,EAA4BC,W,EAAuC;AAC9F,gBAAID,MAAM,YAAY,2DAAtB,EAAiC;AAC/B,qBAAOA,MAAM,CAACvB,KAAd;AACD,aAFD,MAEO,IAAIuB,MAAM,YAAYC,WAAtB,EAAmC;AACxC;AACA;AACA;AACA,qBAAO,gDAAGD,MAAH,CAAP;AACD;AACF","file":"user-friends-user-friends-module-ngfactory-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { UserService } from '../user.service';\nimport { UserFriendsModel } from './user-friends.model';\n\n@Injectable()\nexport class UserFriendsResolver implements Resolve<DataStore<UserFriendsModel>> {\n\n  constructor(private userService: UserService) { }\n\n  resolve(): DataStore<UserFriendsModel> {\n    const dataSource: Observable<UserFriendsModel> = this.userService.getFriendsDataSource();\n    const dataStore: DataStore<UserFriendsModel> = this.userService.getFriendsStore(dataSource);\n\n    return dataStore;\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/user\"></ion-back-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"user-friends-content\">\n  <ion-segment value=\"friends\" class=\"user-friends-segment\" (ionChange)=\"segmentChanged($event)\">\n    <ion-segment-button value=\"friends\">\n      <ion-label>Friends</ion-label>\n    </ion-segment-button>\n    <ion-segment-button value=\"followers\">\n      <ion-label>Followers</ion-label>\n    </ion-segment-button>\n    <ion-segment-button value=\"following\">\n      <ion-label>Following</ion-label>\n    </ion-segment-button>\n  </ion-segment>\n\n  <ion-searchbar class=\"friends-searchbar\" animated [(ngModel)]=\"searchQuery\" (ionChange)=\"searchList()\"></ion-searchbar>\n\n  <ng-template #friendItem let-friend=\"friend\">\n    <ion-row class=\"user-details-section\">\n      <ion-col class=\"user-image-wrapper\" size=\"2\">\n        <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n          <app-image-shell class=\"user-image\" animation=\"spinner\" [src]=\"friend.image\" [alt]=\"'friend'\"></app-image-shell>\n        </app-aspect-ratio>\n      </ion-col>\n      <ion-col class=\"user-data-wrapper\">\n        <div class=\"user-info\">\n          <h3 class=\"user-name\">\n            <app-text-shell [data]=\"friend.name\"></app-text-shell>\n          </h3>\n          <h5 class=\"user-job\">\n            <app-text-shell [data]=\"friend.job\"></app-text-shell>\n          </h5>\n        </div>\n      </ion-col>\n      <ion-col class=\"user-actions-wrapper\">\n        <ion-button *ngIf=\"!friend.following\" class=\"user-action\" expand=\"block\" size=\"small\" color=\"primary\">Follow</ion-button>\n        <ion-button *ngIf=\"friend.following\" class=\"user-action\" expand=\"block\" size=\"small\" color=\"light\">Following</ion-button>\n      </ion-col>\n    </ion-row>\n  </ng-template>\n\n  <section [hidden]=\"segmentValue !== 'friends'\">\n    <ion-list class=\"friends-list\" *ngIf=\"friendsList.length > 0\">\n      <ion-item class=\"friend-item\" *ngFor=\"let friend of friendsList\">\n        <ng-container *ngTemplateOutlet=\"friendItem; context: { friend: friend }\"></ng-container>\n      </ion-item>\n    </ion-list>\n    <ng-container *ngIf=\"friendsList.length <= 0\">\n      <h3 class=\"empty-list-message\">No Friends</h3>\n    </ng-container>\n  </section>\n\n  <section [hidden]=\"segmentValue !== 'followers'\">\n    <ion-list class=\"friends-list\" *ngIf=\"followersList.length > 0\">\n      <ion-item class=\"friend-item\" *ngFor=\"let friend of followersList\">\n        <ng-container *ngTemplateOutlet=\"friendItem; context: { friend: friend }\"></ng-container>\n      </ion-item>\n    </ion-list>\n    <ng-container *ngIf=\"followersList.length <= 0\">\n      <h3 class=\"empty-list-message\">No Followers</h3>\n    </ng-container>\n  </section>\n\n  <section [hidden]=\"segmentValue !== 'following'\">\n    <ion-list class=\"friends-list\" *ngIf=\"followingList.length > 0\">\n      <ion-item class=\"friend-item\" *ngFor=\"let friend of followingList\">\n        <ng-container *ngTemplateOutlet=\"friendItem; context: { friend: friend }\"></ng-container>\n      </ion-item>\n    </ion-list>\n    <ng-container *ngIf=\"followingList.length <= 0\">\n      <h3 class=\"empty-list-message\">No Following</h3>\n    </ng-container>\n  </section>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { UserService } from '../user.service';\nimport { UserFriendsPage } from './user-friends.page';\nimport { UserFriendsResolver } from './user-friends.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserFriendsPage,\n    resolve: {\n      data: UserFriendsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ComponentsModule,\n    RouterModule.forChild(routes),\n    HttpClientModule\n  ],\n  declarations: [UserFriendsPage],\n  providers: [\n    UserFriendsResolver,\n    UserService\n  ]\n})\nexport class UserFriendsPageModule {}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { UserFriendsModel } from './user-friends.model';\n\n@Component({\n  selector: 'app-user-friends',\n  templateUrl: './user-friends.page.html',\n  styleUrls: [\n    './styles/user-friends.page.scss',\n    './styles/user-friends.shell.scss',\n    './styles/user-friends.ios.scss',\n    './styles/user-friends.md.scss'\n  ]\n})\nexport class UserFriendsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  data: UserFriendsModel;\n\n  segmentValue = 'friends';\n  friendsList: Array<any>;\n  followersList: Array<any>;\n  followingList: Array<any>;\n  searchQuery = '';\n  showFilters = false;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.data && this.data.isShell) ? true : false;\n  }\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<UserFriendsModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<UserFriendsModel>(resolvedRouteData.data, UserFriendsModel)\n        .subscribe(\n          (state) => {\n            this.data = state;\n            this.friendsList = this.data.friends;\n            this.followersList = this.data.followers;\n            this.followingList = this.data.following;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n\n  segmentChanged(ev): void {\n    this.segmentValue = ev.detail.value;\n\n    // Check if there's any filter and apply it\n    this.searchList();\n  }\n\n  searchList(): void {\n    const query = (this.searchQuery && this.searchQuery !== null) ? this.searchQuery : '';\n\n    if (this.segmentValue === 'friends') {\n      this.friendsList = this.filterList(this.data.friends, query);\n    } else if (this.segmentValue === 'followers') {\n      this.followersList = this.filterList(this.data.followers, query);\n    } else if (this.segmentValue === 'following') {\n      this.followingList = this.filterList(this.data.following, query);\n    }\n  }\n\n  filterList(list, query): Array<any> {\n    return list.filter(item => item.name.toLowerCase().includes(query.toLowerCase()));\n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { DataStore } from '../shell/data-store';\nimport { Observable, of } from 'rxjs';\n\nexport interface IResolvedRouteData<T> {\n  data: T | DataStore<T>;\n}\n\nexport class ResolverHelper<T> {\n  // More info on function overloads here: https://www.typescriptlang.org/docs/handbook/functions.html#overloads\n  public static extractData<T>(source: (T | DataStore<T>), constructor: (new(...args: any[]) => T)): Observable<T> {\n    if (source instanceof DataStore) {\n      return source.state;\n    } else if (source instanceof constructor) {\n      // The right side of instanceof should be an expression evaluating to a constructor function (ie. a class), not a type\n      // That's why we included an extra parameter which acts as a constructor function for type T\n      // (see: https://github.com/microsoft/TypeScript/issues/5236)\n      return of(source);\n    }\n  }\n}\n"]}