{"version":3,"sources":["webpack:///src/app/firebase/crud/user/create/firebase-create-user.modal.html","webpack:///src/app/firebase/crud/listing/firebase-listing.module.ts","webpack:///src/app/firebase/crud/user/create/firebase-create-user.modal.ts","webpack:///src/app/firebase/crud/listing/firebase-listing.page.ts","webpack:///src/app/firebase/crud/listing/firebase-listing.page.html","webpack:///src/app/firebase/crud/listing/firebase-listing.resolver.ts"],"names":["routes","path","component","resolve","data","FirebaseListingPageModule","FirebaseCreateUserModal","modalController","firebaseCrudService","userData","skills","avatar","createUserForm","name","required","lastname","email","compose","pattern","phone","birthdate","getSkills","subscribe","map","controls","push","value","dismiss","unix","createUser","then","dismissModal","getTop","swipeToClose","presentingElement","create","modal","onDidDismiss","link","present","get","FirebaseListingPage","route","routerOutlet","showAgeFilter","searchSubject","searchFiltersObservable","asObservable","stateSubscription","unsubscribe","searchQuery","rangeForm","dual","lower","upper","resolvedRouteData","listingDataStore","updateSearchObservable","pipe","filters","filteredDataSource","searchUsersByAge","searchingShellModel","searchingDelay","dataSourceWithShellObservable","AppendShell","filteredItems","query","isShell","queryFilteredItems","filter","item","toLowerCase","includes","Object","assign","state","items","error","console","log","nativeEl","next","FirebaseListingResolver","dataSource","getListingDataSource","dataStore","getListingStore"],"mappings":"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","file":"listing-firebase-listing-module-ngfactory-es5.js","sourcesContent":["<!-- This is the proper way if you have submit button outside your ion-content form (typically in the ion-header or ion-footer) -->\n<!-- (ref: https://github.com/ionic-team/ionic/issues/16661) -->\n<form class=\"create-user-form ion-page\" [formGroup]=\"createUserForm\" (ngSubmit)=\"createUser()\">\n  <ion-header>\n    <ion-toolbar color=\"primary\">\n      <ion-buttons slot=\"end\">\n        <ion-button (click)=\"dismissModal()\">\n          <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n        </ion-button>\n      </ion-buttons>\n      <ion-title>New User</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-content class=\"create-user-content\">\n    <ion-row class=\"select-user-image-row\">\n      <ion-col class=\"user-image-col\" size=\"5\">\n        <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n          <app-image-shell [display]=\"'cover'\" class=\"user-image\" animation=\"spinner\" [src]=\"userData.avatar\" [alt]=\"'user image'\"></app-image-shell>\n        </app-aspect-ratio>\n        <ion-button class=\"change-image-btn\" color=\"secondary\" (click)=\"changeUserImage()\">\n          <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"camera\"></ion-icon>\n        </ion-button>\n      </ion-col>\n    </ion-row>\n\n    <section class=\"user-details-fields fields-section\">\n      <ion-list class=\"inputs-list\" lines=\"full\">\n        <ion-item class=\"input-item\">\n          <ion-label color=\"secondary\" position=\"floating\">Name</ion-label>\n          <ion-input type=\"text\" formControlName=\"name\" required></ion-input>\n        </ion-item>\n        <ion-item class=\"input-item\">\n          <ion-label color=\"secondary\" position=\"floating\">Last name</ion-label>\n          <ion-input type=\"text\" formControlName=\"lastname\" required></ion-input>\n        </ion-item>\n        <ion-item class=\"input-item\">\n          <ion-label color=\"secondary\" position=\"floating\">Date of Birth</ion-label>\n          <ion-datetime display-format=\"DD/MM/YYYY\" picker-format=\"DD MMMM YYYY\" formControlName=\"birthdate\" required></ion-datetime>\n        </ion-item>\n        <ion-item class=\"input-item\">\n          <ion-label color=\"secondary\" position=\"floating\">Phone number</ion-label>\n          <ion-input type=\"tel\" formControlName=\"phone\" required></ion-input>\n        </ion-item>\n        <ion-item class=\"input-item\">\n          <ion-label color=\"secondary\" position=\"floating\">Email</ion-label>\n          <ion-input type=\"email\" formControlName=\"email\" required></ion-input>\n        </ion-item>\n      </ion-list>\n    </section>\n\n    <!-- <section class=\"user-experience-fields fields-section\">\n      <h5 class=\"section-header\">Experience in</h5>\n      <ion-row class=\"checkbox-tags rounded-checkbox-tags\">\n        <ion-item formArrayName=\"skills\" lines=\"none\" class=\"checkbox-tag rounded-tag\" *ngFor=\"let skill of skillsFormArray.controls; let i = index;\">\n          <ion-label class=\"tag-label\">{{skills[i].name}}</ion-label>\n          <ion-checkbox [formControlName]=\"i\"></ion-checkbox>\n        </ion-item>\n      </ion-row>\n    </section> -->\n\n    <!-- <section class=\"user-languages-fields fields-section\">\n      <h5 class=\"section-header\">Languages</h5>\n      <ion-row class=\"range-item-row\">\n        <ion-col size=\"12\">\n          <div class=\"range-header\">\n            <span class=\"range-label\">English</span>\n            <span class=\"range-value\">{{ changeLangValue(createUserForm.controls.english.value) }}</span>\n          </div>\n        </ion-col>\n        <ion-col size=\"12\">\n          <ion-range class=\"range-control\" formControlName=\"english\" color=\"secondary\" min=\"1\" max=\"10\" step=\"1\"></ion-range>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"range-item-row\">\n        <ion-col size=\"12\">\n          <div class=\"range-header\">\n            <span class=\"range-label\">Spanish</span>\n            <span class=\"range-value\">{{ changeLangValue(createUserForm.controls.spanish.value) }}</span>\n          </div>\n        </ion-col>\n        <ion-col size=\"12\">\n          <ion-range class=\"range-control\" formControlName=\"spanish\" color=\"secondary\" min=\"1\" max=\"10\" step=\"1\"></ion-range>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"range-item-row\">\n        <ion-col size=\"12\">\n          <div class=\"range-header\">\n            <span class=\"range-label\">French</span>\n            <span class=\"range-value\">{{ changeLangValue(createUserForm.controls.french.value) }}</span>\n          </div>\n        </ion-col>\n        <ion-col size=\"12\">\n          <ion-range class=\"range-control\" formControlName=\"french\" color=\"secondary\" min=\"1\" max=\"10\" step=\"1\"></ion-range>\n        </ion-col>\n      </ion-row>\n    </section> -->\n  </ion-content>\n\n  <ion-footer>\n    <ion-row class=\"form-actions-wrapper\">\n      <ion-col>\n        <ion-button class=\"submit-btn\" expand=\"block\" color=\"secondary\" type=\"submit\" fill=\"solid\" click=\"createUserForm.valid\">CREATE</ion-button>\n      </ion-col>\n    </ion-row>\n  </ion-footer>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { FirebaseListingPage } from './firebase-listing.page';\nimport { FirebaseListingResolver } from './firebase-listing.resolver';\nimport { ComponentsModule } from '../../../components/components.module';\nimport { FirebaseCrudService } from '../firebase-crud.service';\nimport { FirebaseCreateUserModal } from '../user/create/firebase-create-user.modal';\nimport { FirebaseCrudModule } from '../firebase-crud.module';\nimport { SelectUserImageModal } from '../user/select-image/select-user-image.modal';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FirebaseListingPage,\n    resolve: {\n      data: FirebaseListingResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ComponentsModule,\n    RouterModule.forChild(routes),\n    FirebaseCrudModule\n  ],\n  declarations: [\n    FirebaseListingPage,\n    FirebaseCreateUserModal\n  ],\n  entryComponents: [\n    FirebaseCreateUserModal,\n    SelectUserImageModal\n  ],\n  providers: [\n    FirebaseCrudService,\n    FirebaseListingResolver\n  ]\n})\nexport class FirebaseListingPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Validators, FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as dayjs from 'dayjs';\n\nimport { CheckboxCheckedValidator } from '../../../../validators/checkbox-checked.validator';\n\nimport { FirebaseUserModel } from '../firebase-user.model';\nimport { SelectUserImageModal } from '../select-image/select-user-image.modal';\nimport { FirebaseCrudService } from '../../firebase-crud.service';\n\n@Component({\n  selector: 'app-firebase-create-user',\n  templateUrl: './firebase-create-user.modal.html',\n  styleUrls: [\n    './styles/firebase-create-user.modal.scss',\n    './styles/firebase-create-user.shell.scss'\n  ],\n})\nexport class FirebaseCreateUserModal implements OnInit {\n  createUserForm: FormGroup;\n  userData: FirebaseUserModel = new FirebaseUserModel();\n  skills = [];\n\n  constructor(\n    private modalController: ModalController,\n    public firebaseCrudService: FirebaseCrudService\n  ) { }\n\n  ngOnInit() {\n    // default image\n    this.userData.avatar = 'https://s3-us-west-2.amazonaws.com/ionicthemes/otros/avatar-placeholder.png';\n\n    this.createUserForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      lastname: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      phone: new FormControl('', Validators.required),\n      birthdate: new FormControl(Validators.required),\n      // skills: new FormArray([], CheckboxCheckedValidator.minSelectedCheckboxes(1)),\n      // spanish: new FormControl(),\n      // english: new FormControl(),\n      // french: new FormControl()\n    });\n\n    this.firebaseCrudService.getSkills().subscribe(skills => {\n      this.skills = skills;\n      // create skill checkboxes\n      this.skills.map(() => {\n        (this.createUserForm.controls.skills as FormArray).push(new FormControl());\n      });\n    });\n  }\n\n  get skillsFormArray() { return <FormArray>this.createUserForm.get('skills'); }\n\n  changeLangValue(value): string {\n    switch (true) {\n      case (value <= 3 ):\n        return 'Novice';\n      case (value > 3 && value <= 6 ):\n        return 'Competent';\n      case (value > 6 ):\n        return 'Expert';\n    }\n  }\n\n  dismissModal() {\n   this.modalController.dismiss();\n  }\n\n  createUser() {\n    this.userData.name = this.createUserForm.value.name;\n    this.userData.lastname = this.createUserForm.value.lastname;\n    this.userData.birthdate = dayjs(this.createUserForm.value.birthdate).unix(); // save it in timestamp\n    this.userData.phone = this.createUserForm.value.phone;\n    this.userData.email = this.createUserForm.value.email;\n    // this.userData.languages.spanish = this.createUserForm.value.spanish;\n    // this.userData.languages.english = this.createUserForm.value.english;\n    // this.userData.languages.french = this.createUserForm.value.french;\n\n    // // get the ids of the selected skills\n    // const selectedSkills = [];\n\n    // this.createUserForm.value.skills\n    // .map((value: any, index: number) => {\n    //   if (value) {\n    //     selectedSkills.push(this.skills[index].id);\n    //   }\n    // });\n    // this.userData.skills = selectedSkills;\n\n    this.firebaseCrudService.createUser(this.userData)\n    .then(() => {\n      this.dismissModal();\n    });\n  }\n\n  async changeUserImage() {\n    const modal = await this.modalController.create({\n      component: SelectUserImageModal,\n      swipeToClose: true,\n      presentingElement: await this.modalController.getTop()\n    });\n\n    modal.onDidDismiss().then(avatar => {\n      if (avatar.data != null) {\n        this.userData.avatar = avatar.data.link;\n      }\n    });\n    await modal.present();\n  }\n\n}\n","import { Component, OnInit, OnDestroy, HostBinding } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ModalController, IonRouterOutlet } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Observable, ReplaySubject, Subscription, merge } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\n\nimport { FirebaseListingItemModel } from './firebase-listing.model';\nimport { FirebaseCreateUserModal } from '../user/create/firebase-create-user.modal';\nimport { DataStore, ShellModel } from '../../../../app/shell/data-store';\nimport { FirebaseCrudService } from '../firebase-crud.service';\n\n\n@Component({\n  selector: 'app-firebase-listing',\n  templateUrl: './firebase-listing.page.html',\n  styleUrls: [\n    './styles/firebase-listing.page.scss',\n    './styles/firebase-listing.ios.scss',\n    './styles/firebase-listing.shell.scss'\n  ],\n})\nexport class FirebaseListingPage implements OnInit, OnDestroy {\n  rangeForm: FormGroup;\n  searchQuery: string;\n  showAgeFilter = false;\n\n  searchSubject: ReplaySubject<any> = new ReplaySubject<any>(1);\n  searchFiltersObservable: Observable<any> = this.searchSubject.asObservable();\n\n  listingDataStore: DataStore<Array<FirebaseListingItemModel>>;\n  stateSubscription: Subscription;\n\n  // Use Typescript intersection types to enable docorating the Array of firebase models with a shell model\n  // (ref: https://www.typescriptlang.org/docs/handbook/advanced-types.html#intersection-types)\n  items: Array<FirebaseListingItemModel> & ShellModel;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.items && this.items.isShell) ? true : false;\n  }\n\n  constructor(\n    public firebaseCrudService: FirebaseCrudService,\n    public modalController: ModalController,\n    private route: ActivatedRoute,\n    private routerOutlet: IonRouterOutlet\n  ) { }\n\n  ngOnDestroy(): void {\n    this.stateSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.searchQuery = '';\n\n    this.rangeForm = new FormGroup({\n      dual: new FormControl({lower: 1, upper: 100})\n    });\n\n    this.route.data.subscribe(\n      (resolvedRouteData) => {\n        this.listingDataStore = resolvedRouteData['data'];\n\n        // We need to avoid having multiple firebase subscriptions open at the same time to avoid memory leaks\n        // By using a switchMap to cancel previous subscription each time a new one arrives,\n        // we ensure having just one subscription (the latest)\n        const updateSearchObservable = this.searchFiltersObservable.pipe(\n          switchMap((filters) => {\n            const filteredDataSource = this.firebaseCrudService.searchUsersByAge(\n              filters.lower,\n              filters.upper\n            );\n            // Send a shell until we have filtered data from Firebase\n            const searchingShellModel = [\n              new FirebaseListingItemModel(),\n              new FirebaseListingItemModel()\n            ];\n            // Wait on purpose some time to ensure the shell animation gets shown while loading filtered data\n            const searchingDelay = 400;\n\n            const dataSourceWithShellObservable = DataStore.AppendShell(filteredDataSource, searchingShellModel, searchingDelay);\n\n            return dataSourceWithShellObservable.pipe(\n              map(filteredItems => {\n                // Just filter items by name if there is a search query and they are not shell values\n                if (filters.query !== '' && !filteredItems.isShell) {\n                  const queryFilteredItems = filteredItems.filter(item =>\n                    item.name.toLowerCase().includes(filters.query.toLowerCase()\n                  ));\n                  // While filtering we strip out the isShell property, add it again\n                  return Object.assign(queryFilteredItems, {isShell: filteredItems.isShell});\n                } else {\n                  return filteredItems;\n                }\n              })\n            );\n          })\n        );\n\n        // Keep track of the subscription to unsubscribe onDestroy\n        // Merge filteredData with the original dataStore state\n        this.stateSubscription = merge(\n          this.listingDataStore.state,\n          updateSearchObservable\n        ).subscribe(\n          (state) => {\n            this.items = state;\n          },\n          (error) => console.log(error),\n          () => console.log('stateSubscription completed')\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  async openFirebaseCreateModal() {\n    const modal = await this.modalController.create({\n      component: FirebaseCreateUserModal,\n      swipeToClose: true,\n      presentingElement: this.routerOutlet.nativeEl\n    });\n    await modal.present();\n  }\n\n  searchList() {\n    this.searchSubject.next({\n      lower: this.rangeForm.controls.dual.value.lower,\n      upper: this.rangeForm.controls.dual.value.upper,\n      query: this.searchQuery\n    });\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button color=\"light\"></ion-menu-button>\n    </ion-buttons>\n    <ion-title>Firebase</ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"openFirebaseCreateModal()\">\n        <ion-icon slot=\"icon-only\" name=\"add\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n\n  <ion-toolbar class=\"filters-toolbar\">\n    <ion-row class=\"searchbar-row\" align-items-center>\n      <ion-col>\n        <ion-searchbar class=\"items-searchbar\" animated [(ngModel)]=\"searchQuery\" (ionChange)=\"searchList()\" placeholder=\"Filter by name...\"></ion-searchbar>\n      </ion-col>\n      <ion-col class=\"call-to-action-col\">\n        <ion-button fill=\"clear\" color=\"secondary\" class=\"filters-btn\" (click)=\"showAgeFilter = !showAgeFilter\">\n          <ion-icon slot=\"icon-only\" name=\"options\"></ion-icon>\n        </ion-button>\n      </ion-col>\n    </ion-row>\n    <form [formGroup]=\"rangeForm\" [hidden]=\"!showAgeFilter\">\n      <ion-row class=\"range-item-row\">\n        <ion-col size=\"12\">\n          <div class=\"range-header\">\n            <span class=\"range-value\">{{ rangeForm.controls.dual.value.lower }}</span>\n            <span class=\"range-label\">Filter by age</span>\n            <span class=\"range-value\">{{ rangeForm.controls.dual.value.upper }}</span>\n          </div>\n        </ion-col>\n        <ion-col size=\"12\">\n          <ion-range class=\"range-control\" formControlName=\"dual\" color=\"secondary\" pin=\"true\" dualKnobs=\"true\" (ionChange)=\"searchList()\" min=\"1\" max=\"100\" step=\"1\" debounce=\"400\"></ion-range>\n        </ion-col>\n      </ion-row>\n    </form>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"firebase-listing-content\">\n  <ion-list class=\"items-list\" *ngIf=\"items?.length > 0\">\n    <ion-item class=\"list-item\" *ngFor=\"let item of items\" [routerLink]=\"['/firebase/crud/details', item.id]\">\n      <ion-row class=\"user-row\">\n        <ion-col size=\"3\" class=\"user-image-wrapper\">\n          <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n            <app-image-shell class=\"user-image\" animation=\"spinner\" [display]=\"'cover'\" [src]=\"item.avatar\" [alt]=\"'item image'\"></app-image-shell>\n          </app-aspect-ratio>\n        </ion-col>\n        <ion-col class=\"user-data-wrapper\">\n          <div class=\"user-info\">\n            <h3 class=\"user-name\">\n              <app-text-shell animation=\"bouncing\" [data]=\"item.name?.concat(' ').concat(item.lastname)\"></app-text-shell>\n            </h3>\n            <h5 class=\"user-age\">\n              <app-text-shell animation=\"bouncing\" [data]=\"item.age?.toString().concat(' years old')\"></app-text-shell>\n            </h5>\n          </div>\n        </ion-col>\n      </ion-row>\n    </ion-item>\n  </ion-list>\n  <h3 *ngIf=\"items?.length == 0\" class=\"empty-list-message\">\n    No users found for the selected filters.\n  </h3>\n</ion-content>\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { FirebaseListingItemModel } from './firebase-listing.model';\nimport { FirebaseCrudService } from '../firebase-crud.service';\nimport { DataStore } from '../../../shell/data-store';\n\n@Injectable()\nexport class FirebaseListingResolver implements Resolve<any> {\n\n  constructor(private firebaseCrudService: FirebaseCrudService) {}\n\n  resolve() {\n    const dataSource: Observable<Array<FirebaseListingItemModel>> = this.firebaseCrudService.getListingDataSource();\n\n    const dataStore: DataStore<Array<FirebaseListingItemModel>> = this.firebaseCrudService.getListingStore(dataSource);\n\n    return dataStore;\n  }\n}\n"]}