{"version":3,"sources":["./src/app/wood/details/wood-details.resolver.ts","./src/app/wood/details/wood-details.module.ts","./src/app/wood/details/wood-details.page.html","./src/app/wood/details/wood-details.page.ts"],"names":[],"mappings":"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","file":"wood-details-wood-details-module-ngfactory-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { woodService } from '../wood.service';\nimport { woodDetailsModel } from './wood-details.model';\n\n@Injectable()\nexport class woodDetailsResolver implements Resolve<DataStore<woodDetailsModel>> {\n\n  constructor(private woodService: woodService) {}\n\n  resolve(route: ActivatedRouteSnapshot): DataStore<woodDetailsModel> {\n    const itemSlug = route.paramMap.get('productId');\n\n    const dataSource: Observable<woodDetailsModel> = this.woodService.getDetailsDataSource(itemSlug);\n    const dataStore: DataStore<woodDetailsModel> = this.woodService.getDetailsStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { woodService } from '../wood.service';\nimport { woodDetailsPage } from './wood-details.page';\nimport { woodDetailsResolver } from './wood-details.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: woodDetailsPage,\n    resolve: {\n      data: woodDetailsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    woodDetailsPage\n  ],\n  providers: [\n    woodDetailsResolver,\n    woodService\n  ]\n})\nexport class woodDetailsPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories/wood\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      <app-text-shell [data]=\"details?.name\"></app-text-shell>\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"wood-details-content\">\n  <ion-row class=\"image-row\">\n    <ion-col size=\"12\">\n      <app-image-shell [display]=\"'cover'\" animation=\"spinner\" class=\"add-overlay showcase-image\"\n        [src]=\"details?.showcaseImage\">\n        <app-aspect-ratio [ratio]=\"{ w: 64, h: 40 }\">\n          <div class=\"icon-wrapper\">\n            <app-aspect-ratio [ratio]=\"{ w: 1, h: 1 }\">\n              <app-image-shell class=\"icon-image\" [src]=\"details?.icon\"></app-image-shell>\n            </app-aspect-ratio>\n          </div>\n        </app-aspect-ratio>\n      </app-image-shell>\n    </ion-col>\n  </ion-row>\n  <!-- <ion-row class=\"description-row\">\n    <ion-col size=\"9\">\n      <h3 class=\"details-name\">\n        <app-text-shell [data]=\"details?.name\"></app-text-shell>\n      </h3>\n      <p class=\"details-style\">\n        <app-text-shell [data]=\"details?.style\"></app-text-shell>\n      </p>\n    </ion-col>\n  </ion-row> -->\n\n\n\n  <ion-slides class=\"walkthrough-slides\" pager=\"true\" [options]=\"slidesOptions\">\n\n      <!-- Perimiter Calculations -->\n\n      <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Perimiter'\">\n        <ion-row class=\"slide-inner-row\">\n          <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n  \n          <ion-card >\n            <img src=\"/assets/images/simple_rectangle.png\" />\n            <ion-card-header>\n              <ion-card-title>\n                <app-text-shell [data]=\"details?.name\"></app-text-shell>\n              </ion-card-title>\n              <ion-card-subtitle>\n                <app-text-shell [data]=\"details?.style\"></app-text-shell>\n              </ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n                <ion-row class=\"slide-inner-row\">\n                  <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                  <!--  <ion-row class=\"description-row\">\n                    <img\n                      src=\"/assets/images/simple_rectangle.png\"\n                      class=\"ion-padding\"\n                    />\n                  </ion-row> -->\n                  <form>\n                    <ion-list class=\"ion-padding\">\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Side 1:</ion-label>\n                        <p [innerHTML]=\"side1\" type=\"number\"></p>\n                        <p style=\"margin-left: 5px;\">m</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Side 2:</ion-label>\n                        <p [innerHTML]=\"side2\" type=\"number\"></p>\n                        <p style=\"margin-left: 5px;\">m</p>\n                      </ion-item>\n                      <ion-item type=\"submit\" class=\"ion-padding\">\n                        <ion-label>Side 3:</ion-label>\n                        <ion-input name=\"side3\" [(ngModel)]=\"side3\" maxlength=\"4\"></ion-input>\n                        <p style=\"margin-left: 5px;\">m</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Side 4:</ion-label>\n                        <ion-input name=\"side4\" [(ngModel)]=\"side4\" maxlength=\"4\"></ion-input>\n                        <p style=\"margin-left: 5px;\">m</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Total:</ion-label>\n                        <ion-input clear-input name=\"total\" [(ngModel)]=\"total\"></ion-input>\n                        <p style=\"margin-left: 5px;\">m2</p>\n                      </ion-item>\n                    </ion-list>\n                    <div class=\"ion-padding\">\n                      <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimple()\">\n                        Submit\n                      </ion-button>\n                    </div>\n                  </form>\n                </ion-row>\n              </ion-slide>\n            </ion-card-content>\n          </ion-card>\n        </ion-row>\n      </ion-slide>\n      \n       <!-- Area Calculations -->\n  \n       <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Area'\">\n        <ion-row class=\"slide-inner-row\">\n          <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n  \n          <ion-card >\n            <img src=\"/assets/images/simple_rectangle_area.png\" />\n            <ion-card-header>\n              <ion-card-title>\n                <app-text-shell [data]=\"details?.name\"></app-text-shell>\n              </ion-card-title>\n              <ion-card-subtitle>\n                <app-text-shell [data]=\"details?.style\"></app-text-shell>\n              </ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n                <ion-row class=\"slide-inner-row\">\n                  <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                  <!--  <ion-row class=\"description-row\">\n                    <img\n                      src=\"/assets/images/simple_rectangle.png\"\n                      class=\"ion-padding\"\n                    />\n                  </ion-row> -->\n                  <form>\n                    <ion-list class=\"ion-padding\">\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Side 1:</ion-label>\n                        <p [innerHTML]=\"side1\" type=\"number\"></p>\n                        <p style=\"margin-left: 5px;\">m</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Side 2:</ion-label>\n                        <p [innerHTML]=\"side2\" type=\"number\"></p>\n                        <p style=\"margin-left: 5px;\">m</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Total:</ion-label>\n                        <ion-input clear-input name=\"totalArea\" [(ngModel)]=\"totalArea\"></ion-input>\n                        <p style=\"margin-left: 5px;\">m2</p>\n                      </ion-item>\n                    </ion-list>\n                    <div class=\"ion-padding\">\n                      <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimpleArea()\">\n                        Submit\n                      </ion-button>\n                    </div>\n                  </form>\n                </ion-row>\n              </ion-slide>\n            </ion-card-content>\n          </ion-card>\n        </ion-row>\n      </ion-slide>\n\n      <!-- Carpenters Calculations -->\n  \n      <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Carpenters'\">\n        <ion-row class=\"slide-inner-row\">\n          <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n  \n          <ion-card >\n            <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n            <ion-card-header>\n              <ion-card-title>\n                <app-text-shell [data]=\"details?.name\"></app-text-shell>\n              </ion-card-title>\n              <ion-card-subtitle>\n                <app-text-shell [data]=\"details?.style\"></app-text-shell>\n              </ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n                <ion-row class=\"slide-inner-row\">\n                  <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                  <!--  <ion-row class=\"description-row\">\n                    <img\n                      src=\"/assets/images/simple_rectangle.png\"\n                      class=\"ion-padding\"\n                    />\n                  </ion-row> -->\n                  <form>\n                    <ion-list class=\"ion-padding\">\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Number of carpenters in UK :</ion-label>\n                        <p [innerHTML]=\"carpenters\" type=\"number\"></p>\n                        <!-- <p style=\"margin-left: 5px;\">m</p> -->\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Expected increase :</ion-label>\n                        <p [innerHTML]=\"percentageincrease\" type=\"number\"></p>\n                        <p style=\"margin-left: 5px;\">%</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Total needed :</ion-label>\n                        <ion-input clear-input name=\"carpsNeeded\" [(ngModel)]=\"carpsNeeded\"></ion-input>\n                        <p style=\"margin-left: 5px;\">carpenters</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Total number :</ion-label>\n                        <ion-input clear-input name=\"totalCarps\" [(ngModel)]=\"totalCarps\"></ion-input>\n                        <p style=\"margin-left: 5px;\">carpenters</p>\n                      </ion-item>\n                    </ion-list>\n                    <div class=\"ion-padding\">\n                      <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateCarpenters()\">\n                        Submit\n                      </ion-button>\n                    </div>\n                  </form>\n                </ion-row>\n              </ion-slide>\n            </ion-card-content>\n          </ion-card>\n        </ion-row>\n      </ion-slide>\n\n       <!-- Windows Calculations -->\n  \n       <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Windows'\">\n        <ion-row class=\"slide-inner-row\">\n          <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n  \n          <ion-card >\n            <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n            <ion-card-header>\n              <ion-card-title>\n                <app-text-shell [data]=\"details?.name\"></app-text-shell>\n              </ion-card-title>\n              <ion-card-subtitle>\n                <app-text-shell [data]=\"details?.style\"></app-text-shell>\n              </ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n                <ion-row class=\"slide-inner-row\">\n                  <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                  <!--  <ion-row class=\"description-row\">\n                    <img\n                      src=\"/assets/images/simple_rectangle.png\"\n                      class=\"ion-padding\"\n                    />\n                  </ion-row> -->\n                  <form>\n                    <ion-list class=\"ion-padding\">\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Number of windows :</ion-label>\n                        <p [innerHTML]=\"noWindows\" type=\"number\"></p>\n                        <!-- <p style=\"margin-left: 5px;\">m</p> -->\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Length of window board :</ion-label>\n                        <p [innerHTML]=\"windowBoard\" type=\"number\"></p>\n                        <p style=\"margin-left: 5px;\">mm</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Timber required :</ion-label>\n                        <ion-input clear-input name=\"totalTimber\" [(ngModel)]=\"totalTimber\"></ion-input>\n                        <p style=\"margin-left: 5px;\">mm</p>\n                      </ion-item>\n                    </ion-list>\n                    <div class=\"ion-padding\">\n                      <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateWindows()\">\n                        Submit\n                      </ion-button>\n                    </div>\n                  </form>\n                </ion-row>\n              </ion-slide>\n            </ion-card-content>\n          </ion-card>\n        </ion-row>\n      </ion-slide>\n\n      <!-- Door Calculations -->\n  \n      <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Doors'\">\n        <ion-row class=\"slide-inner-row\">\n          <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n  \n          <ion-card >\n            <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n            <ion-card-header>\n              <ion-card-title>\n                <app-text-shell [data]=\"details?.name\"></app-text-shell>\n              </ion-card-title>\n              <ion-card-subtitle>\n                <app-text-shell [data]=\"details?.style\"></app-text-shell>\n              </ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n                <ion-row class=\"slide-inner-row\">\n                  <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                  <!--  <ion-row class=\"description-row\">\n                    <img\n                      src=\"/assets/images/simple_rectangle.png\"\n                      class=\"ion-padding\"\n                    />\n                  </ion-row> -->\n                  <form>\n                    <ion-list class=\"ion-padding\">\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Height :</ion-label>\n                        <p type=\"number\">2.1</p>\n                        <p style=\"margin-left: 5px;\">m</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Width :</ion-label>\n                        <p type=\"number\">1.2</p>\n                        <p style=\"margin-left: 5px;\">m</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Timber required :</ion-label>\n                        <ion-input clear-input name=\"timberPerDoor\" [(ngModel)]=\"timberPerDoor\"></ion-input>\n                        <p style=\"margin-left: 5px;\">m per door</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Number of Doors :</ion-label>\n                        <p [innerHTML]=\"noDoors\" type=\"number\"></p>\n                        <!-- <p style=\"margin-left: 5px;\">doors</p> -->\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Total timber required :</ion-label>\n                        <ion-input clear-input name=\"totalDoorTimber\" [(ngModel)]=\"totalDoorTimber\"></ion-input>\n                        <p style=\"margin-left: 5px;\">m</p>\n                      </ion-item>\n                    </ion-list>\n                    <div class=\"ion-padding\">\n                      <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateDoors()\">\n                        Submit\n                      </ion-button>\n                    </div>\n                  </form>\n                </ion-row>\n              </ion-slide>\n            </ion-card-content>\n          </ion-card>\n        </ion-row>\n      </ion-slide>\n\n      <!-- Time Calculations -->\n  \n      <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Travel Time'\">\n        <ion-row class=\"slide-inner-row\">\n          <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n  \n          <ion-card >\n            <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n            <ion-card-header>\n              <ion-card-title>\n                <app-text-shell [data]=\"details?.name\"></app-text-shell>\n              </ion-card-title>\n              <ion-card-subtitle>\n                <app-text-shell [data]=\"details?.style\"></app-text-shell>\n              </ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n                <ion-row class=\"slide-inner-row\">\n                  <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                  <!--  <ion-row class=\"description-row\">\n                    <img\n                      src=\"/assets/images/simple_rectangle.png\"\n                      class=\"ion-padding\"\n                    />\n                  </ion-row> -->\n                  <form>\n                    <ion-list class=\"ion-padding\">\n                       <ion-item class=\"ion-padding\">\n                        <ion-label>Speed :</ion-label>\n                        <p [innerHTML]=\"vanSpeed\" type=\"number\"></p>\n                        <p style=\"margin-left: 5px;\">mph</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Time :</ion-label>\n                        <p [innerHTML]=\"vanTime\" type=\"number\"></p>\n                        <p style=\"margin-left: 5px;\">hours</p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Distance :</ion-label>\n                        <ion-input clear-input name=\"vanDistance\" [(ngModel)]=\"vanDistance\"></ion-input>\n                        <p style=\"margin-left: 5px;\">miles</p>\n                      </ion-item>\n                    </ion-list>\n                    <div class=\"ion-padding\">\n                      <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateTravel()\">\n                        Submit\n                      </ion-button>\n                    </div>\n                  </form>\n                </ion-row>\n              </ion-slide>\n            </ion-card-content>\n          </ion-card>\n        </ion-row>\n      </ion-slide>\n     \n  </ion-slides>\n\n</ion-content>","import { Component, OnInit, AfterViewInit, ViewChild, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ToastController } from '@ionic/angular';\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { woodDetailsModel } from './wood-details.model';\nimport { IonSlides, MenuController } from '@ionic/angular';\nimport { analytics } from 'firebase';\nimport { compileDirectiveFromRender2 } from '@angular/compiler/src/render3/view/compiler';\nimport { AnyTxtRecord } from 'dns';\n\n\n@Component({\n  selector: 'app-wood-details',\n  templateUrl: './wood-details.page.html',\n  styleUrls: [\n    './styles/wood-details.page.scss',\n    './styles/wood-details.shell.scss'\n  ]\n\n})\nexport class woodDetailsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  slidesOptions: any = {\n    zoom: {\n      toggle: false // Disable zooming to prevent weird double tap zomming on slide images\n    }\n  };\n\n\n  subscriptions: Subscription;\n\n  // Area and Perimiter\n  side1: any;\n  side2: any;\n  side3: any;\n  side4: any;\n  totalArea: any;\n  total: any;\n  carpenters: any;\n  percentageincrease: any;\n  carpsNeeded:any;\n  totalCarps:any;\n  totalTimber:any;\n  noWindows: any;\n  windowBoard:any;\n  timberPerDoor:any;\n  noDoors:any;\n  totalDoorTimber:any;\n  vanSpeed:any;\n  vanTime:any;\n  vanDistance:any;\n\n  \n\n  details: woodDetailsModel;\n\n  @ViewChild(IonSlides, { static: true }) slides: IonSlides;\n\n  @HostBinding('class.first-slide-active') isFirstSlide = true;\n\n  @HostBinding('class.last-slide-active') isLastSlide = false;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.details && this.details.isShell) ? true : false;\n  }\n\n\n\n  constructor(public menu: MenuController, private route: ActivatedRoute, public toastController: ToastController) {\n\n    this.generateSides();\n\n  }\n\n  // Disable side menu for this page\n  ionViewDidEnter(): void {\n    this.menu.enable(true);\n  }\n\n  // Restore to default when leaving this page\n  ionViewDidLeave(): void {\n    this.menu.enable(true);\n  }\n\n  ngAfterViewInit(): void {\n    // ViewChild is set\n    this.slides.isBeginning().then(isBeginning => {\n      this.isFirstSlide = isBeginning;\n    });\n    this.slides.isEnd().then(isEnd => {\n      this.isLastSlide = isEnd;\n    });\n\n    // Subscribe to changes\n    this.slides.ionSlideWillChange.subscribe(changes => {\n      this.slides.isBeginning().then(isBeginning => {\n        this.isFirstSlide = isBeginning;\n      });\n      this.slides.isEnd().then(isEnd => {\n        this.isLastSlide = isEnd;\n      });\n    });\n  }\n\n  skipWalkthrough(): void {\n    // Skip to the last slide\n    this.slides.length().then(length => {\n      this.slides.slideTo(length);\n    });\n  }\n\n  generateSides(): void {\n    var precision = 10; // 1 decimals\n    //Area and perimiter\n    this.side1 = Math.floor(Math.random() * 15) + 5; \n    this.side2 = this.side1 /2;\n    //Carpenters\n    this.carpenters = Math.floor(Math.random() * 250000) + 100000; \n    this.percentageincrease = Math.floor(Math.random() * 20) + 5; \n    // Windows\n    this.noWindows = Math.floor(Math.random() * 30) + 5;\n    this.windowBoard = Math.floor(Math.random() * 600) + 300;\n    // Doors\n    this.noDoors = Math.floor(Math.random() * 30) + 10;\n    //Travel Time\n    this.vanSpeed = Math.floor(Math.random() * 50) + 30;\n    this.vanTime = Math.floor(Math.random() * (2 * precision - 1 * precision) + 1 * precision) / (1*precision);\n  }\n\n\n\n  ngOnInit(): void {\n\n\n\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n      .subscribe(\n        (resolvedRouteData: IResolvedRouteData<woodDetailsModel>) => {\n          // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n          this.subscriptions = ResolverHelper.extractData<woodDetailsModel>(resolvedRouteData.data, woodDetailsModel)\n            .subscribe(\n              (state) => {\n                this.details = state;\n              },\n              (error) => { }\n            );\n        },\n        (error) => { }\n      );\n  }\n\n  async presentToastCorrect() {\n    const toast = await this.toastController.create({\n      header: 'Correct!',\n      message: 'Well Done.',\n      position: 'bottom',\n      buttons: [\n        {\n          text: 'Next',\n          role: 'cancel',\n          handler: () => {\n            this.generateSides();\n            this.side3 = \"\";\n            this.side4 = \"\";\n            this.totalArea = \"\";\n            this.carpsNeeded = \"\";\n            this.totalCarps = \"\";\n            this.totalTimber = \"\";\n            this.timberPerDoor = \"\";\n            this.totalDoorTimber = \"\";\n            this.vanDistance = \"\";\n           \n          }\n        }\n      ]\n    });\n    toast.present();\n  }\n\n  async presentToastIncorrect() {\n    const toast = await this.toastController.create({\n      message: 'Try again!',\n      position: 'bottom',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n\n  calculateSimple():void {\n\n    \n\n    if (this.total == this.side1+this.side1+this.side2+this.side2) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  calculateSimpleArea():void {\n\n    \n\n    if (this.totalArea == this.side1*this.side2) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  calculateCarpenters():void {\n\n    var requiredCarps = this.carpenters / 100 * this.percentageincrease;\n    requiredCarps = Math.ceil(requiredCarps);\n    console.trace(requiredCarps);\n\n    if (this.carpsNeeded == requiredCarps && requiredCarps + this.carpenters == this.totalCarps) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n  calculateWindows():void {\n\n    var requiredTimber = this.noWindows * this.windowBoard;\n    //requiredTimber = Math.ceil(requiredTimber);\n    console.trace(requiredTimber);\n\n    if (requiredTimber == this.totalTimber) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n  calculateDoors():void {\n\n    var requiredTimber = this.noDoors * this.timberPerDoor;\n    requiredTimber = Math.round(requiredTimber * 100) / 100;\n    console.trace(requiredTimber);\n\n    if (requiredTimber == this.totalDoorTimber) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  calculateTravel():void {\n\n    var travelled = this.vanSpeed * this.vanTime;\n    travelled = Math.round(travelled * 100) / 100;\n    console.trace(travelled);\n\n    if (travelled == this.vanDistance) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n"],"sourceRoot":"webpack:///"}