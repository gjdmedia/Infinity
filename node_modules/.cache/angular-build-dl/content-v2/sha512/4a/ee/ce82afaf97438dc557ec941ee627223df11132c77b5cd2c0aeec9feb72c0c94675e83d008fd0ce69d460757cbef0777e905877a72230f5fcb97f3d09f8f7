{"version":3,"sources":["webpack:///src/app/carpentry/details/carpentry-details.resolver.ts","webpack:///src/app/carpentry/details/carpentry-details.page.ts","webpack:///src/app/carpentry/details/carpentry-details.module.ts","webpack:///src/app/carpentry/details/carpentry-details.page.html"],"names":["CarpentryDetailsResolver","carpentryService","route","itemSlug","paramMap","get","dataSource","getDetailsDataSource","dataStore","getDetailsStore","CarpentryDetailsPage","menu","toastController","router","slidesOptions","zoom","toggle","isFirstSlide","isLastSlide","generateSides","enable","slides","isBeginning","then","isEnd","ionSlideWillChange","subscribe","changes","length","slideTo","side1","Math","floor","random","side2","console","trace","side1a","side2a","round","side5a","side6a","spindleThickness","newelDistance","costTimber","costDelivery","plasterCoverage","timberCost","screwsCost","plugsCost","discount","joistLength","numerator","denominator","rotAmount","radius","subscriptions","data","resolvedRouteData","extractData","state","details","error","create","header","message","position","buttons","text","role","handler","side3","side4","side3a","side4a","total","totala","totalArea","totalTins","totalXVat","totalIncVat","vat","numberOfBoards","totalPlasterArea","totalPlasterAreaDoubled","totalXDiscount","discountTotal","totalCost","joistReplacement","diameter","circumference","toast","present","navigate","replaceUrl","duration","presentToastCorrect","presentToastIncorrect","spindlesNeeded","tinsRequired","vatAmount","requiredBoards","subTotal","discAmount","ceil","rotLevel","checkDiameter","pi","unsubscribe","isShell","routes","path","component","resolve","CarpentryDetailsPageModule"],"mappings":"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","file":"carpentry-details-carpentry-details-module-ngfactory-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { CarpentryService } from '../carpentry.service';\nimport { CarpentryDetailsModel } from './carpentry-details.model';\n\n@Injectable()\nexport class CarpentryDetailsResolver implements Resolve<DataStore<CarpentryDetailsModel>> {\n\n  constructor(private carpentryService: CarpentryService) {}\n\n  resolve(route: ActivatedRouteSnapshot): DataStore<CarpentryDetailsModel> {\n    const itemSlug = route.paramMap.get('productId');\n\n    const dataSource: Observable<CarpentryDetailsModel> = this.carpentryService.getDetailsDataSource(itemSlug);\n    const dataStore: DataStore<CarpentryDetailsModel> = this.carpentryService.getDetailsStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { Component, OnInit,AfterViewInit, ViewChild, HostBinding } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ToastController } from '@ionic/angular';\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { CarpentryDetailsModel } from './carpentry-details.model';\nimport { IonSlides, MenuController } from '@ionic/angular';\nimport { analytics } from 'firebase';\nimport { compileDirectiveFromRender2 } from '@angular/compiler/src/render3/view/compiler';\n\n\n\n@Component({\n  selector: 'app-carpentry-details',\n  templateUrl: './carpentry-details.page.html',\n  styleUrls: [\n    './styles/carpentry-details.page.scss',\n    './styles/carpentry-details.shell.scss'\n  ]\n  \n})\nexport class CarpentryDetailsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  slidesOptions: any = {\n    zoom: {\n      toggle: false // Disable zooming to prevent weird double tap zomming on slide images\n    }\n  };\n\n  \n  subscriptions: Subscription;\n  side1: any;\n  side2: any;\n  side3: any;\n  side4: any;\n  side1a: any;\n  side2a: any;\n  side3a: any;\n  side4a: any;\n  side5a: any;\n  side6a: any;\n  spindleThickness: any;\n  spindlesNeeded: any;\n  spindleSpace: any;\n  newelDistance: any;\n  joistLength: any;\n  rotAmount: any;\n  joistReplacement: any;\n  total: any;\n  totala: any;\n  totalArea: any;\n  totalTins: any;\n  costTimber: any;\n  costDelivery: any;\n  totalXVat: any;\n  vat: any;\n  totalIncVat: any;\n  totalPlasterArea: any;\n  totalPlasterAreaDoubled: any;\n  plasterCoverage: any;\n  numberOfBoards: any;\n  timberCost: any;\n  screwsCost: any;\n  plugsCost: any;\n  discount: any;\n  totalXDiscount: any;\n  discountTotal: any;\n  totalCost: any;\n  numerator: any;\n  denominator: any;\n  radius: any;\n  diameter: any;\n  circumference: any;\n\n\n  details: CarpentryDetailsModel;\n\n  @ViewChild(IonSlides, { static: true }) slides: IonSlides;\n\n  @HostBinding('class.first-slide-active') isFirstSlide = true;\n\n  @HostBinding('class.last-slide-active') isLastSlide = false;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.details && this.details.isShell) ? true : false;\n  }\n\n  \n\n  constructor(public menu: MenuController, private route: ActivatedRoute, public toastController: ToastController,  private router: Router,) { \n\n    this.generateSides();\n\n  }\n\n    // Disable side menu for this page\n    ionViewDidEnter(): void {\n      this.menu.enable(true);\n    }\n  \n    // Restore to default when leaving this page\n    ionViewDidLeave(): void {\n      this.menu.enable(true);\n    }\n\n    ngAfterViewInit(): void {\n      // ViewChild is set\n      this.slides.isBeginning().then(isBeginning => {\n        this.isFirstSlide = isBeginning;\n      });\n      this.slides.isEnd().then(isEnd => {\n        this.isLastSlide = isEnd;\n      });\n  \n      // Subscribe to changes\n      this.slides.ionSlideWillChange.subscribe(changes => {\n        this.slides.isBeginning().then(isBeginning => {\n          this.isFirstSlide = isBeginning;\n        });\n        this.slides.isEnd().then(isEnd => {\n          this.isLastSlide = isEnd;\n        });\n      });\n    }\n  \n    skipWalkthrough(): void {\n      // Skip to the last slide\n      this.slides.length().then(length => {\n        this.slides.slideTo(length);\n      });\n    }\n\n  generateSides():void {\n    this.side1 = Math.floor(Math.random() * 30) + 5; \n    this.side2 = this.side1 /2;\n    console.trace('Random: ', this.side1)\n\n    this.side1a = Math.floor(Math.random() * 30) + 5; \n    this.side2a = this.side1a * 0.384615385;\n    this.side2a = Math.round(this.side2a * 10) / 10;\n\n    this.side5a = this.side1a * 0.57;\n    this.side5a = Math.round(this.side5a * 10) / 10;\n\n    this.side6a = this.side1a * 0.615;\n    this.side6a = Math.round(this.side6a * 10) / 10;\n\n    this.spindleThickness = Math.floor(Math.random() * 35) + 30; \n    this.newelDistance = Math.floor(Math.random() * 4000) + 3000; \n\n    this.costTimber = Math.floor(Math.random() * 500) + 30; \n    this.costDelivery = Math.floor(Math.random() * 20) + 5; \n\n    this.plasterCoverage = 2.88;\n\n    this.timberCost = Math.floor(Math.random() * 400) + 100; \n    this.screwsCost = Math.floor(Math.random() * 100) + 10; \n    this.plugsCost = Math.floor(Math.random() * 100) + 10; \n    this.discount = Math.floor(Math.random() * 35) + 20; \n\n    this.joistLength = Math.floor(Math.random() * 15) + 2; \n    this.numerator = Math.floor(Math.random() * 3) + 1; \n    this.denominator = Math.floor(Math.random() * 8) + 4; \n    this.rotAmount = this.numerator + \" / \" + this.denominator;\n\n    this.radius = Math.floor(Math.random() * 300) + 10; \n\n\n\n  }\n\n\n\n  ngOnInit(): void {\n\n    \n\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<CarpentryDetailsModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<CarpentryDetailsModel>(resolvedRouteData.data, CarpentryDetailsModel)\n        .subscribe(\n          (state) => {\n            this.details = state;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n  \n  async presentToastCorrect() {\n    const toast = await this.toastController.create({\n      header: 'Correct!',\n      message: 'Well Done.',\n      position: 'bottom',\n      buttons: [\n         {\n          text: 'Next',\n          role: 'cancel',\n          handler: () => {\n            this.generateSides();\n            this.side3 = \"\";\n            this.side4 = \"\";\n            this.side3a = \"\";\n            this.side4a = \"\";\n            this.total = \"\";\n            this.totala = \"\";\n            this.totalArea = \"\";\n            this.totalTins = \"\";\n            this.totalXVat = \"\";\n            this.totalIncVat= \"\";\n            this.vat = \"\";\n            this.numberOfBoards = \"\";\n            this.totalPlasterArea = \"\";\n            this.totalPlasterAreaDoubled = \"\";\n            this.totalXDiscount = \"\";\n            this.discountTotal = \"\";\n            this.totalCost = \"\";\n            this.joistReplacement = \"\";\n            this.diameter = \"\";\n            this.circumference = \"\";\n          }\n        }\n      ]\n    });\n    toast.present();\n  }\n\n  async presentToastIncorrect() {\n    const toast = await this.toastController.create({\n      header: 'Sorry that is incorrect, retry or watch a video?',\n      // message: 'Try again',\n      position: 'bottom', \n      buttons: [\n         {\n          text: 'Retry',\n          role: 'cancel',\n          handler: () => {\n            console.trace('Retry');\n          }\n        },{\n          text: 'Video',\n          role: 'submit',\n          handler: () => {\n            console.trace('Video');\n            this.router.navigate(['video-playlist'], { replaceUrl: true });\n          },\n        }\n      ]\n    });\n    toast.present();\n  }\n\n  async presentToastIncorrect7() {\n    const toast = await this.toastController.create({\n      message: 'Try again!',\n      position: 'bottom',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  \n\n  calculateSimple():void {\n\n    \n\n    if (this.total == this.side1+this.side1+this.side2+this.side2) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  calculateSimpleArea():void {\n\n    \n\n    if (this.totalArea == this.side1*this.side2) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  calculateComplexArea():void {\n\n    \n\n    if (this.totalArea == (this.side1a*this.side2a)+(this.side4a*this.side5a)) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  calculateAdvanced():void {\n\n    \n\n    if (this.totala == this.side1a+this.side1a+this.side6a+this.side6a) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  calculateSpindles():void {\n\n    \n\n    if (this.spindlesNeeded = this.newelDistance/(this.spindleThickness+100)) {\n    console.trace('Correct!');\n\n     this.presentToastCorrect();\n     \n      \n    } else {\n\n      this.presentToastIncorrect();\n    }\n    \n  }\n\n  calculateSimplePaint():void {\n\n    var tinsRequired = Math.round((this.totalArea / 22) * 10) / 10;\n    console.trace(tinsRequired)\n\n    if (this.totalArea == this.side1*this.side2 && tinsRequired == this.totalTins)  {\n      console.trace('Correct!');\n  \n       this.presentToastCorrect();\n       \n        \n      } else {\n  \n        this.presentToastIncorrect();\n      }\n      \n    }\n\n    calculateSimpleTimber():void {\n\n      var vatAmount = (this.costTimber + this.costDelivery) * 0.2\n      console.trace(vatAmount)\n  \n      if (this.costTimber+this.costDelivery+ vatAmount == this.totalIncVat)  {\n        console.trace('Correct!');\n    \n         this.presentToastCorrect();\n         \n          \n        } else {\n    \n          this.presentToastIncorrect();\n        }\n        \n      }\n\n      calculatePlasteboard():void {\n\n        var requiredBoards = Math.round((this.totalPlasterAreaDoubled / 2.88) * 10) / 10;\n\n\n        if (this.totalPlasterAreaDoubled  == (this.side2*this.side1)*2 && this.numberOfBoards == requiredBoards )  {\n          console.trace('Correct!');\n      \n           this.presentToastCorrect();\n           \n            \n          } else {\n      \n            this.presentToastIncorrect();\n          }\n          \n        }\n\n        calculateDiscount():void {\n\n         \n          var subTotal = this.timberCost+this.plugsCost+this.screwsCost;\n          var discAmount = subTotal * (this.discount / 100);\n          discAmount = Math.ceil(discAmount * 100) / 100;\n\n          console.trace(\"Subtotal = \" + subTotal + \"Discount = \" + discAmount + \" Answer : \" + (subTotal - discAmount))\n\n          if (this.totalCost == subTotal - discAmount)  {\n            console.trace('Correct!');\n        \n             this.presentToastCorrect();\n             \n              \n            } else {\n        \n              this.presentToastIncorrect();\n            }\n            \n          }\n\n          calculateJoist():void {\n\n            var rotLevel = Math.round((this.joistLength * this.numerator / this.denominator) * 10) / 10;\n            console.trace(rotLevel + \" & \" + this.joistReplacement)\n            \n            if (rotLevel == this.joistReplacement)  {\n              console.trace('Correct!');\n          \n               this.presentToastCorrect();\n               \n                \n              } else {\n          \n                this.presentToastIncorrect();\n              }\n              \n            }\n\n            calculateCircumference():void {\n\n              var checkDiameter = Math.round((this.radius * 2) * 10) / 10;\n              var pi = Math.round((this.diameter * 3.14159265359) * 10) / 10;\n\n              console.trace(checkDiameter + \" & \" + this.diameter + \" Pi \" + pi)\n              \n              if (checkDiameter == this.diameter && this.circumference == pi)  {\n                console.trace('Correct!');\n            \n                 this.presentToastCorrect();\n                 \n                  \n                } else {\n            \n                  this.presentToastIncorrect();\n                }\n                \n              }\n\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { CarpentryService } from '../carpentry.service';\nimport { CarpentryDetailsPage } from './carpentry-details.page';\nimport { CarpentryDetailsResolver } from './carpentry-details.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CarpentryDetailsPage,\n    resolve: {\n      data: CarpentryDetailsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    CarpentryDetailsPage\n  ],\n  providers: [\n    CarpentryDetailsResolver,\n    CarpentryService\n  ]\n})\nexport class CarpentryDetailsPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories/carpentry\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      <app-text-shell [data]=\"details?.name\"></app-text-shell>\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"carpentry-details-content\">\n  <ion-row class=\"image-row\" > \n    <ion-col size=\"12\">\n      <app-image-shell [display]=\"'cover'\" animation=\"spinner\" class=\"add-overlay showcase-image\"\n        [src]=\"details?.showcaseImage\">\n        <app-aspect-ratio [ratio]=\"{ w: 64, h: 40 }\">\n          <div class=\"icon-wrapper\">\n            <app-aspect-ratio [ratio]=\"{ w: 1, h: 1 }\">\n              <app-image-shell class=\"icon-image\" [src]=\"details?.icon\"></app-image-shell>\n            </app-aspect-ratio>\n          </div>\n        </app-aspect-ratio>\n      </app-image-shell>\n    </ion-col>\n  </ion-row>\n  <!-- <ion-row class=\"description-row\">\n    <ion-col size=\"9\">\n      <h3 class=\"details-name\">\n        <app-text-shell [data]=\"details?.name\"></app-text-shell>\n      </h3>\n      <p class=\"details-style\">\n        <app-text-shell [data]=\"details?.style\"></app-text-shell>\n      </p>\n    </ion-col>\n  </ion-row> -->\n\n\n \n  <ion-slides class=\"walkthrough-slides\" pager=\"true\" [options]=\"slidesOptions\" >\n\n     <!-- Perimiter Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Skirting'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Intro</h4>\n\n        <ion-card >\n          <img src=\"/assets/images/simple_rectangle.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Side 3:</ion-label>\n                      <ion-input name=\"side3\" [(ngModel)]=\"side3\" maxlength=\"4\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 4:</ion-label>\n                      <ion-input name=\"side4\" [(ngModel)]=\"side4\" maxlength=\"4\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total:</ion-label>\n                      <ion-input clear-input name=\"total\" [(ngModel)]=\"total\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimple()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    <ion-slide class=\"last-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Skirting'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Advanced</h4>\n        <ion-card>\n          <img src=\"/assets/images/complex_rectangle.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1a\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2a\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Side 3:</ion-label>\n                      <ion-input name=\"side3a\" [(ngModel)]=\"side3a\" maxlength=\"4\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 4:</ion-label>\n                      <ion-input name=\"side4a\" [(ngModel)]=\"side4a\" maxlength=\"4\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 5:</ion-label>\n                      <p [innerHTML]=\"side5a\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 6:</ion-label>\n                      <p [innerHTML]=\"side6a\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total:</ion-label>\n                      <ion-input clear-input name=\"totala\" [(ngModel)]=\"total\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateAdvanced()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    \n\n     <!-- Area Calculations -->\n\n     <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Laminate'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Intro</h4>\n\n        <ion-card >\n          <img src=\"/assets/images/simple_rectangle_area.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total:</ion-label>\n                      <ion-input clear-input name=\"totalArea\" [(ngModel)]=\"totalArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimpleArea()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n    <ion-slide class=\"last-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Laminate'\">\n      <ion-row class=\"slide-inner-row\">\n        <h4 class=\"ion-padding\">Advanced</h4>\n        <ion-card>\n          <img src=\"/assets/images/complex_rectangle.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1a\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2a\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Side 3:</ion-label>\n                      <ion-input name=\"side3a\" [(ngModel)]=\"side3a\" maxlength=\"4\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 4:</ion-label>\n                      <ion-input name=\"side4a\" [(ngModel)]=\"side4a\" maxlength=\"4\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 5:</ion-label>\n                      <p [innerHTML]=\"side5a\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 6:</ion-label>\n                      <p [innerHTML]=\"side6a\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total:</ion-label>\n                      <ion-input clear-input name=\"totalArea\" [(ngModel)]=\"totalArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateAdvanced()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n     <!-- Spindle Calculations -->\n\n     <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Spindles'\">\n      <ion-row class=\"slide-inner-row\">\n        <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n\n        <ion-card >\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n         <!--  <ion-card-title>\n            \n            </ion-card-title> -->\n            <ion-card-subtitle>\n              Note: the distance between the spindles should be less than 100mm to conform to Building Regulations\n              <!-- <app-text-shell [data]=\"details?.style\"></app-text-shell> -->\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!-- <h4 class=\"ion-padding\">Intro</h4> -->\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Thickness of Spindles: </ion-label>\n                      <p [innerHTML]=\"spindleThickness\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Distance between newel posts: </ion-label>\n                      <p [innerHTML]=\"newelDistance\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Spindles needed: </ion-label>\n                      <ion-input clear-input name=\"spindlesNeeded\" [(ngModel)]=\"spindlesNeeded\"></ion-input>\n                      <p style=\"margin-left: 5px;\">spindles</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Space between: </ion-label>\n                      <ion-input clear-input name=\"spindleSpace\" [(ngModel)]=\"spindleSpace\"></ion-input>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSpindles()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n   \n     <!-- Paint Calculations -->\n\n     <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Paint'\">\n      <ion-row class=\"slide-inner-row\">\n       \n        <ion-card >\n          <img src=\"/assets/images/simple_rectangle_area.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n               \n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total Area:</ion-label>\n                      <ion-input clear-input name=\"totalArea\" [(ngModel)]=\"totalArea\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number of Tins:</ion-label>\n                      <ion-input clear-input name=\"totalTins\" [(ngModel)]=\"totalTins\"></ion-input>\n                      <p style=\"margin-left: 5px;\">tins</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimplePaint()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n  \n     \n       <!-- Timber Calculations -->\n  \n       <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Timber'\">\n        <ion-row class=\"slide-inner-row\">\n          <ion-card >\n            <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n            <ion-card-header>\n              <ion-card-title>\n                <app-text-shell [data]=\"details?.name\"></app-text-shell>\n              </ion-card-title>\n              <ion-card-subtitle>\n                <app-text-shell [data]=\"details?.style\"></app-text-shell>\n              </ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n                <ion-row class=\"slide-inner-row\">\n                 \n                  <!--  <ion-row class=\"description-row\">\n                    <img\n                      src=\"/assets/images/simple_rectangle.png\"\n                      class=\"ion-padding\"\n                    />\n                  </ion-row> -->\n                  <form>\n                    <ion-list class=\"ion-padding\">\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Cost of Timber: £</ion-label>\n                        <p [innerHTML]=\"costTimber\" type=\"number\"></p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Delivery Cost: £</ion-label>\n                        <p [innerHTML]=\"costDelivery\" type=\"number\"></p>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Total before VAT: £</ion-label>\n                        <ion-input clear-input name=\"totalXVat\" [(ngModel)]=\"totalXVat\"></ion-input>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>VAT at 20%: £</ion-label>\n                        <ion-input clear-input name=\"vat\" [(ngModel)]=\"vat\"></ion-input>\n                      </ion-item>\n                      <ion-item class=\"ion-padding\">\n                        <ion-label>Total Cost: £</ion-label>\n                        <ion-input clear-input name=\"totalIncVat\" [(ngModel)]=\"totalIncVat\"></ion-input>\n                      </ion-item>\n                    </ion-list>\n                    <div class=\"ion-padding\">\n                      <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateSimpleTimber()\">\n                        Submit\n                      </ion-button>\n                    </div>\n                  </form>\n                </ion-row>\n              </ion-slide>\n            </ion-card-content>\n          </ion-card>\n        </ion-row>\n      </ion-slide>\n\n\n       <!-- Area Calculations -->\n\n     <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Plasterboard'\">\n   \n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <img src=\"/assets/images/simple_rectangle_area.png\" />\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 1:</ion-label>\n                      <p [innerHTML]=\"side1\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Side 2:</ion-label>\n                      <p [innerHTML]=\"side2\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Total Area:</ion-label>\n                      <ion-input name=\"totalPlasterArea\" [(ngModel)]=\"totalPlasterArea\" maxlength=\"5\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Multiplied by 2:</ion-label>\n                      <ion-input name=\"totalPlasterAreaDoubled\" [(ngModel)]=\"totalPlasterAreaDoubled\" maxlength=\"4\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Area per plasterboard:</ion-label>\n                      <p [innerHTML]=\"plasterCoverage\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m2</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Number Required:</ion-label>\n                      <ion-input name=\"numberOfBoards\" [(ngModel)]=\"numberOfBoards\" maxlength=\"5\"></ion-input>\n                      <p style=\"margin-left: 5px;\">boards</p>\n                    </ion-item>\n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculatePlasteboard()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n\n    <!-- Discount Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Discount'\">\n   \n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Timber : £</ion-label>\n                      <p [innerHTML]=\"timberCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Screws : £</ion-label>\n                      <p [innerHTML]=\"screwsCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item type=\"submit\" class=\"ion-padding\">\n                      <ion-label>Wall PLugs : £</ion-label>\n                      <p [innerHTML]=\"plugsCost\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Discount : %</ion-label>\n                      <p [innerHTML]=\"discount\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Total before Discount : £</ion-label>\n                      <ion-input name=\"totalXDiscount\" [(ngModel)]=\"totalXDiscount\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Discount Total : £</ion-label>\n                      <ion-input name=\"discountTotal\" [(ngModel)]=\"discountTotal\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Final Price : £</ion-label>\n                      <ion-input name=\"totalCost\" [(ngModel)]=\"totalCost\" maxlength=\"6\"></ion-input>\n                    </ion-item>\n\n                   \n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateDiscount()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n\n    <!-- Joist Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Joist'\">\n   \n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Joint Measurement : </ion-label>\n                      <p [innerHTML]=\"joistLength\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Amount of Rot : </ion-label>\n                      <p [innerHTML]=\"rotAmount\" type=\"number\"></p>\n                    </ion-item>\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Amount to Replace :</ion-label>\n                      <ion-input name=\"joistReplacement\" [(ngModel)]=\"joistReplacement\" maxlength=\"6\"></ion-input>\n                      <p style=\"margin-left: 5px;\">m</p>\n                    </ion-item>\n\n                   \n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateJoist()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n\n    <!-- Circumference Calculations -->\n\n    <ion-slide class=\"first-slide illustration-and-decoration-slide\" *ngIf=\"details?.name =='Circumference'\">\n   \n      <ion-row class=\"slide-inner-row\">\n        <ion-card>\n          <!-- <img src=\"/assets/images/simple_rectangle_area.png\" /> -->\n          <ion-card-header>\n            <ion-card-title>\n              <app-text-shell [data]=\"details?.name\"></app-text-shell>\n            </ion-card-title>\n            <ion-card-subtitle>\n              <app-text-shell [data]=\"details?.style\"></app-text-shell>\n            </ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-slide class=\"first-slide illustration-and-decoration-slide\">\n              <ion-row class=\"slide-inner-row\">\n                <!--  <ion-row class=\"description-row\">\n                  <img\n                    src=\"/assets/images/simple_rectangle.png\"\n                    class=\"ion-padding\"\n                  />\n                </ion-row> -->\n                <form>\n                  <ion-list class=\"ion-padding\">\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Radius : </ion-label>\n                      <p [innerHTML]=\"radius\" type=\"number\"></p>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n                   \n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Diameter : </ion-label>\n                      <ion-input name=\"diameter\" [(ngModel)]=\"diameter\" maxlength=\"6\"></ion-input>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n\n                    <ion-item class=\"ion-padding\">\n                      <ion-label>Circumference : </ion-label>\n                      <ion-input name=\"circumference\" [(ngModel)]=\"circumference\" maxlength=\"7\"></ion-input>\n                      <p style=\"margin-left: 5px;\">mm</p>\n                    </ion-item>\n\n                   \n                  </ion-list>\n                  <div class=\"ion-padding\">\n                    <ion-button color=\"secondary\" expand=\"block\" type=\"submit\" (click)=\"calculateCircumference()\">\n                      Submit\n                    </ion-button>\n                  </div>\n                </form>\n              </ion-row>\n            </ion-slide>\n          </ion-card-content>\n        </ion-card>\n      </ion-row>\n    </ion-slide>\n\n      \n    \n\n  </ion-slides>\n\n</ion-content>"]}